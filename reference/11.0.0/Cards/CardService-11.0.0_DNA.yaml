---
openapi: 3.0.1
info:
  title: Card Service
  description: The Card service provides administration in respect to creation, modification, inquiry, and deletion of any type of EFT cards used by the holders. It supports operations managing the credit, debit, prepaid and private label cards.
  version: 11.0.0_DNA
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/CardService/11.0.0_DNA
  description: SwaggerHub API Auto Mocking
paths:
  /cardservice/cards/cards/secured:
    post:
      tags:
      - Get Card
      summary: Get Card.
      description: Get Card API retrieves various details of a debit card account such as the card type, card status and service charge account using an ATM or debit card number.
      operationId: CardInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Get Card
      x-child-product-name: Debit Cards
      x-core: DNA
  /cardservice/cards/cards/secured/list:
    post:
      tags:
      - Get Card List
      summary: Get Card List.
      description: Get Card List API retrieves a list of cards that are linked to a specific account or a specific party or the cards linked to a specific party for a particular account.<br>For DNA, this API also searches the list of cards matching a card identifier or the partial name associated with the card. As per the search criteria set in the request, this API returns the list of cards.<br>This API provides information related to ATM and Debit cards only. DNA does not support the card agreement types WWW (NFront Web), VRU (Voice Response Unit), MOB (Mobile Banking) or XCRD (External Credit Card) for this API response.
      operationId: CardListInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardListInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListInqOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Get Card List
      x-child-product-name: Debit Cards
      x-core: DNA
components:
  schemas:
    CardInqOperSecuredRequest:
      required:
      - CardSel
      properties:
        CardSel:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel'
    CardInqOperSecuredResponse:
      required:
      - CardRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardRec:
          type: array
          description: Details of a card record.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardRec'
    CardListInqOperSecuredRequest:
      required:
      - CardListSel
      properties:
        RecCtrlIn:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_RecCtrlIn'
        CardListSel:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel'
    CardListInqOperSecuredResponse:
      required:
      - CardListRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_RecCtrlOut'
        CardListRec:
          type: array
          description: |-
            Details of card list record.



            **Note:** This aggregate repeats multiple times based on the number of records returned in the response.
          items:
            $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggregate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    CardInqOperSecuredRequest_CardSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identifier of a card. \n\n\n\n**Note:** This field identifies the external card number of the card agreement."
        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of a card.



            **Note:** Same card number can be linked to multiple member number. Card sequence number is used to identify a specific card member number to display card details, such as issue date and expiry date.
      description: Unique information to identify a card record.
    CardInqOperSecuredRequest_CardSel:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel_CardKeys'
      description: Details of the selection criteria used to select the card record.
    CardInqOperSecuredResponse_CardKeys:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number of the card.



            **Note:** This field identifies the card agreement number identifier.

            Max length: 22 digits
        CardId:
          maxLength: 36
          type: string
          description: "Unique identifier of a card. \n\n\n\n**Note:** This field identifies the external card number of the card agreement for which the details are returned in the response."
      description: Unique information to identify a card record.
    CardInqOperSecuredResponse_CardInfo_ChargeFeeAcct:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.



            **Note:** Refers to the account number that is used while applying service charges.
      description: Details of the charge fee account that is designated to pay the fee charges.
    CardInqOperSecuredResponse_CardInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Limit amount in decimal format.



            **Note:** This field identifies the following:

            - Daily combined withdrawal limit amount if value of TrnType field is 'Withdrawal'.

            - Deposit limit amount if the value of the TrnType is 'DepositAvail'.
      description: Details of the applicable currency limit amount.
    CardInqOperSecuredResponse_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: Type of a transaction.
          enum:
          - Withdrawal
          - DepositAvail
        CurAmt:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CurAmt'
    CardInqOperSecuredResponse_CardInfo_MaxCreditLimitAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Daily cash withdrawal limit amount in decimal format.



            **Note:** This field identifies the applicable daily cash withdrawal limit amount.
      description: Details of the maximum daily credit amount that a customer may withdraw using a debit card as a credit card.
    CardInqOperSecuredResponse_CardInfo:
      type: object
      properties:
        CardType:
          type: string
          description: Type of a card agreement.
        CardTypeEnumDesc:
          maxLength: 80
          type: string
          description: Description of the enumeration value in the CardType field.
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.



            **Note:** This field provides status of the most recent card issued to the card member.
        CardDtlStatusEnumDesc:
          maxLength: 80
          type: string
          description: 'Description of enumeration value in the CardDtlStatus field. '
        CardStatusReason:
          type: string
          description: Value that indicates the reason for the card status.
        CardStatusReasonEnumDesc:
          maxLength: 80
          type: string
          description: 'Description of enumeration value in the CardStatusReason field. '
        ChargeFeeAcct:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_ChargeFeeAcct'
        IssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date on which the current card was issued to the card member.

            Format: YYYY-MM-DDThh:mm:ss.SSS

            Example: 2021-11-2007:25:34.SSS
        ExpDt:
          type: string
          description: |-
            Date after which the current card stands inactive.

            Format: YYYY-MM-DDThh:mm:ss.SSS

            Example: 2021-11-2007:25:34.SSS
          format: date
        PersonEmbossingName:
          type: object
          description: Details of the name to be embossed on the issuing card.
        EmbossingName:
          maxLength: 80
          type: string
          description: 'Full name of the person linked to the card agreement. '
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardTrnLimit'
        MaxCreditLimitAmt:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_MaxCreditLimitAmt'
        PINOffset:
          maxLength: 10
          type: string
          description: Offset number of the PIN assigned to the card.
      description: Detailed information about the card.
    CardInqOperSecuredResponse_CardRec:
      required:
      - CardInfo
      - CardKeys
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo'
    CardListInqOperSecuredRequest_RecCtrlIn:
      type: object
      properties:
        MaxRecLimit:
          type: integer
          description: |-
            Maximum number of records that can be returned within a single response.



            **Note:** If this field is not provided in the request, then all cards are returned in the response based on the selected criteria.
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: "Next record pointer to include in the response if additional records are available.\n\n\n\n**Note:** This field identifies the starting point of the next query.\n\nValue received in the response for the Cursor field is passed in this field to fetch the next set of records, if the additional transaction records are provided in the previous response of Card List Inquiry. "
      description: Details to specify the maximum number of records to be processed within a single response.
    CardListInqOperSecuredRequest_CardListSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identifier of a card. \n\n\n\n**Note:** This field identifies the external card number of the card agreement for which the details are returned in the response."
      description: Unique information to identify a card record.
    CardListInqOperSecuredRequest_CardListSel_PartyKeys:
      required:
      - PartyIdent
      - PartyIdentType
      type: object
      properties:
        PartyIdentType:
          type: string
          description: |-
            Type of party identification.



            **Note:** This field identifies the card agreement is owned by a person or an organization party.
          enum:
          - OrgNum
          - PersonNum
        PartyIdent:
          maxLength: 60
          type: string
          description: |-
            Unique identifier of a party.



            **Note:** This field identifies the primary owner of the card agreement.
      description: Unique information to identify the party record.
    CardListInqOperSecuredRequest_CardListSel_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.



            **Note:** Refers to account number.
        CardKeys:
          type: object
          description: Unique information to identify a card record.
      description: Unique information to identify the account record.
    CardListInqOperSecuredRequest_CardListSel:
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_CardKeys'
        PartyKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_PartyKeys'
        AcctKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_AcctKeys'
        Name:
          maxLength: 80
          type: string
          description: "Name of the person.\n\n\n\n**Note:** This field identifies the last name of the person linked to the card agreement. \n\nDNA supports partial search based on the last name that starts with value provided in this field.\n\nFor example: If the last name is sent in the request as 'Atj', then in the response include all the cards of the parties with last name 'Atj'. "
      description: Details of the selection criteria used to retrieve the list of cards.
    CardListInqOperSecuredResponse_RecCtrlOut:
      required:
      - SentRecCount
      type: object
      properties:
        SentRecCount:
          type: integer
          description: Total number of records that matched the selection criteria and returned in the response message.
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: |-
            Next record pointer to include in the response if additional records are available.



            **Note:** This field identifies the starting point of the next query. Value received in the response for the cursor field is passed in this field to fetch the next set of records if the additional transaction records are provided in the previous response of Card List Inquiry.
      description: Information retrieved for the criteria specified in the RecCtrlIn aggregate of the request message.
    CardListInqOperSecuredResponse_CardKeys:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number of the card.



            **Note:** This field identifies the card agreement identifier.
        CardId:
          maxLength: 36
          type: string
          description: "Unique identifier of a card. \n\n\n\n**Note:** This field identifies the external card number."
        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of a card.



            **Note:** This field refers to member number that identifies multiple cards for different customers.

            Same card number can be linked to multiple member number. Card sequence number is used to identify a specific card member number to display card details, such as issue date and expiry date.
      description: Unique information to identify a card record.
    CardListInqOperSecuredResponse_CardListInfo_PartyKeys:
      required:
      - PartyIdentType
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: Unique identification number of a party record.
        PartyIdentType:
          type: string
          description: |-
            Type of party identification.



            **Note:** This field identifies the card agreement is owned by a person or an organization party.
          enum:
          - OrgNum
          - PersonNum
      description: Unique information to identify the party record.
    CardListInqOperSecuredResponse_CardListInfo:
      type: object
      properties:
        CardType:
          type: string
          description: |-
            Type of a card.



            **Note:** This field identifies the type of card agreement.
        CardDtlStatus:
          type: string
          description: "Current status of the card. \n\n**Note:**\n\nCode identifying current status of the last card issued to the card member."
          enum:
          - ACT
          - CLOS
          - EXP
          - HOT
          - ISS
          - REST
          - INQ
          - LOCK
        OpenDt:
          type: string
          description: "Date on which the current card was issued.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        ExpDt:
          type: string
          description: "Date after which the card expires.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        EmbossingName:
          maxLength: 80
          type: string
          description: Full name of the person linked to the card agreement.
        PartyKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListInfo_PartyKeys'
      description: Information about the list of cards.
    CardListInqOperSecuredResponse_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: Code that indicates the status of the card.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status are changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-12-31T23:59:59.999"
      description: Status details of the card.
    CardListInqOperSecuredResponse_CardListRec:
      required:
      - CardKeys
      - CardListInfo
      - CardStatus
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardKeys'
        CardListInfo:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListInfo'
        CardStatus:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardStatus'
