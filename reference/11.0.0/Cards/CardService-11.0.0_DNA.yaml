---
openapi: 3.0.1
info:
  title: Card Service
  description: The Card service provides administration in respect to creation, modification, inquiry, and deletion of any type of EFT cards used by the holders. It supports operations managing the credit, debit, prepaid and private label cards.
  version: 11.0.0_DNA
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/CardService/11.0.0_DNA
  description: SwaggerHub API Auto Mocking
paths:
  /cardservice/cards/cards:
    put:
      tags:
      - Update Card
      summary: Update Card.
      description: "Update Card API modifies the ATM and Debit Card agreement details such as embossing details, PIN offset and PIN invalid entry allowed number.<br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: CardModOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardModOperRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardModOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardModOperResponse'
      x-group-name: Card Service
      x-proxy-name: Update Card
      x-child-product-name: Debit Cards
      x-core: DNA
    post:
      tags:
      - Add Card
      summary: Add Card.
      description: "Add Card API creates a card agreement with a party using PartyIdent/PartyIdentType in the request. At least one party and one primary account (Savings, Checking or Loans) is required to be associated to the card. Multiple accounts are linked to the card and are specified in AcctLinkData aggregate. The Maximum Transaction Limits (Deposit/Withdrawal) for each account is provided using CardTrnLimit Aggregate and CardType. This API provides information related to ATM and Debit cards only. <br>For DNA other than the card agreement types WWW (NFront Web), VRU (Voice Response Unit), MOB (Mobile Banking) or XCRD (External Credit Card) is considered as an ATM or debit card. <br>This API only supports card type that has 'Generated' as PIN generation method. Card type with 'Manual' or 'Manual (Generated Check Digit)' as PIN generation method are currently not supported in DNA. <br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: CardAddOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardAddOperRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAddOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAddOperResponse'
      x-group-name: Card Service
      x-proxy-name: Add Card
      x-child-product-name: Debit Cards
      x-core: DNA
  /cardservice/cards/cards/secured:
    post:
      tags:
      - Get Card
      summary: Get Card.
      description: "Get Card API retrieves various details of a debit card account such as the card type, card status and service charge account using an ATM or debit card number. <br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: CardInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Get Card
      x-child-product-name: Debit Cards
      x-core: DNA
  /cardservice/cards/cards/secured/list:
    post:
      tags:
      - Get Card List
      summary: Get Card List.
      description: "Get Card List API retrieves a list of cards that are linked to a specific account or a specific party or the cards linked to a specific party for a particular account. <br>For DNA, this API also searches the list of cards matching a card identifier or the partial name associated with the card. As per the search criteria set in the request, this API returns the list of cards. <br>This API provides information related to ATM and Debit cards only. DNA does not support the card agreement types WWW (NFront Web), VRU (Voice Response Unit), MOB (Mobile Banking) or XCRD (External Credit Card) for this API response. <br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: CardListInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardListInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListInqOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Get Card List
      x-child-product-name: Debit Cards
      x-core: DNA
components:
  schemas:
    CardAddOperRequest:
      required:
      - CardInfo
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        PartyCardRelInfo:
          type: array
          description: "Information about the party-to-card relationship. \n\n\n\n**Note:** *Required aggregate*\n\nDNA allows to associate one party to the card agreement. If the party is an organization, the agreement is issued in the name of oraganization, employees or affiliated card members.\n\nTo avoid the \"Acess/Authorization\" error from DNA, the PartyIdent should be associated with the same entity as the account number(s) linked to the card agreement."
          items:
            $ref: '#/components/schemas/CardAddOperRequest_PartyCardRelInfo'
        CardInfo:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo'
    CardAddOperResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType_DNA'
        CardStatusRec:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec'
    CardInqOperSecuredRequest:
      required:
      - CardSel
      properties:
        CardSel:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel'
    CardInqOperSecuredResponse:
      required:
      - CardRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType_DNA'
        CardRec:
          type: array
          description: Details of a card record.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardRec'
    CardListInqOperSecuredRequest:
      required:
      - CardListSel
      properties:
        RecCtrlIn:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_RecCtrlIn'
        CardListSel:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel'
    CardListInqOperSecuredResponse:
      required:
      - CardListRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType_DNA'
        RecCtrlOut:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_RecCtrlOut'
        CardListRec:
          type: array
          description: |-
            Details of card list record.



            **Note:** This aggregate repeats multiple times based on the number of records returned in the response.
          items:
            $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListRec'
    CardModOperRequest:
      required:
      - CardInfo
      - CardKeys
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        CardKeys:
          $ref: '#/components/schemas/CardModOperRequest_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo'
    CardModOperResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType_DNA'
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        CardStatusRec:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: Flag to indicate if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.
      description: Details of the exceptions that can be manually acknowledged by the client.
    StatusType_DNA:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Example value is:
              -  DNA
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        AdditionalStatus:
          $ref: '#/components/schemas/StatusType_DNA_AdditionalStatus'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    CardAddOperRequest_PartyRef_PartyKeys:
      required:
      - PartyIdent
      - PartyIdentType
      type: object
      properties:
        PartyIdentType:
          type: string
          description: |-
            Type of party identification.



            **Note:** Calling application should provide the PartyIdentType as "PersonNum" or "OrgNum" to identify whether the party is a person or an organization.
          enum:
          - PersonNum
          - OrgNum
        PartyIdent:
          maxLength: 60
          type: string
          description: Party identification value associated to the PartyIdentType field.
      description: Unique information to identify the party record.
    CardAddOperRequest_PartyRef:
      required:
      - PartyKeys
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/CardAddOperRequest_PartyRef_PartyKeys'
      description: Reference details of a party that is part of the party-to-card relationship.
    CardAddOperRequest_CardRef_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identification number of a card record. \n\n\n\n**Note:** CardId identifies the prefix, which is a fixed portion of the PAN (Primary Account Number) that network requires."
      description: 'Unique information to identify the card record. '
    CardAddOperRequest_CardRef:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperRequest_CardRef_CardKeys'
      description: Reference details of a card that is part of the party-to-card relationship.
    CardAddOperRequest_PartyCardRelInfo:
      required:
      - PartyRef
      properties:
        PartyRef:
          $ref: '#/components/schemas/CardAddOperRequest_PartyRef'
        CardRef:
          $ref: '#/components/schemas/CardAddOperRequest_CardRef'
    CardAddOperRequest_CardInfo_ChargeFeeAcct:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
      description: Details of the charge fee account that is designated to pay the fee charges.
    CardAddOperRequest_CardInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Transaction limit amount in decimal format.



            Example: 200.00



            **Note:** Applicable and required if the "LimitType" field is sent in the request.
        CurCode:
          type: object
          description: 'Details of the currency code. '
      description: Details of the applicable currency limit amount.
    CardAddOperRequest_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: |-
            Type of transaction.



            **Note:** Values for this field specifies:

            - Withdrawal: Withdrawal limit amount cycle associated with the card

            - DepositAvail: Deposit limit amount cycle associated with the card
          enum:
          - Withdrawal
          - DepositAvail
        CurAmt:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt'
        LimitCount:
          type: integer
          description: "Number of limits. \n\n\n\n**Note:** If multiple accounts are sent in the request, the field should contain values such as \"1\", \"2\", \"3\", \"4\" and so on. The value indicates whether the CardTrnLimit aggregate occurrence needs to be linked to the second, third, or fourth account (as per the sequence of AcctId sent in AcctLinkData aggregates). If only one account is sent in AcctLinkData, then the field need not be sent at all, or it can be sent as \"1\", as one or both CardTrnLimit aggregates sent in the request will be linked to the single account only (that is to the first AcctId sent in AcctLinkData)."
          format: int64
    CardAddOperRequest_CardInfo_MaxCreditLimitAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |+
            Daily cash withdrawal limit amount in decimal format.

      description: Details of the maximum daily credit amount that a customer may withdraw using a debit card.
    CardAddOperRequest_CardInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record that must be linked to the card.
        AcctIdent:
          type: object
          description: 'Unique identification number of an account record.  '
      description: Unique information to identify the account record.
    CardAddOperRequest_CardInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctRef_AcctKeys'
      description: 'Reference details of the account. '
    CardAddOperRequest_CardInfo_AcctLinkData:
      properties:
        AcctRef:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctRef'
        OtherAcctRel:
          type: integer
          description: |-
            Value to define the other account relationship (OAR) with the card.





            **Note:** By default, an AcctId sent in AcctLinkData is associated as the primary account to the card. If the value is blank or "1" , then the account (Checking/Savings/Loan) is linked as the primary account. If the value is "2" or greater, then the account is linked as the secondary account to the card agreement.

            For a person agreement, only one primary saving, checking or loan account should be updated.
          format: int64
    CardAddOperRequest_CardInfo:
      type: object
      properties:
        CardType:
          type: string
          description: |-
            Type of the card.



            **Note:** *Required field*

            For DNA, financial institutions can set up the user-defined value (code) of the CardType (agreement type) in the DNA Specifications.

            The values set in the specifications should be passed in the DNA request.

            For example, if financial institutions set up the CardType (agreement type) value as "DBT" for a debit card in DNA specifications then same "DBT" value should be passed in the request.

            To fetch permitted values for "CardType", use "AtmDebitCardTypes" as the value of the "EnumTableIdent" field in the Get Enumtable API.
        ChargeFeeAcct:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_ChargeFeeAcct'
        PersonEmbossingName:
          type: object
          description: Details of the name to be embossed on the issuing card.
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: "Secondary embossing name of the cardholder. This name appears on the card as additional description line.\n\n\n\n**Note:** Refers to the alternate name embossed on the card. \n\n"
        CardTrnLimit:
          type: array
          description: |-
            Details of the card transaction limit.



            **Note:** CardTrnLimit is an optional aggregate used to override the default limits set in DNA, allowing the customization of transaction limits based on transaction type and source. DNA allows cycle withdrawal amount limit and cycle deposit amount limit for each account linked to the card agreement.

            If multiple AcctLinkData aggregate are included in the request, then each occurence of CardTrnLimit aggregate is associated with respective accounts, either by default or based on the 'LimitCount' field value in each CardTrnLimit aggregate.

            If only one account is provided in AcctLinkData, one or both CardTrnLimit aggregates sent in the request will be associated with that single account. However, if multiple accounts are included in AcctLinkData, the 'LimitCount' field must be included in the request to specify the sequence number of the account (1, 2, 3, 4 and so on) to which each CardTrnLimit aggregate applies. For instance, a CardTrnLimit aggregate with "LimitCount" set to "2" would be linked to the second AcctId in the sequence provided in AcctLinkData.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardTrnLimit'
        MaxCreditLimitAmt:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_MaxCreditLimitAmt'
        CardPeriodData:
          type: array
          description: 'Period details of the card. '
          items: {}
        PINInvalidEntryAllowedNum:
          type: integer
          description: |-
            Number of invalid PIN entry attempts allowed.



            **Note:** Number of times an incorrect PIN number can be entered in a session before the account is locked.
          format: int64
        AcctLinkData:
          type: array
          description: |-
            Details of the accounts linked to a debit card.



            **Note:** *Required aggregate*

            Atleast one occurence of the AcctLinkData must be provided to link one primary account to the card agreement. The primary account is generally the Savings Deposit Account (SDA) or Demand Deposit Account (DDA).

            Multiple AcctLinkData aggregates with AcctRef/AcctKeys/AcctId and AcctRef/AcctKeys/AcctType (DDA/SDA/LOAN) columns can be used to link more than one account to the card. While one primary SDA and one primary DDA are supported, DNA also allows to link a primary Loan Account (LOAN) to the card if necessary.

            Atleast one primary account needs to be linked to the card agreement. Typically, a savings account (SDA) or a checking account (DDA) is linked as the primary account. It's possible to link multiple accounts to the card by submitting several instances of the AcctLinkData aggregate, including the fields AcctRef/AcctKeys/AcctId and AcctRef/AcctKeys/AcctType (DDA/SDA/LOAN). Although one primary savings account (SDA) and one primary checking account (DDA) are standard, DNA also permits linking a primary loan account (LOAN) to the card, if necessary.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctLinkData'
      description: Detailed information about the card.
    CardAddOperResponse_CardStatusRec_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identification number of a card record. \n\n\n\n**Note:** Value that identifies the external card number associated with the card agreement."
        CardNum:
          maxLength: 32
          type: string
          description: "Unique identification number of a card.  \n\n\n\n**Note:** Instead of the 16 or 19-digit PAN number, DNA returns the agreement number as a card reference to the party (customer) due to PCI compliance norms."
      description: Unique information to identify a card record.
    CardAddOperResponse_CardStatusRec_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: Code to indicate the status of the card record.
          enum:
          - Valid
      description: 'Status details of the card record. '
    CardAddOperResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardStatus'
      description: Details of the card status record in response to add operation.
    CardInqOperSecuredRequest_CardSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identifier of a card. \n\n\n\n**Note:** This field identifies the external card number of the card agreement."
        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of a card.



            **Note:** Same card number can be linked to multiple member number. Card sequence number is used to identify a specific card member number to display card details, such as issue date and expiry date.
      description: Unique information to identify a card record.
    CardInqOperSecuredRequest_CardSel:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel_CardKeys'
      description: Details of the selection criteria used to select the card record.
    CardInqOperSecuredResponse_CardKeys:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number of the card.



            **Note:** This field identifies the card agreement number identifier.

            Max length: 22 digits
        CardId:
          maxLength: 36
          type: string
          description: "Unique identifier of a card. \n\n\n\n**Note:** This field identifies the external card number of the card agreement for which the details are returned in the response."
      description: Unique information to identify a card record.
    CardInqOperSecuredResponse_CardInfo_ChargeFeeAcct:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.



            **Note:** Refers to the account number that is used while applying service charges.
      description: Details of the charge fee account that is designated to pay the fee charges.
    CardInqOperSecuredResponse_CardInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Limit amount in decimal format.



            **Note:** This field identifies the following:

            - Daily combined withdrawal limit amount if value of TrnType field is 'Withdrawal'.

            - Deposit limit amount if the value of the TrnType is 'DepositAvail'.
      description: Details of the applicable currency limit amount.
    CardInqOperSecuredResponse_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: Type of a transaction.
          enum:
          - Withdrawal
          - DepositAvail
        CurAmt:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CurAmt'
    CardInqOperSecuredResponse_CardInfo_MaxCreditLimitAmt:
      type: object
      properties:
        Amt:
          type: number
          description: Daily cash withdrawal limit amount in decimal format.
      description: Details of the maximum daily credit amount that a customer may withdraw using a debit card.
    CardInqOperSecuredResponse_CardInfo_AgreementData_PartyKeys:
      required:
      - PartyIdent
      - PartyIdentType
      type: object
      properties:
        PartyIdentType:
          type: string
          description: |-
            Type of party identification.



            **Note:** This field identifies the card agreement is owned by a person or an organization party.
          enum:
          - OrgNum
          - PersonNum
        PartyIdent:
          maxLength: 60
          type: string
          description: |-
            Unique identifier of a party.



            **Note:** This field identifies the primary owner of the card agreement.
      description: |-
        Unique information to identify the party record.



        **Note:** This aggregate identify the party identification number of the person or organization that is linked to the account in the party-account agreement.
    CardInqOperSecuredResponse_CardInfo_AgreementData:
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_AgreementData_PartyKeys'
      description: 'Details of an aggrement data. '
    CardInqOperSecuredResponse_CardInfo:
      type: object
      properties:
        CardType:
          type: string
          description: Type of a card agreement.
        CardTypeEnumDesc:
          maxLength: 80
          type: string
          description: Description of the enumeration value in the CardType field.
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.



            **Note:** This field provides status of the most recent card issued to the card member.
        CardDtlStatusEnumDesc:
          maxLength: 80
          type: string
          description: 'Description of enumeration value in the CardDtlStatus field. '
        CardStatusReason:
          type: string
          description: Value that indicates the reason for the card status.
        CardStatusReasonEnumDesc:
          maxLength: 80
          type: string
          description: 'Description of enumeration value in the CardStatusReason field. '
        ChargeFeeAcct:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_ChargeFeeAcct'
        IssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date on which the current card was issued to the card member.

            Format: YYYY-MM-DDThh:mm:ss.SSS

            Example: 2021-12-31T23:59:59.999
        ExpDt:
          type: string
          description: |-
            Date after which the current card stands inactive.

            Format: YYYY-MM-DD

            Example: 2021-11-20
          format: date
        PersonEmbossingName:
          type: object
          description: Details of the name to be embossed on the issuing card.
        EmbossingName:
          maxLength: 80
          type: string
          description: 'Full name of the person linked to the card agreement. '
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: "Secondary embossing name of the cardholder. This name appears on the card as additional description line.\n\n**Note:** Refers to the alternate name embossed on the card. "
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardTrnLimit'
        MaxCreditLimitAmt:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_MaxCreditLimitAmt'
        PINOffset:
          maxLength: 10
          type: string
          description: Offset number of the PIN assigned to the card.
        PINInvalidEntryAllowedNum:
          type: integer
          description: Total number of invalid entries of PIN allowed while authenticating the card or transaction.
          format: int64
        AgreementData:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_AgreementData'
      description: Detailed information about the card.
    CardInqOperSecuredResponse_CardRec:
      required:
      - CardInfo
      - CardKeys
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo'
    CardListInqOperSecuredRequest_RecCtrlIn:
      type: object
      properties:
        MaxRecLimit:
          type: integer
          description: |-
            Maximum number of records that can be returned within a single response.



            **Note:** If this field is not provided in the request, then all cards are returned in the response based on the selected criteria.
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: "Next record pointer to include in the response if additional records are available.\n\n\n\n**Note:** This field identifies the starting point of the next query.\n\nValue received in the response for the Cursor field is passed in this field to fetch the next set of records, if the additional transaction records are provided in the previous response of Card List Inquiry. "
      description: Details to specify the maximum number of records to be processed within a single response.
    CardListInqOperSecuredRequest_CardListSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identifier of a card. \n\n\n\n**Note:** This field identifies the external card number of the card agreement for which the details are returned in the response."
      description: Unique information to identify a card record.
    CardListInqOperSecuredRequest_CardListSel_PartyKeys:
      required:
      - PartyIdent
      - PartyIdentType
      type: object
      properties:
        PartyIdentType:
          type: string
          description: |-
            Type of party identification.



            **Note:** This field identifies the card agreement is owned by a person or an organization party.
          enum:
          - OrgNum
          - PersonNum
        PartyIdent:
          maxLength: 60
          type: string
          description: |-
            Unique identifier of a party.



            **Note:** This field identifies the primary owner of the card agreement.
      description: Unique information to identify the party record.
    CardListInqOperSecuredRequest_CardListSel_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.



            **Note:** Refers to account number.
        CardKeys:
          type: object
          description: Unique information to identify a card record.
      description: Unique information to identify the account record.
    CardListInqOperSecuredRequest_CardListSel:
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_CardKeys'
        PartyKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_PartyKeys'
        AcctKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_AcctKeys'
        Name:
          maxLength: 80
          type: string
          description: "Name of the person.\n\n\n\n**Note:** This field identifies the last name of the person linked to the card agreement. \n\nDNA supports partial search based on the last name that starts with value provided in this field.\n\nFor example: If the last name is sent in the request as 'Atj', then the response includes all the cards of the parties with last name starting with 'Atj'."
      description: Details of the selection criteria used to retrieve the list of cards.
    CardListInqOperSecuredResponse_RecCtrlOut:
      required:
      - SentRecCount
      type: object
      properties:
        SentRecCount:
          type: integer
          description: Total number of records that matched the selection criteria and returned in the response message.
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: |-
            Next record pointer to include in the response if additional records are available.



            **Note:** This field identifies the starting point of the next query. Value received in the response for the cursor field is passed in this field to fetch the next set of records if the additional transaction records are provided in the previous response of Card List Inquiry.
      description: Information retrieved for the criteria specified in the RecCtrlIn aggregate of the request message.
    CardListInqOperSecuredResponse_CardKeys:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number of the card.



            **Note:** This field identifies the card agreement identifier.
        CardId:
          maxLength: 36
          type: string
          description: "Unique identifier of a card. \n\n\n\n**Note:** This field identifies the external card number."
        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of a card.



            **Note:** This field refers to member number that identifies multiple cards for different customers.

            Same card number can be linked to multiple member number. Card sequence number is used to identify a specific card member number to display card details, such as issue date and expiry date.
      description: Unique information to identify a card record.
    CardListInqOperSecuredResponse_CardListInfo_PartyKeys:
      required:
      - PartyIdentType
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: Unique identification number of a party record.
        PartyIdentType:
          type: string
          description: |-
            Type of party identification.



            **Note:** This field identifies the card agreement is owned by a person or an organization party.
          enum:
          - OrgNum
          - PersonNum
      description: Unique information to identify the party record.
    CardListInqOperSecuredResponse_CardListInfo:
      type: object
      properties:
        CardType:
          type: string
          description: |-
            Type of a card.



            **Note:** This field identifies the type of card agreement.
        CardDtlStatus:
          type: string
          description: "Current status of the card. \n\n**Note:**\n\nCode identifying current status of the last card issued to the card member."
          enum:
          - ACT
          - CLOS
          - EXP
          - HOT
          - ISS
          - REST
          - INQ
          - LOCK
        OpenDt:
          type: string
          description: "Date on which the current card was issued.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        ExpDt:
          type: string
          description: "Date after which the card expires.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        EmbossingName:
          maxLength: 80
          type: string
          description: Full name of the person linked to the card agreement.
        PartyKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListInfo_PartyKeys'
      description: Information about the list of cards.
    CardListInqOperSecuredResponse_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: Code that indicates the status of the card.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time value for the status of card. \n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-12-31T23:59:59.999"
      description: Status details of the card.
    CardListInqOperSecuredResponse_CardListRec:
      required:
      - CardKeys
      - CardListInfo
      - CardStatus
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardKeys'
        CardListInfo:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListInfo'
        CardStatus:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardStatus'
    CardModOperRequest_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identification number of a card record.  \n\n\n\n**Note:** The attribute identifies the external card number associated with the card agreement."
        CardSeqNum:
          maxLength: 3
          type: string
          description: |+
            Sequence number of a card.



            **Note:** Refers to a member number that identifies multiple cards for different customers.

            For example: To differentiate the cards, a wife's card may have a "1" following it, while a husband's card may have a "2". The same card number can correspond to multiple member numbers. This attribute helps in identifying the specific card member whose card's issue date, expiry date, and so on.









      description: Unique information to identify the card record.
    CardModOperRequest_CardInfo_CurAmt:
      type: object
      properties:
        CurCode:
          type: object
          description: |+
            Details of the currency code.



      description: Details of the transaction limit amount.
    CardModOperRequest_CardInfo_CardTrnLimit:
      properties:
        CurAmt:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_CurAmt'
    CardModOperRequest_CardInfo_MaxCreditLimitAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |+
            Amount in decimal format.



            Example: 10.00



            **Note:** Refers to the daily cash withdrawal limit amount.







        CurCode:
          type: object
          description: |+
            Details of the currency code.



      description: Details of the maximum amount the cardholder can withdraw using a debit card in a day.
    CardModOperRequest_CardInfo_AgreementData_PartyKeys:
      required:
      - PartyIdent
      - PartyIdentType
      type: object
      properties:
        PartyIdentType:
          type: string
          description: 'Type of party identification. '
          enum:
          - PersonNum
          - OrgNum
        PartyIdent:
          maxLength: 60
          type: string
          description: |-
            Party identification value associated to the PartyIdentType field.



            **Note:** Party identifier is required for updating the allowed number of invalid PIN entries and secondary embossing name.
      description: |+
        Unique information to identify the party record. Party keys refer to the identification number of the person or organization linked to an account with an agreement.







    CardModOperRequest_CardInfo_AgreementData:
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_AgreementData_PartyKeys'
      description: Details of an agreement.
    CardModOperRequest_CardInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: "Unique identification number of an account record.\n\n\n\n**Note:** AcctId identifies the primary account linked to the card. For person agreement, only one primary savings, checking or loan account can be updated. \n\nThe primary loan account can only be CNS."
      description: Unique information to identify the account record.
    CardModOperRequest_CardInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_AcctRef_AcctKeys'
      description: Reference information of an account linked to a card.
    CardModOperRequest_CardInfo_AcctLinkData:
      properties:
        AcctRef:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_AcctRef'
    CardModOperRequest_CardInfo:
      type: object
      properties:
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the card.
          items: {}
        ChargeFeeAcct:
          type: object
          description: Details of the charge fee account that is designated to pay the fee charges.
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: |-
            Additional description line that appears on the front side of the card.



            **Note:** Refers to the alternate name embossed on the card.
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardTrnLimit'
        MaxCreditLimitAmt:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_MaxCreditLimitAmt'
        PINOffset:
          maxLength: 10
          type: string
          description: |-
            PIN Offset number assigned to the card.



            **Note:** Member Number is required for updating the PIN offset.
        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of invalid PIN entry attempts allowed in a session before the account is locked.
          format: int64
        AgreementData:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_AgreementData'
        AcctLinkData:
          type: array
          description: Details of the accounts to be linked to a debit card.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_AcctLinkData'
      description: Detailed information about the card.
    CardModOperResponse_CardStatusRec_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identification number of a card record. \n\n\n\n**Note:** Value that identifies the external card number associated with the card agreement."
      description: Unique information to identify a card record.
    CardModOperResponse_CardStatusRec_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: Code to indicate the status of the card.
      description: Status details of the card record.
    CardModOperResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec_CardStatus'
      description: Details of the card status record in response to update operation.
    StatusType_DNA_AdditionalStatus:
      type: object
      properties:
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
      description: Details of the additional status of the response message. This aggregate can appear once for each additional status that the server is expected to provide.
