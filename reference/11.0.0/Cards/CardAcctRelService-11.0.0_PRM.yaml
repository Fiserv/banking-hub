---
openapi: 3.0.1
info:
  title: Card Account Relationship Service
  description: The card account relationship service supports operations to manage accounts associated to a card.
  version: 11.0.0_PRM
servers:
- url: /
paths:
  /cardacctrelservice/cards/cardAccounts/secured:
    post:
      tags:
      - Get Card Account Relationship
      summary: Get Card Account Relationship
      description: "Get Card Account Relationship API retrieves the relationship related information between a card and the account."
      operationId: CardAcctRelInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardAcctRelInqOperSecuredRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="?path=docs/response-codes.md"> click here</a>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse'
      x-group-name: Card Account Relationship Service
      x-proxy-name: Get Card Account Relationship
      x-child-product-name: Cards
      x-core: Premier
  /cardacctrelservice/cards/cardAccounts:
    put:
      tags:
      - Update Card Account Relationship
      summary: Update Card Account Relationship
      description: "Update Card Account Relationship API modifies the relationship related information between a card and the account."
      operationId: CardAcctRelModOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardAcctRelModOperRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAcctRelModOperResponse'
        default:
          description: To view the complete list of response codes, <a href="?path=docs/response-codes.md"> click here</a>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAcctRelModOperResponse'
      x-group-name: Card Account Relationship Service
      x-proxy-name: Update Card Account Relationship
      x-child-product-name: Cards
      x-core: Premier
components:
  schemas:
    CardAcctRelInqOperSecuredRequest:
      required:
      - CardAcctRelSel
      properties:
        RecCtrlIn:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredRequest_RecCtrlIn'
        CardAcctRelSel:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredRequest_CardAcctRelSel'
    CardAcctRelInqOperSecuredResponse:
      required:
      - CardAcctRelRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_RecCtrlOut'
        CardAcctRelRec:
          type: array
          description: Relationship record details of a card linked with an account.
          items:
            $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelRec'
    CardAcctRelModOperRequest:
      required:
      - CardAcctRelInfo
      - CardAcctRelKeys
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        CardAcctRelKeys:
          $ref: '#/components/schemas/CardAcctRelModOperRequest_CardAcctRelKeys'
        CardAcctRelInfo:
          type: array
          description: |-
            Relationship information of a card linked with accounts.

            **Note:** This aggregate contains key details of the card to which the accounts are linked. Multiple accounts can be linked to the card via CardAcctRelMod ESF operation.

            Existing accounts that are linked to the card should be sent in the request to preserve the association. If an account was already linked to the card, but if not provided in the request will result in de-linking or detachment from the card. The request should contain the final state of card-account relations which is required by consumer so that existing relations can be replaced/overwritten by the operation based on the request sent.

            All accounts that are already linked to the card already can be retrieved via CardAcctRelInq operation. By Default, a maximum of 10 accounts can be linked to the card in Premier (all supported account types included). The number of accounts to be linked can be configured in Card Specifications file in Premier.

            ESF Operation CardAcctRelInq, along with card-account details also returns the Other Account Relationship (OtherAcctRel) field, that provides the primary account for the card (value of 1) and the other secondary accounts (values greater than 1). Using this aggregate the "NickName" on the account linked to the card can also be modified.
          items:
            $ref: '#/components/schemas/CardAcctRelModOperRequest_CardAcctRelInfo'
    CardAcctRelModOperResponse:
      required:
      - CardAcctRelStatusRec
      properties:
        CardAcctRelStatusRec:
          $ref: '#/components/schemas/CardAcctRelModOperResponse_CardAcctRelStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          type: string
        TrnId:
          maxLength: 30
          type: string
        VendorId:
          type: string
          description: An identifier, supplied by Fiserv, that represents the vendor using  this API service.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Client Application Name of the application making the service request (e.g. Architect, Commercial Center, etc.).
        Channel:
          type: string
          description: Indicates the channel used by the client application.
        ClientDateTime:
          type: string
          description: Client date and time as reported by the client application that is making the service request.
          format: date-time
        ClientTerminalSeqNum:
          maxLength: 36
          type: string
          description: Also known as Trace Number or Sequence in some systems. Used to allow the client terminal to set a unique identifier for the transaction. When used by a Network defined transaction the value of this identifier is typically set to narrow character of 12.
        OriginatorType:
          type: integer
          description: "\"The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.\nOriginator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial\ninstitution—home banking\""
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor locatio (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
        TerminalAddr2:
          maxLength: 64
          type: string
        TerminalAddr3:
          maxLength: 64
          type: string
        TerminalAddr4:
          maxLength: 64
          type: string
        TerminalCity:
          maxLength: 32
          type: string
        TerminalCounty:
          maxLength: 32
          type: string
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State Province. ISO 3166-2:US codes.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: Postal Code is ZipCode in the US.
        TerminalCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - ISO3166Numeric
          - ISO3166Alpha3
        TerminalCountryCodeValue:
          maxLength: 80
          type: string
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifies the acquirer of the authorization or financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          maxLength: 23
          type: string
          description: Merchant Number. For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: This is the date on which the transaction will be settled. Used by ISO 8583 (DE63)
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BranchIdent:
          maxLength: 22
          type: string
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          enum:
          - Manual
          - Auto
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: 
            Flag to indicate if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.
      description: Details of the exceptions that can be manually acknowledged by the client.
    OverrideExceptionType:
      title: OverrideExceptionType
      type: object
      properties:
        SubjectRole:
          type: string
          description: Role of the subject who is overriding the exception.
        SubjectIdent:
          maxLength: 36
          type: string
          description: Subject identification value to identify the subject who is overriding the exception.
        OvrdExceptionCode:
          maxLength: 40
          type: string
          description: Override exception code to be overridden. This can be the ServerStatusCode from the Message Status section.
        OvrdElement:
          $ref: '#/components/schemas/OvrdElementType'
    OvrdElementType:
      title: OvrdElementType
      type: object
      description: Information about the elements that corresponds to the override exception code.
      allOf:
      - $ref: '#/components/schemas/SubjectElementType'
      - type: object
    CardAcctRelInqOperSecuredRequest_RecCtrlIn:
      type: object
      properties:
        MaxRecLimit:
          type: integer
          description: Maximum number of records that can be returned within a single response.
          format: int64
      description: Maximum number of records that client can specify to process within a single response.
    CardAcctRelInqOperSecuredRequest_CardAcctRelSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by a financial institute.

            This number is printed on the front side of the card.
      description: Unique information to identify a card record.
    CardAcctRelInqOperSecuredRequest_CardAcctRelSel:
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredRequest_CardAcctRelSel_CardKeys'
      description: Selection criteria to select the accounts related or linked to a card.
    CardAcctRelInqOperSecuredResponse_RecCtrlOut:
      required:
      - SentRec
      type: object
      properties:
        SentRec:
          type: integer
          description: Total number of the record in a message that matches the selection criteria.
          format: int64
      description: |+
        Information retrieved for the criteria specified in the RecCtrlIn aggregate of the request message.

    CardAcctRelInqOperSecuredResponse_CardAcctRelKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: Unique identification number of a card maintained by a financial institute. This number is printed on the front side of the card.
      description: Details of card keys that contains unique information about the card record.
    CardAcctRelInqOperSecuredResponse_CardAcctRelKeys:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelKeys_CardKeys'
      description: Unique information to identify relationship between a card and an account.
    CardAcctRelInqOperSecuredResponse_CardAcctRelInfo_CardRef:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelKeys_CardKeys'
      description: Reference information of a card object that is part of the relationship
    CardAcctRelInqOperSecuredResponse_CardAcctRelInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of an account record.





        AcctType:
          type: string
          description: |+
            Type of an account.



            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.



          enum:
          - DDA
          - SDA
          - LOAN
      description: Unique information to identify the account record.
    CardAcctRelInqOperSecuredResponse_CardAcctRelInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelInfo_AcctRef_AcctKeys'
      description: Reference information of an account object that is part of the relationship with the card.
    CardAcctRelInqOperSecuredResponse_CardAcctRelInfo:
      type: object
      properties:
        CardRef:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelInfo_CardRef'
        AcctRef:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelInfo_AcctRef'
        OtherAcctRel:
          type: integer
          description: "Value to define the Other Account Relationship (OAR) with the card.\n\nAn OAR value of 1 identifies the account as the primary account for the account type. An OAR of 2 or greater identifies the account as secondary for this account type.\n\n \n\n"
          format: int64
        Nickname:
          maxLength: 80
          type: string
          description: Name that customer can assign to the account for easy identification.
      description: Relationship information of a card linked with accounts.
    CardAcctRelInqOperSecuredResponse_CardAcctRelStatus:
      required:
      - CardAcctRelStatusCode
      type: object
      properties:
        CardAcctRelStatusCode:
          type: string
          description: Relationship status code of a card linked to account.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time value when the status of a card linked to an account is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
      description: Current relationship status of a card linked to account.
    CardAcctRelInqOperSecuredResponse_CardAcctRelRec:
      required:
      - CardAcctRelInfo
      - CardAcctRelKeys
      - CardAcctRelStatus
      properties:
        CardAcctRelKeys:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelKeys'
        CardAcctRelInfo:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelInfo'
        CardAcctRelStatus:
          $ref: '#/components/schemas/CardAcctRelInqOperSecuredResponse_CardAcctRelStatus'
    CardAcctRelModOperRequest_CardAcctRelKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identification number of a card maintained by a financial institution. \n\nThis number is printed on the front side of the card.\n\n\n\n**Note:** *Required field*\n\n\n\nRefers to card account number provided by Premier and not the 16-digit PAN. It is used to uniquely identify the card to which the accounts are linked.\n\nMaximum length is 6 to 10 digits.\n\n\n\n"
      description: |-
        Unique information to identify a card record.

        **Note:** This aggregate contains key details of the card to which the accounts are linked.
    CardAcctRelModOperRequest_CardAcctRelKeys:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAcctRelModOperRequest_CardAcctRelKeys_CardKeys'
      description: Unique information to identify relationship between a card and an account.
    CardAcctRelModOperRequest_CardAcctRelInfo:
      properties:
        Nickname:
          maxLength: 80
          type: string
          description: |-
            Name that customer can assign to the account for easy identification.

            **Note:** Nickname of the accountholder on the account can be modified by providing the updated value in the request. It is an account-level detail and cannot be amended as a standalone field, the AcctId and the AcctType fields for the account that is linked to the card should be provided in the request, corresponding to which the nickname is being updated on the account.
    CardAcctRelModOperResponse_CardAcctRelStatusRec_CardAcctRelKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identification number of a card maintained by a financial institution. \n\nThis number is printed on the front side of the card.\n\n**Note:** Refers to card account number provided by Premier and not the 16-digit PAN. It is used to uniquely identify the card to which the accounts are linked.\n\nMaximum length is 6 to 10 digits."
      description: |-
        Unique information to identify a card record.

        **Note:** Response Aggregate providing the key card details from Premier.
    CardAcctRelModOperResponse_CardAcctRelStatusRec_CardAcctRelKeys:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAcctRelModOperResponse_CardAcctRelStatusRec_CardAcctRelKeys_CardKeys'
      description: Unique information to identify relationship between a card and an account.
    CardAcctRelModOperResponse_CardAcctRelStatusRec_CardAcctRelStatus:
      required:
      - CardAcctRelStatusCode
      type: object
      properties:
        CardAcctRelStatusCode:
          type: string
          description: |-
            Relationship status code of a card linked to account.

            **Note:** Refers to code that identifies the account relationship to the card is valid.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time value when the status of a card linked to an account is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999\n\n**Note:** Refers to the last updated date-time of the card-account relation in Premier."
      description: |-
        Current relationship status of a card liked to account.

        **Note:** Response aggregate providing the card-account relationship status and last date of update.
    CardAcctRelModOperResponse_CardAcctRelStatusRec:
      required:
      - CardAcctRelKeys
      - CardAcctRelStatus
      type: object
      properties:
        CardAcctRelKeys:
          $ref: '#/components/schemas/CardAcctRelModOperResponse_CardAcctRelStatusRec_CardAcctRelKeys'
        CardAcctRelStatus:
          $ref: '#/components/schemas/CardAcctRelModOperResponse_CardAcctRelStatusRec_CardAcctRelStatus'
      description: Details of the card-account relationship status record used to return result from an add, delete or modify operation.
