---
openapi: 3.0.1
info:
  title: Card Service
  description: The Card service provides administration in respect to creation, modification, inquiry, and deletion of any type of EFT cards used by the holders. It supports operations managing the credit, debit, prepaid and private label cards.
  version: 11.0.0_PRM
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/CardService/11.0.0_PRM
  description: SwaggerHub API Auto Mocking
paths:
  /cardservice/cards/cards:
    put:
      tags:
      - Update Card
      summary: Update Card
      description: "Update Card API modifies details of a debit card account on the core such as card embossing details, flex data details, account address and name details."
      operationId: CardModOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardModOperRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardModOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardModOperResponse'
      x-group-name: Card Service
      x-proxy-name: Update Card
      x-child-product-name: ' Cards'
      x-core: 'Premier '
    post:
      tags:
      - Add Card
      summary: Add Card
      description: "Add Card API adds a new debit card account in the core and relates it to one or more parties."
      operationId: CardAddOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardAddOperRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAddOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAddOperResponse'
      x-group-name: Card Service
      x-proxy-name: Add Card
      x-child-product-name: Cards
      x-core: Premier
  /cardservice/cards/cards/secured:
    put:
      tags:
      - Delete Card
      summary: Delete Card
      description: "Delete Card API deletes an existing debit card account from the core using the CardId."
      operationId: CardDelOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDelOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDelOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDelOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Delete Card
      x-child-product-name: Cards
      x-core: 'Premier '
    post:
      tags:
      - Get Card
      summary: Get Card
      description: "Get Card API retrieves details of a debit card account from the core."
      operationId: CardInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Get Card
      x-child-product-name: Cards
      x-core: 'Premier '
components:
  schemas:
    CardAddOperRequest:
      required:
      - CardInfo
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        PartyCardRelInfo:
          type: array
          description: |-
            Details of the parties and their relationship with the card.

            **Note:** *Required field*



            Multiple PartyCardRelInfo aggregates can be provided in the request if multiple parties are to be associated to the card. A card can be created with multiple card owners.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_PartyCardRelInfo'
        CardInfo:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo'
    CardAddOperResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardStatusRec:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec'
    CardDelOperSecuredRequest:
      required:
      - CardKeys
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardDelOperSecuredRequest_CardKeys'
    CardDelOperSecuredResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardStatusRec:
          $ref: '#/components/schemas/CardDelOperSecuredResponse_CardStatusRec'
    CardInqOperSecuredRequest:
      required:
      - CardSel
      properties:
        CardSel:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel'
    CardInqOperSecuredResponse:
      required:
      - CardRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardRec:
          type: array
          description: Details of the card record.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardRec'
    CardModOperRequest:
      required:
      - CardInfo
      - CardKeys
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        CardKeys:
          $ref: '#/components/schemas/CardDelOperSecuredRequest_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo'
    CardModOperResponse:
      required:
      - CardStatusRec
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        CardStatusRec:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: Flag to indicate if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.
      description: Details of the exceptions that can be manually acknowledged by the client.
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    CardAddOperRequest_PartyRef_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** *Required field*



            This field refers to unique identifier of party associated to an account.
      description: Unique information to identify the party record.
    CardAddOperRequest_PartyRef:
      required:
      - PartyKeys
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/CardAddOperRequest_PartyRef_PartyKeys'
      description: Reference information of the party object that is part of the relationship.
    CardAddOperRequest_CardRef_CardKeys_CardIdent:
      type: object
      properties:
        CardIdentType:
          type: string
          description: "Identification type of a card. \n\n**Note:** Portfolio number associated with the card."
          enum:
          - PORT
        CardIdentValue:
          maxLength: 36
          type: string
          description: Identification value of a card.
      description: |-
        Card identification details.
    CardAddOperRequest_CardRef_CardKeys:
      type: object
      properties:
        CardIdent:
          $ref: '#/components/schemas/CardAddOperRequest_CardRef_CardKeys_CardIdent'
      description: Unique information to identify a card record.
    CardAddOperRequest_CardRef:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperRequest_CardRef_CardKeys'
      description: |-
        Reference information of a card.

        **Note:** This aggregate is used to provide the portfolio number of existing clients that are consuming this service and had onboarded prior to ESF 9.2 release.
    CardAddOperRequest_PartyCardRelInfo:
      required:
      - PartyCardRelType
      - PartyRef
      properties:
        PartyRef:
          $ref: '#/components/schemas/CardAddOperRequest_PartyRef'
        CardRef:
          $ref: '#/components/schemas/CardAddOperRequest_CardRef'
        PartyCardRelType:
          type: string
          description: |-
            Type of relationship between party and a card.

            **Note:** *Required field*



            Financial institutions can create user defined relationship types.

            OwnerSigner relationship is commonly used for party to card relationship.
          enum:
          - Owner
          - Signer
          - OwnerSigner
          - JointTenancy
          - Executor
          - Trustee
          - Borrower
          - CoBorrower
          - Custodian
          - DoingBusinessAs
        PartyCardRelOrder:
          type: string
          description: "Relationship order of a party with card.\n\nIndicates the relationship order for JointTenancy or JointTenantsInCommon. \n\n**Note:** Parties having first, second and third relationship order are considered to be the main names and, only one party can be associated with first/second/third relationship order on the card. Relationship order value of 'Other' is commonly used for relationships other than OwnerSigner, signer and owner. One party can have multiple 'Other' type of relationship orders on card. If mailing name option parameter is set up at financial institution, then first, second and third names can be used for inquiry or account related mailing purpose. If mailing name option parameter is set to Y, a card can have up to 3 names for mailing purpose which can be provided in postal address aggregate."
          enum:
          - First
          - Second
          - Third
          - Other
        OwnerInd:
          type: boolean
          description: |-
            Flag to indicate the primary owner.

            **Note:** ESF has introduced a new data element - PartyAcctRelOrder to identify first 3 names displayed on the account. This element is available in ESF release prior to 9.2 and will be deprecated in future.
        TaxReportingOwnerInd:
          type: boolean
          description: |-
            Flag to indicate whether the party has tax responsibility on the account.

            **Note:** At least one tax relationship is required to create a card and, there cannot be more than one tax relationships associated to an account.
    CardAddOperRequest_CardInfo_CardIdent:
      type: object
      properties:
        CardIdentType:
          type: string
          description: "Identification type of a card. \n\n**Note:** Refers to portfolio number and used to provide the portfolio number for ESF 9.2 version. If portfolio number is not provided, ESF will create new portfolio."
          enum:
          - PORT
        CardIdentValue:
          maxLength: 36
          type: string
          description: Identification value of a card.
      description: Other identification details to further identify the card record.
    CardAddOperRequest_CardInfo_RelationshipMgr:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of a relationship manager.

            **Note:** Referral responsibility code identifies the employee who referred the customer to the institution.

            Only one officer and one referral officer per card is supported.
        RelationshipRole:
          type: string
          description: Role of a relationship manager.
          enum:
          - Officer
          - ReferralOfficer
    CardAddOperRequest_CardInfo_TimeFrame_RecurRule:
      properties:
        RecurType:
          type: string
          description: 'Type of recurrence. '
          enum:
          - Cycle
        RecurInterval:
          type: integer
          description: |+
            Card fee payment recurrence interval. This value defines the payment interval between two successive occurrences. For example, if the recurrence type value is set to 'Monthly' and the recurrence interval set to '1', then there will be 1-month interval between the next payment.

            The default value is set to 1.

          format: int64
    CardAddOperRequest_CardInfo_TimeFrame:
      type: object
      properties:
        RecurRule:
          type: array
          description: Details of the recurrence rule.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_TimeFrame_RecurRule'
      description: "Time frame details of the applicable fee. \n\n\n\n"
    CardAddOperRequest_CardInfo_CardFee:
      required:
      - CardFeeType
      properties:
        CardFeeType:
          type: string
          description: Type of a card fee.
          enum:
          - CardFee
          - ForeignFee
        FeePlan:
          maxLength: 80
          type: string
          description: |-
            Fee plan to charge the card fee.

            **Note:** If CardFeeType is CardFee, then charge code indicates one of the 20 charges from debit card charge specifications that is to be assessed on the debit card account. Debit card charge code specifications can be configured by bank/FI.



            If CardFeeType is ForeignFee, then FeePlan indicates the surcharge option i.e., assessment type for foreign ATM fee transactions. This is only applicable while using the ITI on-line ATM system.

            Value of FeePlan is not transformed by ESF and is passed as-is between core and application.
        TimeFrame:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_TimeFrame'
    CardAddOperRequest_CardInfo_ChargeFeeAcct:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of an account record.





        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - DDA
          - SDA
      description: Details of the charge fee account that is designated to pay the fee charges.
    CardAddOperRequest_CardInfo_PersonEmbossingName:
      type: object
      properties:
        FamilyName:
          maxLength: 40
          type: string
          description: Family name or last name of the card holder.
        GivenName:
          maxLength: 40
          type: string
          description: "First name of the card holder. \n\nThe first name can include initial of middle name as well."
        NamePrefix:
          type: string
          description: 'Name prefix to add before the name of the card holder. '
      description: |-
        Details of the name to be embossed on the issuing card.

        **Note:** This aggregate can be used to provide the FirstName (GivenName) and LastName (FamilyName) of the CardHolder. FirstName can include the middle initial. Total field length of up to 15 characters is supported for FirstName and LastName.
    CardAddOperRequest_CardInfo_RelationshipMgr_1:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of a relationship manager.

            **Note:** This field is user-defined and not applicable for seasonal address type.
        RelationshipRole:
          type: string
          description: |-
            Role of a relationship manager.

            **Note:** Officer refers to responsibility code whereas, referral officer refers to referral responsibility code.
          enum:
          - Officer
          - ReferralOfficer
    CardAddOperRequest_CardInfo_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: |+
            Standard format of country code.

          enum:
          - SPCountryCode
        CountryCodeValue:
          type: string
          description: |-
            Country code value as per the country code format set in the CountryCodeSource field.

            **Note:** Values of this field are user-defined.
      description: Details of the country code of the cardholder.
    CardAddOperRequest_CardInfo_TimeFrame_1:
      type: object
      properties:
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Start date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** This field is applicable only if AddrType is seasonal. Seasonal address starts and ends on same start/end date every year, therefore, only start month and start day is stored and year can be provided as 9999.
        EndDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            End date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** This field is applicable only if AddrType is seasonal. Seasonal address starts and ends on same start/end date every year, therefore, only start month and start day is stored and year can be provided as 9999.
      description: "Time frame details of the applicable fee. \n\n\n\n\n\n**Note:** *Conditionally Required field*\n\n\n\nThis field is required to be provided if AddrType is seasonal."
    CardAddOperRequest_CardInfo_PostAddr:
      required:
      - AddrType
      properties:
        OpenDt:
          type: string
          description: "Date on which the card record was created.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** This field is not applicable for seasonal address type."
          format: date
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the account.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_RelationshipMgr_1'
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** This field refers to the branch region and values are user-defined. Not applicable for seasonal address type.
        ResponsibleBranch:
          maxLength: 32
          type: string
          description: "Branch responsible for the relationship.\n\n**Note:** This field refers to the accounting branch associated to address record and does not apply to seasonal address type. Values are user-defined. "
        NameIdent:
          maxLength: 36
          type: array
          description: |+
            Name identification value to identify the names related to the account address.

            **Note:** This field is applicable if AddrType is secondary and AddrUse is mailing.

            Only up to 3 name identifiers can be provided if financial institution is configured to use different primary/inquiry and secondary/mailing addresses and names. If provided for primary/inquiry address it will be ignored as name relationships for inquiry are established using information provided in PartyCardRelInfo.

            Not applicable for seasonal address type.

            Only names which have a relationship to the card or card portfolio can be associated to the new card for mailing purpose.

          items: {}
        AddressIdent:
          maxLength: 36
          type: string
          description: |-
            Unique address identification value.

            **Note:** *Conditionally Required field*



            This field refers to unique address identifier shared by primary and related seasonal address, whereas secondary and related seasonal address.

            Required to be provided if existing address is to be added to the new card.

            Do not provide this field if new address is to be created for a card.
        AddrUse:
          type: string
          description: "Usage of the address. \n\n**Note:** *Required field*\n\n\n\nAddrUse for primary and related seasonal address is 'Inquiry', whereas for secondary and related seasonal address is 'Mailing'. This field is required to be provided if, new or existing address is to be linked to a card.\n\nIf \"Mailing Name Options\" parameter is configured at financial institution, it determines if card can have different inquiry and mailing address/names.\n\n- If parameter is set to N, both inquiry and mailing addresses are same therefore, primary/inquiry address information is supported.\n\n- If parameter is set to Y, then secondary/mailing and primary/inquiry addresses are supported whereas, inquiry and mailing address data can be provided in request.\n\nAddrUse for seasonal address is always same as primary/secondary address"
          enum:
          - Inquiry
          - Mailing
        AddrFormatType:
          type: string
          description: |-
            Type of address format.

            **Note:** *Required field*



            Label address format is supported.
          enum:
          - Label
        Addr1:
          maxLength: 64
          type: string
          description: |-
            Address line 1.

            **Note:** *Conditionally Required field*



            This field is required to be provided if new address record is to be created.

            Value is dependent on address and name length option defined under miscellaneous specification. Field length can be either 30 or 40 characters long.
        Addr2:
          maxLength: 64
          type: string
          description: "Address line 2. \n\nTo enter Addr2, Addr1 field must be provided.\n\n**Note:** This field is supported if enabled under address and name length option defined under miscellaneous specification. Length can be either 40 or 30 characters."
        City:
          maxLength: 32
          type: string
          description: |+
            Name of the city.

            **Note:** *Conditionally Required*



            This field is required to be provided if a new address record is to be created.

            Field length is 20 characters long (including spaces). It is recommended for consumer to abbreviate the value sent in the EFX request to prevent truncation (For example, city name "Rancho Santa Margarita" exceeds 20 characters and can be abbreviated to "Rancho S Margarita" to avoid truncation). Total length of 40 characters is supported for city, StateProv and PostalCode (appended together) including spaces.

        StateProv:
          type: string
          description: |-
            State province code name of the cardholder as per the <a href"https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open in a new tab" target="_blank">ISO 3166-2:US</a> codes.

            **Note:** *Conditionally Required field*



            This field is required to be provided if, a new address record is to be created with country as United States.
        PostalCode:
          maxLength: 11
          type: string
          description: |-
            Postal code or Zip code.

            **Note:** *Conditionally Required field*

            This field is required to be provided if, a new address record is to be created with country as United States.



            Postal code provides information about the ZIP code if, address is from United States and, provides information about postal code if, address is not from United States.  This field provides the information in ZIP code (5 Digit)-Additional code (4 Digit) format. Additional code of four digits is optional and provides a more specific location within a given ZIP code. If additional code is not provided, it can be represented with value as '0000'. For example, 32714-1234 or 32714-0000.



            Postal codes are string of characters for non-US addresses.
        CountryCode:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CountryCode'
        AddrType:
          type: string
          description: "Type of the address.\n\n**Note:** This field is required to be provided if, new or existing address is to be linked to the card.\n\nCard can have one primary, one secondary and two seasonal addresses. \n\nHowever, seasonal address cannot exist as a single address record hence, it is always related to a primary/secondary address. Therefore, seasonal address always shares AddressIdent and AddrUse with primary or the secondary address. \n\nIn order to relate the primary/secondary address with seasonal address, present the seasonal address right after the primary/secondary address.\n\nIt is required to provide the TimeFrame for seasonal address."
          enum:
          - Primary
          - Secondary
          - Seasonal
        TimeFrame:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_TimeFrame_1'
        Retention:
          type: boolean
          description: |-
            Flag to indicate whether the address to be retained after it's timeframe.

            **Note:** Retention code indicates if the address record is to be retained, or deleted if no accounts, tax addenda or any other relationship exists on an address record.

            If new address record is to be created during account opening process with retention code as true, and if account opening process fails due to an error, ESF does not delete the new address record from system (if new address was created prior to an error). Address record remains in the system even if the account is not created due to an error.
        CensusTract:
          maxLength: 20
          type: string
          description: Census track number assigned by the U.S. Census Bureau to identify a geographic location.
        CensusBlock:
          maxLength: 20
          type: string
          description: Census block number assigned by the U.S. Postal Service to uniquely identify each carrier delivery point.
        ForeignFlag:
          type: boolean
          description: Flag to indicate if the given address is foreign address.
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** This field indicates the special routing information for customer correspondence. Values in this field are client-defined.
        HandlingCodeOption:
          type: string
          description: 'Notification and statement forms handling option. This code indicates which documents will be printed with handling messages. '
          enum:
          - StatementsNoticesChecks
          - Statements
          - StatementsNotices
          - StatementsChecks
          - Notices
          - NoticesChecks
          - Checks
          - DoNotPrint
        MSACode:
          type: integer
          description: MSA Code identifies a Metropolitan Statistical Area for postal delivery purposes. This code is defined by the U.S. Office of Management and Budget (OMB), and used by the U.S. Census Bureau and other federal government agencies for statistical purposes.
          format: int64
    CardAddOperRequest_CardInfo_CurAmt_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: |-
            Standard ISO currency code format.



            Refer to the <a href="https://en.wikipedia.org/wiki/ISO_4217" target="_blank" title="Click to open in a new tab">ISO 4217 codes </a> to view the list of all currency codes.
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\n\n\nPresently only USD currency code is supported."
      description: |+
        Details of the currency code.

    CardAddOperRequest_CardInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.



            Example: 10.00
        CurCode:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt_CurCode'
      description: Details of the transaction limit amount applicable for the party.
    CardAddOperRequest_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: "Type of the transaction limit.  \n\n**Note:** This field is used in combination with transaction service and CardTrnLimit to identify, the amount of limit defined for a card."
          enum:
          - Debit
          - Credit
          - Withdrawal
        TrnSubType:
          maxLength: 15
          type: string
          description: Subtype of the transaction.
        TrnSrc:
          type: string
          description: |-
            Source of the transaction to apply the transaction limit.

            **Note:** OnLine/OffLine terms refer to the two distinct ways of processing debit payments i.e. online/offline. Customers need to endorse payments by submitting their personal identification numbers (PINs) at the point of sale in case of online debit transaction, whereas shoppers need to sign the sales receipts in case of offline transactions. POS refers to withdrawal of funds through a point-of-sale transaction (typically a cash or debit card purchase). ATM refers to withdrawal of funds using an ATM machine.
          enum:
          - ATM
          - POS
        LimitType:
          type: string
          description: 'Type of the transaction limit. '
          enum:
          - DailyMax
          - TrnMax
        CurAmt:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt'
    CardAddOperRequest_CardInfo_MaxCreditLimitAmt_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\n\n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes."
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\n\n\nPresently only USD currency code is supported."
      description: |+
        Details of the currency code.

    CardAddOperRequest_CardInfo_MaxCreditLimitAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Value that generates card order to replace the existing EFT card issued to the cardholder.





            **Note:** Credit card limit refers to the maximum amount a customer can withdraw in a 24-hour period (midnight to midnight), using the debit card as a credit card.
        CurCode:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_MaxCreditLimitAmt_CurCode'
      description: |-
        Maximum amount the cardholder can spend using a debit card in a day.

        **Note:** This aggregate is optional and provides maximum withdrawal limit per day on a debit card.
    CardAddOperRequest_CardInfo_CardPref:
      type: object
      properties:
        Language:
          maxLength: 17
          type: string
          description: 'Preferred language to provide the card-related information. '
      description: Details of card preference to use the card.
    CardAddOperRequest_CardInfo_CardPeriodData:
      properties:
        CardAmtType:
          type: string
          description: |+
            Type of amount processed using card in the mentioned period.

          enum:
          - ForeignFeeWaived
          - ForeignFee
        CardPeriodType:
          type: string
          description: |-
            Indicator to define the type of date range for the card period.



            **Note:** This field indicates the period in which data is reported. For example, month to date (MTD), life to date (LTD), etc. Only MTD value is supported.
          enum:
          - MTD
        Amt:
          type: number
          description: |-
            Amount in decimal format.



            Example: 10.00
        Count:
          type: integer
          description: Number of occurrences with respect to the specified unit value.
          format: int64
    CardAddOperRequest_CardInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.







            **Note:** This field identifies the account which needs to be linked to the card.
        AcctType:
          type: string
          description: "Type of an account.\n\n\n\nFor more information about account types, refer to the Account Types section in <a href=\"../docs?path=docs/api-glossary.md\" target=\"_blank\" title=\"Click to open in a new tab\"> Glossary</a>.\n\n**Note:** This field identifies the type of account to be linked to the card. Account types DDA, SDA or LOAN can be linked to the card. \n\nMultiple accounts of same account type can be linked to a card. AcctType uniquely identify the account that is linked to the card."
          enum:
          - DDA
          - SDA
          - LOAN
      description: Unique information to identify the account record.
    CardAddOperRequest_CardInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctRef_AcctKeys'
      description: Reference information of the account that is part of the relationship.
    CardAddOperRequest_CardInfo_AcctLinkData:
      properties:
        AcctRef:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctRef'
        Nickname:
          maxLength: 80
          type: string
          description: |-
            Name that customer can assign to the cards for easy identification.

            **Note:** Nickname of the accountholder on an account can be updated by providing this field in request. Maximum field length of 18 characters is supported. This field is an account-level detail and cannot be amended as a standalone field therefore, AcctId and AcctType of account linked with the card should be provided corresponding to the Nickname to be updated.
    CardAddOperRequest_CardInfo:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number assigned to the card.



            **Note:** This field does not include the ISO.

            It can be provided if, known/obtained prior to opening a new card. If not provided, account number for new card will be generated.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card sequence number that typically refers to the member number to whom the card is issued. \n\n**Note:** Member number on debit card is incremented by 1 each time a card is re-issued (up to 8), or is incremented by 2 each time a debit card is force re-issued.\n\nThis field can be provided only if supported by CardType."
        CardType:
          type: string
          description: "Type of a card. \n\n**Note:** *Required field*\n\n\n\nThis field refers to the client-defined debit card type code, and established in debit card type specifications, that includes the type of card to be produced for the account (For example, standard debit card/VISA)."
        ProductIdent:
          maxLength: 42
          type: string
          description: "Unique identifier of a product. \n\nThis value is used to indicate the processing options of the card.\n\n**Note:** *Required field*\n\n\n\nThis field refers to product number."
        CardIdent:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardIdent'
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the account.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_RelationshipMgr'
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.

            **Note:** *Required field*



            Values indicate following:

            - Active (0): Indicates an active card which will be re-issued when it is activated.

            - Do not renew (1): Indicates an active card which will not be re-issued when it expires.

            - No withdrawal (7): Indicates that withdrawals are not allowed.

            - Hot card (8): Indicates a hot card which will be captured if an ATM has the card capture feature.
          enum:
          - Active
          - ActiveNoRenew
          - NoWithdrawal
          - HotCard
        CardFee:
          type: array
          description: |-
            Details of the charges and fees applicable to the card.

            **Note:** If CardInfo/CardPeriodData/CardAmtType is provided in request, then FeePlan provided for ForeignFee is overridden by the CardAmtType. To use the FeePlan provided in CardFee aggregate, CardInfo/CardPeriodData/CardAmtType should not be sent in request.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardFee'
        ChargeFeeAcct:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_ChargeFeeAcct'
        OpenDt:
          type: string
          description: "Date on which the card record was created.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** *Required field*"
          format: date
        ExpDt:
          type: string
          description: "Date after which the card becomes inactive.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** *Required field*"
          format: date
        NextIssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Date of the next issue of the card.\n\n\n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999   \n\n**Note:** *Required field*\n\nThis field is required to be provided."
        CardCategory:
          type: string
          description: |-
            Category of a card.

            **Note:** *Required field*
          enum:
          - Personal
          - Business
        PersonEmbossingName:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_PersonEmbossingName'
        EmbossingName:
          maxLength: 80
          type: string
          description: |-
            Name embossed on the front side of the card.

            **Note:** *Required field*



            Maximum length: 26 characters.
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: |-
            Additional description line that appears on the front side of the card.

            **Note:** *Required field*



            Maximum length: 26 characters.
        PostAddr:
          type: array
          description: |-
            Details of the cardholder's postal address.

            **Note:** Card can have one primary, one secondary and two seasonal addresses associated to it.

            Seasonal address cannot exist as a single address record and is related to either primary or secondary address. Therefore, seasonal address shares AddressIdent and AddrUse fields with primary and secondary address.

            Value of AddrUse for primary and related seasonal address is 'Inquiry'.

            Value of AddrUse for secondary and related seasonal address is 'Mailing'.

            If "mailing name options" parameter is configured at financial institution, it determines if card can have different inquiry and mailing address/ names.

            - If parameter is set to N, both inquiry and mailing addresses are same therefore, only primary address type and AddrUse as Inquiry is to be provided.

            - If parameter is set to Y, both inquiry and mailing addresses can be different therefore, secondary address type and AddrUse as Mailing and Names is to be provided.

            - If existing address is to be linked to a card then, AddressIdent including AddrType, AddrUse and AdddrFormatType are required to be provided.

            - If new address is to be created for a card, address details including AddrType, AddrUse and AdddrFormatType is required to be provided.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_PostAddr'
        CardTrnLimit:
          type: array
          description: |-
            Details of the card transaction limit.

            **Note:** This is an optional aggregate and used to set a limit, based on the type and source of transaction.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardTrnLimit'
        MaxCreditLimitAmt:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_MaxCreditLimitAmt'
        GenerateCardOrder:
          type: string
          description: Value that generates card order to replace the existing EFT card issued to the cardholder.
          enum:
          - ReplaceCard
          - NewCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: 'Field to enable or disable the generation of a PIN Mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholder''s address. '
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardPref'
        CardVerifyData:
          type: string
          description: 'Field to enable or disable the verification process on a newly ordered debit card. '
          enum:
          - ValidateCard
          - DoNotValidateCard
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** This field refers to the two-digit branch number to which the card is assigned.
        ResponsibleBranch:
          maxLength: 32
          type: string
          description: |-
            Branch responsible for the relationship.

            **Note:** This field refers to client-defined accounting branch for similar accounting, processing and integration into the general ledger. Accounting Branch can also be used to group accounts for reporting.
        CardPeriodData:
          type: array
          description: Periodic details of a card recurring at regular intervals.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardPeriodData'
        DocDistributionOption:
          type: string
          description: |-
            Distribution method to process the statements and notices.



            **Note:** Values of this field are client-defined.
        NicknameOption:
          type: string
          description: Indicates the printing option for the account nickname on card.
          enum:
          - Printed
          - NotPrinted
        Nickname:
          maxLength: 80
          type: string
          description: |-
            Name that customer can assign to the cards for easy identification.

            **Note:** Maximum field length: 40 characters.
        ReportGroupCode:
          type: string
          description: |-
            Client-defined code to group the accounts for reporting purposes.

            **Note:** Values of this field are client-defined.
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** This field refers to the handling code to indicate the handling message printed in customer name and address area on all special forms. Values can be defined as data descriptions.
        PINOffset:
          maxLength: 10
          type: string
          description: |-
            PIN Offset number assigned to the card.

            **Note:** This field refers to a number, used with an algorithm specified in the institution specification file, to yield the personal identification number of a card holder.
        PINOffsetResetInd:
          type: boolean
          description: |+
            Flag to indicate if the PIN offset is calculated.

        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of invalid PIN entry attempts allowed.
          format: int64
        AcctLinkData:
          type: array
          description: |-
            Details of the accounts to be linked to a debit card.

            **Note:** Multiple accounts can be associated to a new card by passing multiple occurrences of this aggregate in request. If the aggregate is provided then, values of  AcctRef/AcctKeys/AcctId and AcctRef/AcctKeys/AcctType should be sent to link with the card. Maximum 10 accounts can be linked to the card (for all account types). Time accounts cannot be linked to the card. Maximum number of accounts that can be linked to the card can be controlled with card specifications file by Financial Institution (FI). CardAcctRelInq operation can be used to fetch the accounts linked to the card.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctLinkData'
      description: Detailed information about the card.
    CardAddOperResponse_CardStatusRec_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by a financial institution.

            This number is printed on the front side of the card.

            **Note:** Card account number reference to the card of 6-10 digit is returned in the response. PAN number of 16-digit is not available through the core interface due to PCI compliance restrictive norms hence, CardId returned in response should be used as key to call ESF CardInq operation to fetch the details of card.
      description: Details of card keys that contain unique information about the card record.
    CardAddOperResponse_CardStatusRec_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: Status code of the card.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-12-31T23:59:59.999"
      description: Details of the card status returned in the result of API call.
    CardAddOperResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardStatus'
      description: Details of the card status record.
    CardDelOperSecuredRequest_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: Unique identification number of a card maintained by a financial institute. This number is printed on the front side of the card.
      description: Unique information about the card record.
    CardDelOperSecuredResponse_CardStatusRec_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by a financial institution.

            This number is printed on the front side of the card.
      description: Details of card keys that contain unique information about the card record.
    CardDelOperSecuredResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardDelOperSecuredResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardStatus'
      description: Details of the card status record.
    CardInqOperSecuredRequest_CardSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by a financial institute.

            This number is printed on the front side of the card.

            **Note:** *Required*

            This field refers to the value returned by CardAdd operation in response. CardId is the card-account number of 6-10 digits and not the 16-digit PAN number. CardId should be provided in the request of CardAcctRelInq operation, to obtain the card-account relationship (details of the accounts linked with the card). Relationship between card and an account is established using CardAcctRelMod operation.
      description: |-
        Details of card keys that contain unique information about the card record.

        **Note:** This aggregate contains key fields that are required for inquiry operation.
    CardInqOperSecuredRequest_CardSel:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel_CardKeys'
      description: |-
        Criteria to select the card record.



        **Note:** *Required*



        It is required to provide this aggregate in the request. This aggregate contains CardId which is used to retrieve the details of card that is created using CardAdd operation.
    CardInqOperSecuredResponse_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by a financial institute.

            This number is printed on the front side of the card.
      description: Details of card keys that contain unique information about the card record.
    CardInqOperSecuredResponse_CardInfo_RelationshipMgr:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of a relationship manager.

            **Note:** Referral responsibility code identifies the employee who referred the customer to the institution.
        RelationshipRole:
          type: string
          description: Role of a relationship manager.
          enum:
          - Officer
          - ReferralOfficer
    CardInqOperSecuredResponse_CardInfo_TimeFrame:
      type: object
      properties:
        RecurRule:
          type: array
          description: Details of the recurrent rule.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_TimeFrame_RecurRule'
      description: "Time frame for the applicable fee. \n\n\n\n"
    CardInqOperSecuredResponse_CardInfo_CardFee:
      required:
      - CardFeeType
      properties:
        CardFeeType:
          type: string
          description: |-
            Type of card fee.

            **Note:** This field identifies the fee type (card fee or foreign fee).
          enum:
          - CardFee
          - ForeignFee
        FeePlan:
          maxLength: 80
          type: string
          description: |+
            Fee plan to charge the card fee.

            **Note:** If CardFeeType is CardFee, then charge code indicates one of the 20 charges from debit card charge specifications that is to be assessed on the debit card account. Debit card charge code specifications can be configured by bank/FI as per requirement.

            If CardFeeType is ForeignFee, then FeePlan indicates the surcharge option i.e., assessment type for foreign ATM fee transactions. This is only applicable while using the ITI on-line ATM system.

            Value of FeePlan is not transformed by ESF and is passed as-is between core and application.

        TimeFrame:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_TimeFrame'
    CardInqOperSecuredResponse_CardInfo_ChargeFeeAcct:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.







            **Note:** This field refers to the DDA or savings account number of account that is debited for debit card service fees.
      description: Details of the charge fee account that is designated to pay the fee charges.
    CardInqOperSecuredResponse_CardInfo_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: Standard country code format.
          enum:
          - SPCountryCode
        CountryCodeValue:
          type: string
          description: Country code value as per the country code format set in the CountryCodeSource field.
        CountryCodeValueEnumDesc:
          maxLength: 80
          type: string
          description: Description of the enumeration value in **CountryCodeValue** field.
      description: Details of the country code of the cardholder.
    CardInqOperSecuredResponse_CardInfo_TimeFrame_1:
      type: object
      properties:
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Start date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** Only applicable if AddrType is seasonal. Seasonal address is enabled on same start and end date every year therefore, ESF displays 9999 as the start year in response for schema validation purpose. Actual month and day is shown in start date of seasonal address.
        EndDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            End date and time value to search the transaction record.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** Only applicable if AddrType is seasonal. Seasonal address is enabled on same start and end date every year therefore, ESF displays 9999 as the start year in response for schema validation purpose. Actual month and day is shown in start date of seasonal address.
      description: Details of the time frame when the address is active.
    CardInqOperSecuredResponse_CardInfo_PostAddr:
      required:
      - AddrType
      properties:
        NameIdent:
          maxLength: 36
          type: array
          description: |-
            Unique identifier of a name value. This field is used to identify names related to the account record.

            **Note:** AddrUse can have up to 3 name identifiers.
          items: {}
        AddressIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of an address record.

            **Note:** This field refers to unique address identifier that is shared by primary and related seasonal address.
        AddrUse:
          type: string
          description: |-
            Usage of the address.

            **Note:** Value of AddrUse for primary and related seasonal address is 'Inquiry'.

            Value of AddrUse for secondary and related seasonal address is 'Mailing'.

            If "Mailing Name Options" parameter is configured at financial institution, it determines if card account can have different inquiry and mailing address/names.

            - If parameter is set to N, both inquiry and mailing addresses are same therefore, only inquiry address is returned by ESF.

            - If parameter is set to Y, both inquiry and mailing addresses can be different therefore, both will be returned by ESF in response.
          enum:
          - Inquiry
          - Mailing
        AddrFormatType:
          type: string
          description: |-
            Type of address format.

            **Note:** Address is in label format.
          enum:
          - Label
        FullName1:
          maxLength: 96
          type: string
          description: |-
            Full name line 1.

            **Note:** Refers to first name of the customer for account mailing or inquiry purpose.
        FullName2:
          maxLength: 96
          type: string
          description: |-
            Full name line 2.

            **Note:** Refers to second name of the customer for account mailing or inquiry purpose.
        FullName3:
          maxLength: 96
          type: string
          description: |-
            Full name line 3.

            **Note:** Refers to third name of the customer for account mailing or inquiry purpose.
        Addr1:
          maxLength: 64
          type: string
          description: Address line 1.
        Addr2:
          maxLength: 64
          type: string
          description: "Address line 2. \n\nTo enter Addr2, Addr1 field must be provided.\n\n**Note:** This field is supported if enabled in the CIS miscellaneous (institution) specifications."
        City:
          maxLength: 32
          type: string
          description: Name of the city.
        StateProv:
          type: string
          description: State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.
        PostalCode:
          maxLength: 11
          type: string
          description: |-
            Postal code or Zip code.

            **Note:** Postal code provides information about the ZIP code if, address is from United States and, provides information about postal code if, address is not from United States.  This field provides the information in ZIP code (5 Digit)-additional code (4 Digit) format. Additional code of four digits is optional and provides a more specific location within a given ZIP code. If additional code is not provided, it can be represented with value as '0000'. For example, 32714-1234 or 32714-0000.
        CountryCode:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CountryCode'
        AddrType:
          type: string
          description: |-
            Type of the address.

            **Note:** Account can have primary and seasonal address type. Seasonal address cannot exist as a single address record and is related to either primary or secondary address. Therefore, seasonal address shares AddressIdent with primary address.
          enum:
          - Primary
          - Seasonal
        TimeFrame:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_TimeFrame_1'
        Retention:
          type: boolean
          description: Flag to indicate if the address should be retained after its timeframe.
        CensusTract:
          maxLength: 20
          type: string
          description: Census track number assigned by the U.S. Census Bureau to identify a geographic location.
        CensusBlock:
          maxLength: 20
          type: string
          description: Census block number assigned by the U.S. Postal Service to uniquely identify each carrier delivery point.
        ForeignFlag:
          type: boolean
          description: Flag to indicate if the given address is foreign address.
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** This field indicates the special routing information for customer correspondence. Values in this field are client-defined.
        HandlingCodeOption:
          type: string
          description: "Notification and statement forms handling option. This code indicates which documents will be printed with handling messages. \n\n**Note:** This field identifies type of correspondence that will print the handling messages, as defined by HandlingCode."
          enum:
          - Statements
          - StatementsNotices
          - StatementsChecks
          - Notices
          - NoticesChecks
          - Checks
          - DoNotPrint
          - UsePortfolio
          - StatementsNoticesChecks
        MSACode:
          type: integer
          description: |-
            Code that identifies a Metropolitan Statistical Area for postal delivery purposes. This code is defined by the U.S. Office of Management and Budget (OMB) and used by the U.S. Census Bureau and other federal government agencies for statistical purposes.

            **Note:** Refers to the client-defined metropolitan statistical area code, assigned by the U.S. Office of Management and Budget to identify areas which contain a city or urbanized area(s) with a population of 50,000 plus.
          format: int64
    CardInqOperSecuredResponse_CardInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.



            Example: 10.00.
        CurCode:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt_CurCode'
      description: Details of the transaction limit amount applicable for the party.
    CardInqOperSecuredResponse_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: "Type of the transaction limit.  \n\n**Note:** This field is used in combination with transaction service and CardTrnLimit to identify, the limit amount defined for a card."
          enum:
          - Debit
          - Credit
          - Withdrawal
        TrnSubType:
          maxLength: 15
          type: string
          description: |-
            Subtype of the transaction limit.

            **Note:** Used in combination with transaction service and CardTrnLimit to identify, the limit amount defined for a card.
        TrnSrc:
          type: string
          description: |-
            Source of the transaction to apply the transaction limit.

            **Note:** Used in combination with transaction service and CardTrnLimit to identify, the limit amount defined for a card.

            OnLine/OffLine terms refer to the two distinct ways of processing debit payments i.e., online/offline. Customers need to endorse payments by submitting their personal identification numbers (PINs) at the point of sale in case of online debit transaction, whereas shoppers need to sign the sales receipts in case of offline transactions.
          enum:
          - ATM
          - POS
        LimitType:
          type: string
          description: "Type of the transaction limit. \n\n**Note:** This field is used in combination with transaction service and CardTrnLimit to identify, the limit amount defined for a card."
          enum:
          - DailyMax
          - TrnMax
        CurAmt:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CurAmt'
    CardInqOperSecuredResponse_CardInfo_MaxCreditLimitAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.



            Example: 10.00

            **Note:** Credit card limit refers to the maximum amount a customer can withdraw in a 24-hour period (midnight to midnight), using the debit card as a credit card.
        CurCode:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt_CurCode'
      description: Maximum amount the cardholder can spend using a debit card in a day.
    CardInqOperSecuredResponse_CardInfo_AtmPosOverdraft:
      type: object
      properties:
        AuthLimitOption:
          type: string
          description: 'Authorization limit option to indicate the permission level of customers to authorize the ATM or POS transaction payments. '
          enum:
          - NoAuthorized
          - OptInAtmAuthLimit
          - OptInAtmODLimit
          - OptInAtmPosAuthLimit
          - OptInAtmPosODLimit
          - OptInPosAuthLimit
          - OptInPosODLimit
          - OptOut
          - OptOutCourtesy
          - OptOutNoReply
      description: Method to process overdraft transactions (transactions exceeding available balance) carried out at ATM and POS systems.
    CardInqOperSecuredResponse_CardInfo_DateData:
      properties:
        DateType:
          type: string
          description: |+
            Type of date associated with the transaction.

            **Note:** Value of LastFileMaint relates to generic updates done on files and is referred to 'Last Change Date' in core. This value indicates the date on which last maintenance of files occurred.

            Value of LastActivity relates to transactions done and refers to 'Last Activity Date' in core. This value indicates the most recent date when debit card was used for transaction.

          enum:
          - LastFileMaint
          - LastActivity
        DateValue:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999
    CardInqOperSecuredResponse_CardInfo_CardPeriodData:
      properties:
        CardAmtType:
          type: string
          description: Type of amount that was processed using card in the mentioned period.
          enum:
          - ForeignFeeWaived
          - ForeignFee
        CardPeriodType:
          type: string
          description: |+
            Indicator to define the type of date range for the card period.

          enum:
          - MTD
        LastOccurInd:
          type: boolean
          description: Flag to indicate if the data refers to a last occurrence.
        Amt:
          type: number
          description: |-
            Amount in decimal format.



            Example: 10.00
        Count:
          type: integer
          description: Duration of the time frame with respect to the specified unit value.
          format: int64
    CardInqOperSecuredResponse_CardInfo:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number assigned to the card.



            **Note:** This field does not comply with ISO. Value of this field contains card-account number of maximum 10 digits.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card sequence number that typically refers to the member number to whom the card is issued. \n\n\n\n**Note:** This field refers to the member number on a debit card and is incremented by 1 each time a card is re-issued (up to 8) and is incremented by 2 each time, if a debit card is force re-issued."
        CardType:
          type: string
          description: |-
            Type of a card.

            **Note:** This field refers to the client-defined code for type of debit card established in debit card type specifications and used to indicate the type of debit card to be produced for an account (Standard Debit Card, VISA etc.).
        ProductIdent:
          maxLength: 42
          type: string
          description: |-
            Product identification number. The product assigned to card account. This product is used to identify the processing parameters of the card such as interest rates, statement cycles, descriptions, account modeling information and field overrides.

            **Note:** The product assigned to this account. The product is established in product specifications using premier administrator and controls parameters such as interest rates, statement cycles, descriptions, account modeling information and field overrides.
        Desc:
          maxLength: 200
          type: string
          description: Description of the product identifier.
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the account.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_RelationshipMgr'
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.

            **Note:** Values indicate following:

            - Active (0): Indicates an active card which will be re-issued when it is activated.

            - Do Not Renew (1): Indicates an active card which will not be re-issued when it expires.

            - No Withdrawal (7): Indicates that withdrawals are not allowed.

            - Hot Card (8): Indicates a hot card which will be captured if an ATM has the card capture feature.

            - Closed (9): Indicates a closed card which will be captured if an ATM has the card capture feature.
          enum:
          - Active
          - ActiveNoRenew
          - NoWithdrawal
          - HotCard
          - Closed
        CardDtlStatusEnumDesc:
          maxLength: 80
          type: string
          description: Description of the enumeration value in the CardDtlStatus field.
        CardFee:
          type: array
          description: Details of the charges and fees applicable to the card.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardFee'
        ChargeFeeAcct:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_ChargeFeeAcct'
        OpenDt:
          type: string
          description: "Date on which the card record was created.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** This field refers to the debit card account opening date."
          format: date
        IssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Date on which the current card was issued. \n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
        ExpDt:
          type: string
          description: "Date after which the card becomes inactive.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        NextIssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Date of the next issue of the card.\n\n\n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999   "
        CardCategory:
          type: string
          description: Category of a card.
          enum:
          - Personal
          - Business
        EmbossingName:
          maxLength: 80
          type: string
          description: |-
            Name embossed on the front side of the card.

            **Note:** This field refers to the name that appears as raised letters on debit card.
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: Additional description line that appears on the front side of the card.
        PostAddr:
          type: array
          description: Details of the cardholder's postal address.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_PostAddr'
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardTrnLimit'
        MaxCreditLimitAmt:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_MaxCreditLimitAmt'
        AtmPosOverdraft:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_AtmPosOverdraft'
        GenerateCardOrder:
          type: string
          description: Value that generates card order to replace the existing EFT card issued to the cardholder.
          enum:
          - ReplaceCard
          - NewCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: 'Field to enable or disable the generation of a PIN Mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholder''s address. '
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardPref'
        DateData:
          type: array
          description: Details of transactions done at a particular date.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_DateData'
        PreviousExpDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Expiry date of the previous card. This date is used as a reference to order a new card and sometimes to verify the expiry date of the issued card if the card is not in use.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** This field refers to the two-digit branch number to which the card is assigned.
        ResponsibleBranch:
          maxLength: 32
          type: string
          description: |-
            Branch responsible for the relationship.

            **Note:** This field refers to client-defined accounting branch for similar accounting, processing and integration into the general ledger. Accounting branch can also be used to group accounts for reporting.
        CardPeriodData:
          type: array
          description: Periodic details of a card recurring at regular intervals.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardPeriodData'
        DocDistributionOption:
          type: string
          description: |+
            Distribution method to process the Statements and notices.

        NicknameOption:
          type: string
          description: 'Field to indicate the printing option for the account nickname. '
          enum:
          - Printed
          - NotPrinted
        Nickname:
          maxLength: 80
          type: string
          description: Name that customer can assign to the cards for easy identification.
        ReportGroupCode:
          type: string
          description: Client-defined code to group the accounts for reporting purposes.
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** This field refers to the handling code to indicate the handling message printed in customer name and address area on all special forms. Values can be defined as data descriptions.
        PINOffset:
          maxLength: 10
          type: string
          description: "PIN Offset number assigned to the card. \n\n**Note:** This field refers to a number, used with an algorithm specified in the institution specification file, to yield the personal identification number of a card holder."
        PINOffsetResetInd:
          type: boolean
          description: "Flag to indicate if the PIN offset is calculated. \n\n"
        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of invalid PIN entry attempts allowed.
          format: int64
      description: Detailed information about the card.
    CardInqOperSecuredResponse_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: |-
            Status code of the card.

            **Note:** This field is used to indicate current status of debit card.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999"
      description: Details of the card status returned in the result of API call.
    CardInqOperSecuredResponse_CardRec:
      required:
      - CardInfo
      - CardKeys
      - CardStatus
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo'
        CardStatus:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardStatus'
    CardModOperRequest_CardInfo_TimeFrame_RecurRule:
      properties:
        RecurType:
          type: string
          description: 'Type of recurrence. '
          enum:
          - Cycle
        RecurInterval:
          type: integer
          description: |+
            Card fee payment recurrence interval. This value defines the payment interval between two successive occurrences. For example, if the recurrence type value is set to 'Monthly' and the recurrence interval set to '1', then there will be 1-month-month interval between the next payment.

            The default value is set to 1.

          format: int64
    CardModOperRequest_CardInfo_TimeFrame:
      type: object
      properties:
        RecurRule:
          type: array
          description: Details of the recurrence rule.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_TimeFrame_RecurRule'
      description: "Time frame details of the applicable fee. \n\n\n\n"
    CardModOperRequest_CardInfo_CardFee:
      required:
      - CardFeeType
      properties:
        CardFeeType:
          type: string
          description: Type of a card fee.
          enum:
          - CardFee
          - ForeignFee
        FeePlan:
          maxLength: 80
          type: string
          description: |-
            Fee plan to charge the card fee.

            **Note:** If CardFeeType is CardFee, then charge code indicates one of the 20 charges from debit card charge specifications that is to be assessed on the debit card account. Debit card charge code specifications can be configured by bank/FI.



            If CardFeeType is ForeignFee, then FeePlan indicates the surcharge option i.e., assessment type for foreign ATM fee transactions. This is only applicable while using the ITI on-line ATM system.

            Value of FeePlan is not transformed by ESF and is passed as-is between core and application.
        TimeFrame:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_TimeFrame'
    CardModOperRequest_CardInfo_PostAddr:
      required:
      - AddrType
      properties:
        OpenDt:
          type: string
          description: "Date on which the card record was created.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** This field is not applicable for seasonal address type."
          format: date
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the account.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_RelationshipMgr_1'
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** This field refers to the branch region and values are user-defined. Not applicable for seasonal address type.
        ResponsibleBranch:
          maxLength: 32
          type: string
          description: "Branch responsible for the relationship.\n\n**Note:** This field refers to the accounting branch associated to address record and does not apply to seasonal address type. Values are user-defined. "
        NameIdent:
          maxLength: 36
          type: array
          description: |+
            Name identification value to identify the names related to the account address.

            **Note:** This field is applicable if AddrType is secondary and AddrUse is mailing.

            Only up to 3 name identifiers can be provided if financial institution is configured to use different primary/inquiry and secondary/mailing addresses and names. If provided for Primary/Inquiry address it will be ignored as name relationships for inquiry are established using information provided in PartyCardRelInfo.

            Not applicable for seasonal address type.

            Only names which have a relationship to the card or card portfolio can be associated to the new card for mailing purpose.

          items: {}
        AddressIdent:
          maxLength: 36
          type: string
          description: |-
            Unique address identification value.

            **Note:** *Conditionally Required field*



            This field refers to unique address identifier shared by primary and related seasonal address, whereas secondary and related seasonal address.

            Required to be provided if existing address is to be added to the new card.

            Do not provide this field if new address is to be created for a card.
        AddrUse:
          type: string
          description: "Usage of the address. \n\n**Note:** *Required field*\n\n\n\nAddrUse for primary and related seasonal address is 'Inquiry', whereas for secondary and related seasonal address is 'Mailing'. This field is required to be provided if, new or existing address is to be linked to a card.\n\nIf \"Mailing Name Options\" parameter is configured at financial institution, it determines if card can have different inquiry and mailing address/names.\n\n- If parameter is set to N, both inquiry and mailing addresses are same therefore, primary/inquiry address information is supported.\n\n- If parameter is set to Y, then secondary/mailing and primary/inquiry addresses are supported whereas, inquiry and mailing address data can be provided in request.\n\nAddrUse for seasonal address is always same as primary/secondary address"
          enum:
          - Inquiry
          - Mailing
        AddrFormatType:
          type: string
          description: |-
            Type of address format.

            **Note:** *Required field*



            Label address format is supported.
          enum:
          - Label
        Addr1:
          maxLength: 64
          type: string
          description: "Address line 1.\n\n**Note:** *Conditionally Required field* \n\n\n\nThis field is required to be provided if new address record is to be created.\n\nValue is dependent on address and name Length option defined under miscellaneous specification. Field length can be either 30 or 40 characters long."
        Addr2:
          maxLength: 64
          type: string
          description: "Address line 2. \n\nTo enter Addr2, Addr1 field must be provided.\n\n**Note:** This field is supported if enabled under address and name length option defined under miscellaneous specification. Length can be either 40 or 30 characters."
        City:
          maxLength: 32
          type: string
          description: |+
            Name of the city.

            **Note:** *Conditionally Required*

            This field is required to be provided if a new address record is to be created.

            Field length is 20 characters long (including spaces). It is recommended for consumer to abbreviate the value sent in the EFX request to prevent truncation (For example, city name "Rancho Santa Margarita" exceeds 20 characters and can be abbreviated to "Rancho S Margarita" to avoid truncation). Total length of 40 characters is supported for city, StateProv and PostalCode (appended together) including spaces.

        StateProv:
          type: string
          description: |-
            State province code name of the cardholder as per the <a href"https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open in a new tab" target="_blank">ISO 3166-2:US</a> codes.

            **Note:** *Conditionally Required field*



            This field is required to be provided if, a new address record is to be created with country as United States.
        PostalCode:
          maxLength: 11
          type: string
          description: |-
            Postal code or Zip code.

            **Note:** *Conditionally Required*

            This field is required to be provided if, a new address record is to be created with country as United States.



            Postal code provides information about the ZIP code if, address is from United States and, provides information about postal code if, address is not from United States.  This field provides the information in ZIP Code (5 Digit)-Additional Code (4 Digit) format. Additional code of four digits is optional and provides a more specific location within a given ZIP code. If additional code is not provided, it can be represented with value as '0000'. For example, 32714-1234 or 32714-0000.



            Postal codes are string of characters for non-US addresses.
        CountryCode:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CountryCode'
        AddrType:
          type: string
          description: "Type of the address.\n\n**Note:** This field is required to be provided if, new or existing address is to be linked to the card.\n\nCard can have one primary, one secondary and two seasonal addresses. \n\nHowever, seasonal address cannot exist as a single address record hence, it is always related to a primary/secondary address. Therefore, seasonal address always shares AddressIdent and AddrUse with primary or the secondary address.\n\nIn order to relate the primary/secondary address with seasonal address, present the seasonal address right after the primary/secondary address.\n\nIt is required to provide the TimeFrame for seasonal address."
          enum:
          - Primary
          - Secondary
          - Seasonal
        TimeFrame:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_TimeFrame_1'
        Retention:
          type: boolean
          description: |-
            Flag to indicate whether the address to be retained after it's timeframe.

            **Note:** Retention code indicates if the address record is to be retained, or deleted if no accounts, tax addenda or any other relationship exists on an address record.

            If new address record is to be created during account opening process with retention code as true, and if account opening process fails due to an error, ESF does not delete the new address record from system (If new address was created prior to an error). Address record remains in the system even if the account is not created due to an error.
        CensusTract:
          maxLength: 20
          type: string
          description: Census track number assigned by the U.S. Census Bureau to identify a geographic location.
        CensusBlock:
          maxLength: 20
          type: string
          description: Census block number assigned by the U.S. Postal Service to uniquely identify each carrier delivery point.
        ForeignFlag:
          type: boolean
          description: Flag to indicate if the given address is foreign address.
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** This field indicates the special routing information for customer correspondence. Values in this field are client-defined.
        HandlingCodeOption:
          type: string
          description: "Notification and statement forms handling option. This code indicates which documents will be printed with handling messages. \n\n**Note:** This field identifies type of correspondence that will print the handling messages, as defined by HandlingCode."
          enum:
          - StatementsNoticesChecks
          - Statements
          - StatementsNotices
          - StatementsChecks
          - Notices
          - NoticesChecks
          - Checks
          - DoNotPrint
          - UsePortfolio
        MSACode:
          type: integer
          description: MSA Code identifies a Metropolitan Statistical Area for postal delivery purposes. This code is defined by the U.S. Office of Management and Budget (OMB), and used by the U.S. Census Bureau and other federal government agencies for statistical purposes.
          format: int64
    CardModOperRequest_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: 'Type of the transaction limit.  '
          enum:
          - Debit
          - Credit
          - Withdrawal
        TrnSubType:
          maxLength: 15
          type: string
          description: Subtype of the transaction.
        TrnSrc:
          type: string
          description: Source of the transaction to apply the transaction limit.
          enum:
          - ATM
          - POS
        LimitType:
          type: string
          description: 'Type of the transaction limit. '
          enum:
          - DailyMax
          - TrnMax
        CurAmt:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt'
    CardModOperRequest_CardInfo_MaxCreditLimitAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.



            Example: 10.00

            **Note:** Credit card limit refers to the maximum amount a customer can withdraw in a 24-hour period (midnight to midnight), using the debit card as a credit card.
        CurCode:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_MaxCreditLimitAmt_CurCode'
      description: Maximum amount the cardholder can spend using a debit card in a day.
    CardModOperRequest_CardInfo:
      type: object
      properties:
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card sequence number that typically refers to the member number to whom the card is issued. \n\n**Note:** Member number on debit card is incremented by 1 each time a card is re-issued (up to 8), or is incremented by 2 each time a debit card is force re-issued.\n\nThis field can be provided only if supported by CardType."
        CardType:
          type: string
          description: "Type of a card. \n\n**Note:** *Required*\n\nThis field refers to the client-defined debit card type code, and established in debit card type specifications, that includes the type of card to be produced for the account (For example, standard debit card/VISA)."
        ProductIdent:
          maxLength: 42
          type: string
          description: "Unique identifier of a product. \n\nThis value is used to indicate the processing options of the card.\n\n**Note:** The product assigned to this account. The product is established in product specifications using Premier administrator and controls parameters such as interest rates, statement cycles, descriptions, account modeling information and field overrides."
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the account.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_RelationshipMgr'
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.

            **Note:** Values indicate following:

            - Active (0): Indicates an active card which will be re-issued when it is activated.

            - Do not renew (1): Indicates an active card which will not be re-issued when it expires.

            - No withdrawal (7): Indicates that withdrawals are not allowed.

            - Hot card (8): Indicates a hot card which will be captured if an ATM has the card capture feature.

            - Closed (9): indicates a closed card which will be captured if an ATM has the card capture feature.
          enum:
          - Active
          - ActiveNoRenew
          - NoWithdrawal
          - HotCard
          - Closed
        CardFee:
          type: array
          description: Details of the charges and fees applicable to the card.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardFee'
        ChargeFeeAcct:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_ChargeFeeAcct'
        OpenDt:
          type: string
          description: "Date on which the card record was created.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        ExpDt:
          type: string
          description: "Date after which the card becomes inactive.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        NextIssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Date of the next issue of the card.\n\n\n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999   \n\n**Note:** *Required field*"
        CardCategory:
          type: string
          description: Category of a card.
          enum:
          - Personal
          - Business
        EmbossingName:
          maxLength: 80
          type: string
          description: |-
            Name embossed on the front side of the card.

            **Note:** *Required field*

            Maximum length: 26 characters
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: |-
            Additional description line that appears on the front side of the card.

            **Note:** *Required field*



            Maximum length: 26 characters.
        PostAddr:
          type: array
          description: |-
            Details of the cardholder's postal address.

            **Note:** Card can have one primary, one secondary and two seasonal addresses associated to it.

            Seasonal address cannot exist as a single address record and is related to either primary or secondary address. Therefore, seasonal address shares AddressIdent and AddrUse fields with primary and secondary address.

            Value of AddrUse for primary and related seasonal address is 'Inquiry'.

            Value of AddrUse for secondary and related seasonal address is 'Mailing'.

            If "Mailing Name Options" parameter is configured at financial institution, it determines if card can have different inquiry and mailing address/ names.

            - If parameter is set to N, both inquiry and mailing addresses are same therefore, only primary address type and AddrUse as Inquiry is to be provided.

            - If parameter is set to Y, both inquiry and mailing addresses can be different therefore, secondary address type and AddrUse as Mailing and Names is to be provided.

            If existing address is to be linked to a card then, AddressIdent including AddrType, AddrUse and AdddrFormatType are required to be provided.

            If new address is to be created for a card, address details including AddrType, AddrUse and AdddrFormatType is required to be provided.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_PostAddr'
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardTrnLimit'
        MaxCreditLimitAmt:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_MaxCreditLimitAmt'
        GenerateCardOrder:
          type: string
          description: Value that generates card order to replace the existing EFT card issued to the cardholder.
          enum:
          - ReplaceCard
          - NewCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: 'Field to enable or disable the generation of a PIN Mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholder''s address. '
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardPref'
        CardVerifyData:
          type: string
          description: 'Field to enable or disable the verification process on a newly ordered debit card. '
          enum:
          - ValidateCard
          - DoNotValidateCard
        PreviousExpDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Expiry date of the previous card. This date is used as a reference to order a new card and sometimes to verify the expiry date of the issued card if the card is not in use.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** This field refers to the two-digit branch number to which the card is assigned.
        ResponsibleBranch:
          maxLength: 32
          type: string
          description: Branch responsible for the relationship.
        CardPeriodData:
          type: array
          description: Periodic details of a card recurring at regular intervals.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardPeriodData'
        DocDistributionOption:
          type: string
          description: |-
            Distribution method to process the Statements and notices.



            **Note:** Values of this field are client-defined.
        NicknameOption:
          type: string
          description: Indicates the printing option for the account nickname on card.
        Nickname:
          maxLength: 80
          type: string
          description: |-
            Name that customer can assign to the cards for easy identification.

            **Note:** Maximum field length: 40 characters.
        ReportGroupCode:
          type: string
          description: |-
            Client-defined code to group the accounts for reporting purposes.

            **Note:** Values of this field are client-defined.
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** This field refers to the handling code to indicate the handling message printed in customer name and address area on all special forms. Values can be defined as data descriptions.
        PINOffset:
          maxLength: 10
          type: string
          description: |-
            PIN Offset number assigned to the card.

            **Note:** This field refers to a number, used with an algorithm specified in the institution specification file, to yield the personal identification number of a card holder.
        PINOffsetResetInd:
          type: boolean
          description: |+
            Flag to indicate if the PIN offset is calculated.

        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of invalid PIN entry attempts allowed.
          format: int64
      description: Detailed information about the card.
    CardModOperResponse_CardStatusRec_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: Status code of the card.
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-12-31T23:59:59.999"
      description: Details of the card status returned in the result of API call.
    CardModOperResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec_CardStatus'
      description: Details of the card status record.
