---
openapi: 3.0.1
info:
  title: Card Service
  description: ' The Card service provides administration in respect to creation, modification, inquiry, and deletion of any type of EFT cards used by the holders. It supports operations managing the credit, debit, prepaid and private label cards.'
  version: 11.0.0_SIG
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/CardService/11.0.0_SIG
  description: SwaggerHub API Auto Mocking
paths:
  /cards:
    put:
      tags:
      - Update Card
      summary: Update Card.
      description: "Modifies the information of an existing debit or credit card account, such as embossing details, flex data details, and account address and name details.<br>\n        <br>\n        For more information about the Cards domain, <a href=\"../docs/?path=docs/fintechs/cards.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: CardModOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardModOperRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardModOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardModOperResponse'
      x-group-name: Card Service
      x-proxy-name: Update Card
      x-child-product-name: Cards
      x-core: Signature
    post:
      tags:
      - Add Card
      summary: Add Card
      description: "Creates a new EFT card account (debit or credit) for one or multiple parties. EFT Cards are plastic cards used for electronic transactions. \n        <br><br>\n        For more information about the Cards domain, <a href=\"../docs/?path=docs/fintechs/cards.md\" title=\"Click to open\">click here.</a> \n        <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: CardAddOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardAddOperRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAddOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAddOperResponse'
      x-group-name: Card Service
      x-proxy-name: Add Card
      x-child-product-name: Cards
      x-core: Signature
  /cards/secured:
    put:
      tags:
      - Delete Card
      summary: Delete Card.
      description: "Deletes an existing debit or credit card account associated with a financial account.<br>\n        <br>\n        For more information about the Cards domain, <a href=\"../docs/?path=docs/fintechs/cards.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: CardDelOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDelOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDelOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDelOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Delete Card
      x-child-product-name: Cards
      x-core: Signature
    post:
      tags:
      - Get Card
      summary: Get Card.
      description: "Retrieves the details of an existing debit or credit card account.<br>\n        <br>\n        For more information about the Cards domain, <a href=\"../docs/?path=docs/fintechs/cards.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: CardInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Get Card
      x-child-product-name: Cards
      x-core: Signature
  /cards/secured/list:
    post:
      tags:
      - Get Card List
      summary: Get Card List.
      description: "Retrieves a list of card accounts.\n<br><br>\n        For more information about the Cards domain, <a href=\"../docs/?path=docs/fintechs/cards.md\" title=\"Click to open\">click here.</a> \n        <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: CardListInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardListInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListInqOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Get Card
      x-child-product-name: Cards
      x-core: Signature
components:
  schemas:
    CardAddOperRequest:
      required:
      - CardInfo
      properties:
        PartyCardRelInfo:
          type: array
          description: Details of the parties and their relationship with the card.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_PartyCardRelInfo'
        CardInfo:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo'
    CardAddOperResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardStatusRec:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec'
    CardDelOperSecuredRequest:
      required:
      - CardKeys
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardDelOperSecuredRequest_CardKeys'
    CardDelOperSecuredResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardStatusRec:
          $ref: '#/components/schemas/CardDelOperSecuredResponse_CardStatusRec'
    CardInqOperSecuredRequest:
      required:
      - CardSel
      properties:
        CardSel:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel'
    CardInqOperSecuredResponse:
      required:
      - CardRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardRec:
          type: array
          description: Details of the card record.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardRec'
    CardListInqOperSecuredRequest:
      required:
      - CardListSel
      properties:
        RecCtrlIn:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_RecCtrlIn'
        CardListSel:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel'
    CardListInqOperSecuredResponse:
      required:
      - CardListRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_RecCtrlOut'
        CardListRec:
          type: array
          description: "Details of the card list record.\n\n**Note:** Signature reserves card types Z for Signature Voice Response System. The card accounts belonging to this card type are not returned in the Card List inquiry response from Signature.\n\nThis aggregate will repeat multiple times based on the number of records returned in the response. \n\n"
          items:
            $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListRec'
    CardModOperRequest:
      required:
      - CardInfo
      - CardKeys
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardModOperRequest_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo'
    CardModOperResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardStatusRec:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          type: string
        TrnId:
          maxLength: 30
          type: string
        VendorId:
          type: string
          description: An identifier, supplied by Fiserv, that represents the vendor using  this API service.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Client Application Name of the application making the service request (e.g. Architect, Commercial Center, etc.).
        Channel:
          type: string
          description: Indicates the channel used by the client application.
        ClientDateTime:
          type: string
          description: Client date and time as reported by the client application that is making the service request.
          format: date-time
        ClientTerminalSeqNum:
          maxLength: 36
          type: string
          description: Also known as Trace Number or Sequence in some systems. Used to allow the client terminal to set a unique identifier for the transaction. When used by a Network defined transaction the value of this identifier is typically set to narrow character of 12.
        OriginatorType:
          type: integer
          description: "\"The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.\nOriginator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial\ninstitution—home banking\""
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor locatio (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
        TerminalAddr2:
          maxLength: 64
          type: string
        TerminalAddr3:
          maxLength: 64
          type: string
        TerminalAddr4:
          maxLength: 64
          type: string
        TerminalCity:
          maxLength: 32
          type: string
        TerminalCounty:
          maxLength: 32
          type: string
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State Province. ISO 3166-2:US codes.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: Postal Code is ZipCode in the US.
        TerminalCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - ISO3166Numeric
          - ISO3166Alpha3
        TerminalCountryCodeValue:
          maxLength: 80
          type: string
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifies the acquirer of the authorization or financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          maxLength: 23
          type: string
          description: Merchant Number. For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: This is the date on which the transaction will be settled. Used by ISO 8583 (DE63)
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BranchIdent:
          maxLength: 22
          type: string
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          enum:
          - Manual
          - Auto
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    CardAddOperRequest_PartyRef_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Customer permanent identifier or customer key.
      description: Unique information to identify the party record.
    CardAddOperRequest_PartyRef:
      required:
      - PartyKeys
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/CardAddOperRequest_PartyRef_PartyKeys'
      description: Reference information of the party object that is part of the relationship.
    CardAddOperRequest_PartyCardRelInfo:
      required:
      - PartyCardRelType
      - PartyRef
      properties:
        PartyRef:
          $ref: '#/components/schemas/CardAddOperRequest_PartyRef'
        PartyCardRelType:
          type: string
          description: "Type of relationship between party and a card.\n\n\n\n**Note:** Only value of 'Owner' for the party card relationship type field is supported. "
          enum:
          - Owner
    CardAddOperRequest_CardInfo_CardFee:
      required:
      - CardFeeType
      properties:
        CardFeeType:
          type: string
          description: |+
            Type of a card fee.

          enum:
          - TrnFee
          - CardFee
        WaiveFeeInd:
          type: boolean
          description: "Flag to indicate if the fees is to be waived.\n\n**Note:** Used to indicate if card or transaction fees should be waived or not. \n\n"
        NextFeeDt:
          type: string
          description: |-
            Date on which the card record fee of a card is assessed.

            Format: yyyy-MM-dd

            Example: 2021-12-31

            **Note:** The next fee date applies to card Fee only.
          format: date
    CardAddOperRequest_CardInfo_CurAmt_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes."
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\n\n\nPlease note that presently only USD currency code is supported."
      description: |+
        Details of the currency code.

    CardAddOperRequest_CardInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Transaction limit amount in the decimal format.

            Example: 200.00
        CurCode:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt_CurCode'
      description: Details of the transaction limit amount applicable for the party.
    CardAddOperRequest_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: "Type of the transaction limit.  \n\n"
          enum:
          - Withdrawal
          - DepositAvail
        TrnSrc:
          type: string
          description: |+
            Source of the transaction to apply the transaction limit.



          enum:
          - ATM
          - POS
          - POSOffline
          - POSOnline
          - ATMTemp
          - POSTemp
          - POSOfflineTemp
          - POSOnlineTemp
        LimitType:
          type: string
          description: 'Type of the transaction limit. '
          enum:
          - DailyMax
          - TrnMax
        CurAmt:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt'
        Percent:
          type: number
          description: |-
            Percentage value of transaction limit.

            **Note:** Percent attribute is applicable only if Transaction Type is Deposit Available, Transaction Source is ATM or ATMTemp and Limit Type is Daily Maximum.

            The percentage value for this field without the decimal places is supported.
        TempTrnLimitExpDt:
          type: string
          description: "Date on which the temporary transaction limit becomes inactive.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Should be provided if new card is intended to use temporary card limits.\n\nTemporary Card limits can only be set for below listed Transaction Source types:\n\n- ATMTemp\n\n- POSTemp\n\n- POSOfflineTemp\n\n- POSOnlineTemp\n\nOnly one expiration date for all temporary transaction limits is supported.\n\n"
          format: date
    CardAddOperRequest_CardInfo_CardPref:
      type: object
      properties:
        Language:
          type: string
          description: "Preferred language to provide the card-related information. \n\n**Note:** Code supplied by the device driver that identifies the language in which an ATM should display its screens. The language code resides on the cards magnetic stripe, and if the ATM is programmed to use language codes, it automatically displays screens in the language designated on the card. Valid values are 0-9 and A-Z.\n\n\n\n"
          enum:
          - 0-9
          - A-Z
      description: Details of card preference to use the card.
    CardAddOperRequest_CardInfo_PreviousCardData:
      type: object
      properties:
        ISOCode:
          type: string
          description: "Code to identify the ISO number of card.\n\n**Note:** Should be provided if the previous card data aggregate is sent in the request. \n\n"
        CardNum:
          maxLength: 32
          type: string
          description: "Number assigned to the card known as card account number of up to 10 digits.\n\n\n\n**Note:** Value in this field represents the card number for the previous (old) card that is replaced by a new card. Maximum 13 characters are supported. \n\nShould be provided if the previous card data aggregate is sent in the request. \n\n"
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number of the previous (old) card that is replaced by a new card. \n\nShould be provided in request if the previous card data aggregate is sent in the request. \n\n"
        CardType:
          type: string
          description: "Type of a card.\n\n\n\n**Note:** The user-defined, alphanumeric code to identify the type of the previous (old) card that is replaced by a new card. \n\nShould be provided if the previous card data aggregate is sent in the request. \n\n"
      description: "Details of the previous card.\n\n**Note:** Used to provide information related to the previous (old) card that is replaced by a new card. \n\nClient application should send valid values in the previous (old) expiration date field and in all the fields in the previous card data aggregate in the request if, the new card added is replacing an existing card. \n\n"
    CardAddOperRequest_CardInfo_RefData:
      required:
      - RefType
      properties:
        RefType:
          type: string
          description: "Reference type used to further identify the amount.\n\n\n\n**Note:** Valid values are: \n\n- IVR reference number [IVRRefNum] is number used by the cardholder to select a PIN with the Phone PIN product from Plastic Card Manufacturing for Signature.\n\n- Photo ID [Photo] is an alphanumeric identifier from the vendor to identify a photo associated with the cardholder/plastic (for example, SSN).\n\n- Signature [Signature] is an identifier from the vendor to identify the signature associated with the cardholder.\n\n- Card stock override [CardStock] identifier is a number assigned by a card vendor to identify a specific type of plastic used in the card production process. \n\n"
          enum:
          - IVRRefNum
          - Photo
          - Signature
          - CardStock
        RefIdent:
          maxLength: 36
          type: string
          description: |-
            Reference number is used in combination with reference type to further identify the amount.

            Disbursement reference number is displayed on customer statement for B2C transaction.

            Example: 1234588
    CardAddOperRequest_CardInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: "Unique identification number of an account record.\n\n\n\n\n\n\n\n**Note:** Refers to account number. "
        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md"  title="Click to open"> Glossary </a>.



            **Note:** External accounts are not supported.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
      description: Unique information to identify the account record.
    CardAddOperRequest_CardInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctRef_AcctKeys'
      description: Account reference information.
    CardAddOperRequest_CardInfo_AcctLinkData:
      properties:
        AcctRef:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctRef'
        OtherAcctRel:
          type: integer
          description: "Value to define the Other Account Relationship (OAR) with the card.\n\nAn OAR value of 1 identifies the account as the primary account for the account type. An OAR of 2 or greater identifies the account as secondary for this account type.\n\n \n\n\n\n**Note:** Sequence identifier to identify the sequence of account linked to the card. \n\nShould be provided for all repeating aggregates. "
          format: int64
        FinancialTrnOption:
          type: string
          description: "Code to identify the type of transactions this card can perform on an account.\n\n**Note:** Monetary flag also known as ‘financial capable flag’. "
          enum:
          - AllowAllTrn
          - AllowInqOnly
          - BlockAllTrn
          - BlockPOSTrn
    CardAddOperRequest_CardInfo:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: "Number assigned to the card known as card account number of up to 10 digits.\n\n\n\n**Note:** *Required field*\n\nCard number without the six-digit ISO prefix.\n\nThe ISO number should be sent separately in ProductIdent field. \n\nThe total length of PAN (Primary Account Number) is a maximum of 19 digits which includes the six digit ISO prefix. "
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. It is applicable if supported by the card type.\n\n\n\n**Note:** Refers to member number which is a one-digit number and it identifies multiple cards for different customers (for example, a wife’s card might have a 1 following it and the husband’s card might have a 2 following it to differentiate the cards). Only to be provided if member number functionality is  supported by financial institution. "
        CardType:
          type: string
          description: "Type of a card.\n\n\n\n**Note:** *Required field*\n\nUser-defined alphanumeric code that identifies the type of EFT card. Only one character is supported. \n\n"
        ProductIdent:
          maxLength: 42
          type: string
          description: |-
            Unique identifier of a product to indicate the processing options of the card.

            **Note:** Refers to sx digit ISO number.
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.



            **Note:** Status values are client-defined and the financial institutions ca use as per the preference.

            Values '1' and '2' indicate an 'Active' card record in core.

            Values '3' and '4' correspond to an 'Inactive' card which does not allow transactions and the card is returned to the user.

            Value of of '4' is associated to an open card record in an inactive state.

            Values '5' through '8' signify a 'Blocked' card, which does not allow transactions and the card is returned to the user.

            Value of '9' would imply a Card in 'Capture' status i.e. core does not allow transactions and card is retained.
          enum:
          - '1 to 4 '
        CardSurchargeOption:
          type: string
          description: "Option to indicate if surcharges should occur on the card.\n\n**Note:** Surcharge instruction override. Code to indicate if the system uses ISO-level surcharge instruction on checking and savings transactions for a card. \n\nValid values are: \n\n- Use ISO Default [UseDefault] (that is, the value in the Surcharge instruction field in the card’s ISO record).\n\n- Charge surcharges [Charge] on checking and savings transactions for this card. \n\n- No Charge for surcharges [DoNotCharge] on checking and savings transactions for this card. \n\n"
          enum:
          - Charge
          - DoNotCharge
          - UseDefault
        CardFee:
          type: array
          description: Details of the charges and fees applicable to the card.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardFee'
        ExpDt:
          type: string
          description: |+
            Card expiration date after which the card becomes inactive.

          format: date
        ExpDay:
          type: string
          description: |-
            Day on which the card expire.

            Used in conjunction with the card expiration date field to indicate the specific day of the month on which you want the card is automatically renewed.

            **Note:** Value of 31 indicates the last day of month.
          enum:
          - 1-31
        NextIssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Next card issuing date.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-12-31T23:59:59.999
        CardCategory:
          type: string
          description: Category of a card.
          enum:
          - Personal
          - Business
        EmbossingName:
          maxLength: 80
          type: string
          description: "Name embossed on the front side of the card.\n\n**Note:** Maximum 30 characters are supported however, some card vendors support 19 characters for the embossing name. "
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: |-
            Additional description line that appears on the front side of the card.

            **Note:** Second name printed on the customers plastic card.
        EmbossingPrintOption:
          type: string
          description: "Print order for the secondary embossing name. \n\n**Note:** *Conditionally Required field*\n\nShould be provided if the second embossing name is provided in the request. \n\n"
          enum:
          - FirstLine
          - SecondLine
        CardTrnLimitInd:
          type: boolean
          description: "Flag to indicate whether to use the card limit configurations settings (VIP Class) or transaction limits created at the card level. \n\n**Note:** Value should be set to 'true' for ATM and Debit Cards. \n\nA value of 'true' indicates that new card will use the card level transaction limits instead of limits defined at the ISO level for the card. \n\nIf the card transaction limit indicator is set to 'true', then the card transaction limit amounts should be provided in the request to successfully authorize the EFT transactions.\n\n\n\n\n\n\n\n\n\n"
        CardTrnLimitCode:
          type: string
          description: "Code to identify the card limit configuration settings applicable for a card (VIP Class). \n\n**Note:** The VIP class used for a card."
        CardTrnLimit:
          type: array
          description: "Details of the card transaction limit.\n\n**Note:** Card transaction limits can only be added if value of CardTrnLimitInd is set to 'true'.\n\nCombination of Transaction Type, Transaction Source and Limit Type determines how limit amount is used for a card.\n\nFor example: Combination of Withdrawal, ATM and DailyMax provided in the request will set the limits for the total amount of daily ATM withdrawals for the card.  "
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardTrnLimit'
        AllowWithdrawalDailyLimitInd:
          type: boolean
          description: "Flag to indicate if a cardholder can withdraw up to the daily withdrawal limit regardless of the account balance. \n\n**Note:** Value of 'true' in this field indicates that the cardholder is allowed to withdraw up to the limit defined in his VIP class, even if it means overdrawing the account."
        AllowThirdPartyXferInd:
          type: boolean
          description: "Flag to indicate if a card is permitted to perform third-party transfers.\n\n**Note:** Only valid for those financial institutions that interface with a phone banking system that has a third party transfer capability. "
        AllowInternetInd:
          type: boolean
          description: "Flag to indicate if a card is permitted to perform internet activity (remote banking). \n\n**Note:** Remote banking field to indicate if a card is internet enabled."
        GenerateCardNum:
          type: string
          description: "Number of plastic cards that need to be generated.\n\n**Note:** *Required field*\n\nValid values are: \n\n- 0: Do not issue a plastic card \n\n- 1: Issue a plastic card"
          enum:
          - "0"
          - "1"
        GenerateCardOrder:
          type: string
          description: "Value that generate card order to replace the existing EFT card issued to the cardholder.\n\n**Note:** Generate card next cycle field. \n\nValid values are: \n\n- DoNotGenerate [0]: Do not include this card in the Plastic Card Order File\n\n- ReplaceCard or NewCard [1]: Include this card in the Plastic Card Order File\n\n"
          enum:
          - NewCard
          - ReplaceCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: 'Field to enable or disable the generation of a PIN mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholder''s address. '
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardPref'
        PreviousExpDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Expiry date of the previous card. This date is used as a reference to order a new card and sometimes to verify the expiry date of the issued card if the card is not in use.\n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-01-31T23:59:59.999\n\n**Note:** Expiration date of the previous (old) card that is replaced by new card.\n\nShould be provided in request if previous card data aggregate is sent in the request to replace the card with a new card. \n\nClient application should not send the previous expiration date  unless this new card is used for replacing an existing card. \n\n"
        PreviousCardData:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_PreviousCardData'
        UpdaterSvcOptOutInd:
          type: boolean
          description: "Flag to indicate if updater service is to be opt out.\n\n**Note:** The AUS Override Code (Account Updater Services) that indicates whether the customer wants the card services to include the new card number in automatic updates to all merchants who have the previous (old) card number on file (stored in their records). \n\nValue of 'false' is default and indicates that the merchant will be sent the new card information.\n\nValue of 'true' indicates that the merchant will NOT be sent the new card information. \n\n"
        PINOffset:
          maxLength: 10
          type: string
          description: PIN offset number assigned to the card. PIN offset is not the actual PIN of the card.
        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of invalid PIN entry attempts allowed.
          format: int64
        RefData:
          type: array
          description: |-
            Details of the Reference data to further identify the amount.

            Applicable for B2C transaction type.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_RefData'
        AcctLinkData:
          type: array
          description: "Details of the accounts to be linked to a debit card.\n\n**Note:** Can repeat up to 40 times, that means 40 accounts can be linked to a card account in one request. \n\nThis aggregate contains the details of account(s) linked to the card and shows the card account linkage including sequence. \n\n"
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctLinkData'
      description: Detailed information about the card.
    CardAddOperResponse_CardStatusRec_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** Includes the ISO and Card Number. For service provider this is a maximum of 19 digit PAN.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number and present only if Member number functionality is  supported by financial institution."
      description: Unique information to identify a card record.
    CardAddOperResponse_CardStatusRec_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: |+
            Status code of the card.

          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
      description: Details of the card status returned in the result of API call.
    CardAddOperResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardStatus'
      description: Details of the card status record.
    CardDelOperSecuredRequest_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** Includes the ISO and Card Number. PAN (Primary Account Number) which is a maximum of 19 digits.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n**Note:** Member number is a one-digit number and identifies multiple cards for different customers (for example, a wife’s card might have a 1 following it and the husband’s card might have a 2 following it to differentiate the cards). Only to be provided if Member Number functionality is  supported by financial institution. "
      description: Unique information to identify a card record.
    CardDelOperSecuredResponse_CardStatusRec_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: |+
            Status code of the card.

          enum:
          - Deleted
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status are changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
      description: Details of the card status returned in the result of API call.
    CardDelOperSecuredResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardDelOperSecuredResponse_CardStatusRec_CardStatus'
      description: Details of the card status record.
    CardInqOperSecuredRequest_CardSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** *Required field*

            Includes the ISO and Card Number. PAN (Primary Account Number) which is a maximum of 19 digits. It is a required field by the operation and should be sent in the request.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n**Note:** Refers to member number which is a one-digit number and it identifies multiple cards for different customers (for example, a wife’s card might have a 1 following it and the husband’s card might have a 2 following it to differentiate the cards). Only to be provided if member number functionality is  supported by financial institution. "
      description: Unique information to identify a card record.
    CardInqOperSecuredRequest_CardSel:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel_CardKeys'
        IncAllCardStatusInd:
          type: boolean
          description: "Flag to indicate if no edit will be done in the card status and the response will provide all accounts even if the account is inactive. \n\n**Note:** If the value is false, it returns card information for EFT card status with statuses 1-4. Error stating the status for others.\n\nIf the value is true, it returns card information for all EFT card statuses.\n\nDefault value is false if not value is provided."
      description: |+
        Criteria to select the card record.

    CardInqOperSecuredResponse_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: "Type of the transaction limit.  \n\n"
          enum:
          - Withdrawal
          - Debit
          - DepositAvail
        TrnSrc:
          type: string
          description: |+
            Source of the transaction to apply the transaction limit.



          enum:
          - ATM
          - POS
          - POSOffline
          - POSOnLine
        LimitType:
          type: string
          description: 'Type of the transaction limit. '
          enum:
          - DailyMax
          - TrnMax
        CurAmt:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt'
        Percent:
          type: number
          description: |-
            Percentage value of transaction limit.

            **Note:** Percent attribute is applicable only if Transaction Type is Deposit Available, Transaction Source is ATM or ATMTemp and Limit Type is Daily Maximum.

            The percentage value for this field without the decimal places is supported.
        TempTrnLimitExpDt:
          type: string
          description: "Date on which the temporary transaction limit becomes inactive.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Should be provided if new card is intended to use temporary card limits.\n\nTemporary Card limits can only be set for below listed Transaction Source types:\n\n- ATMTemp\n\n- POSTemp\n\n- POSOfflineTemp\n\n- POSOnlineTemp\n\nOnly one expiration date for all temporary transaction limits is supported.\n\n"
          format: date
    CardInqOperSecuredResponse_CardInfo_CardPref:
      type: object
      properties:
        Language:
          type: string
          description: |+
            Preferred language to provide the card-related information.

            **Note:** Code supplied by the device driver that identifies the language in which an ATM should display its screens. The language code resides on the cards magnetic stripe, and if the ATM is programmed to use language codes, it automatically displays screens in the language designated on the card. Valid values are 0-9 and A-Z.



          enum:
          - 0-9
          - A-Z
      description: Details of card preference to use the card.
    CardInqOperSecuredResponse_CardInfo_PreviousCardData:
      type: object
      properties:
        ISOCode:
          type: string
          description: Code to identify the ISO number of card.
        CardNum:
          maxLength: 32
          type: string
          description: "Number assigned to the card known as card account number of up to 10-digits.\n\n\n\n**Note:** Value in this field represents the card number for the previous (old) card. "
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number of the previous (old) card. "
        CardType:
          type: string
          description: |-
            Type of a card.



            **Note:** The user-defined, alphanumeric code that identifies the type of the previous (old) card.
      description: "Details of the previous card.\n\n**Note:** Used to provide information related to the previous (old) card that is replaced by a new card. \n\n"
    CardInqOperSecuredResponse_CardInfo_ReplacementCardData:
      type: object
      properties:
        ISOCode:
          type: string
          description: Code to identify the ISO number of card.
        CardNum:
          maxLength: 32
          type: string
          description: "Number assigned to the card known as card account number of up to 10 digits.\n\n\n\n**Note:** Value in this field represents the card number for the new card that replaced previous card. "
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number of the new card that replaced previous card. "
        CardType:
          type: string
          description: |+
            Type of a card.



            **Note:** The user-defined, alphanumeric code that identifies the type of new card that replaced previous card.

      description: "Details of the replacement card.\n\n**Note:** Used to provide the information related to the new card that replaced previous card. "
    CardInqOperSecuredResponse_CardInfo_CardPeriodData:
      properties:
        CardAmtType:
          type: string
          description: "Type of amount processed using card in the mentioned period.\n\n\n\n**Note:** The CardUse indicates last usage amount for the card record.\n\nWithdrawal amount indicates the last withdrawal amount for the card record. \n\n"
          enum:
          - CardUse
          - Withdrawal
        LastOccurInd:
          type: boolean
          description: Flag to indicate if the data refers to a last occurrence.
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999\n\n**Note:** The last use date."
        Amt:
          type: number
          description: |-
            Transaction limit amount in the decimal format.

            Example: 200.00
    CardInqOperSecuredResponse_CardInfo_RefData:
      required:
      - RefType
      properties:
        RefType:
          type: string
          description: "Reference type used to further identify the amount.\n\n**Note:** Valid values are: \n\n- IVR reference number [IVRRefNum] is number used by the cardholder to select a PIN with the Phone PIN product from Plastic Card Manufacturing for Signature\n\n- Photo ID [Photo] is an alphanumeric identifier from the vendor to identify a photo associated with the cardholder/plastic (for example, SSN)\n\n- Signature [Signature] is an identifier from the vendor to identify the signature associated with the cardholder\n\n- Card stock override [CardStock] identifier is a number assigned by a card vendor to identify a specific type of plastic used in the card production process\n\n"
          enum:
          - IVRRefNum
          - PhotoId
          - Signature
          - CardStock
        RefIdent:
          maxLength: 36
          type: string
          description: |-
            Reference number is used in combination with reference type to further identify the amount.

            Disbursement reference number is displayed on customer statement for B2C transaction.

            Example: 1234588
    CardInqOperSecuredResponse_CardInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of an account record.





        AcctType:
          type: string
          description: |+
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md"  title="Click to open"> Glossary </a>.

          enum:
          - DDA
          - SDA
          - LOAN
          - CDA
      description: Unique information to identify the account record.
    CardInqOperSecuredResponse_CardInfo_AcctRef_AcctSummInfo:
      type: object
      properties:
        RestrictedInd:
          type: boolean
          description: |-
            Flag to indicate if account is restricted for view.

            **Note:** A value of 'true' indicates that an account is restricted for view by a user.
      description: Information of the account summary.
    CardInqOperSecuredResponse_CardInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_AcctRef_AcctKeys'
        AcctSummInfo:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_AcctRef_AcctSummInfo'
      description: Account reference information.
    CardInqOperSecuredResponse_CardInfo_AcctLinkData:
      properties:
        AcctRef:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_AcctRef'
        OtherAcctRel:
          type: integer
          description: "Value to define the Other Account Relationship (OAR) with the card.\n\nAn OAR value of 1 identifies the account as the primary account for the account type. An OAR of 2 or greater identifies the account as secondary for this account type.\n\n \n\n\n\n**Note:** Sequence identifier to identify the sequence of account linked to the card. "
          format: int64
        FinancialTrnOption:
          type: string
          description: "Code to identify the type of transactions this card can perform on an account.\n\n**Note:** Monetary flag also known as ‘financial capable flag’. "
          enum:
          - AllowAllTrn
          - AllowInqOnly
          - BlockAllTrn
          - BlockPOSTrn
        Nickname:
          maxLength: 80
          type: string
          description: Name that customer can assign to the cards for easy identification.
    CardInqOperSecuredResponse_CardInfo:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number assigned to the card known as card account number of up to 10 digits.



            **Note:** Includes the ISO and Card Number. For service provider this is a maximum of 19 digit PAN.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Refers to member number which is a one-digit number and it identifies multiple cards for different customers (for example, a wife’s card might have a 1 following it and the husband’s card might have a 2 following it to differentiate the cards). Only to be provided if member number functionality is  supported by financial institution. "
        CardType:
          type: string
          description: "Type of a card.\n\n\n\n**Note:** *Required field*\n\nUser-defined alphanumeric code that identifies the type of EFT card. Only one character is supported. \n\n"
        ProductIdent:
          maxLength: 42
          type: string
          description: |-
            Unique identifier of a product to indicate the processing options of the card.

            **Note:** Six digit ISO number.
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.



            **Note:** Status values are client-defined and the financial institutions ca use as per the preference.

            Values '1' and '2' indicate an 'Active' card record in core.

            Values '3' and '4' correspond to an 'Inactive' card which does not allow transactions and the card is returned to the user.

            Value of of '4' is associated to an open card record in an inactive state.

            Values '5' through '8' signify a 'Blocked' card, which does not allow transactions and the card is returned to the user.

            Value of '9' would imply a Card in 'Capture' status i.e. core does not allow transactions and card is retained.
          enum:
          - '1 to 9 '
        CardDtlStatusDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date and time when the status of a card is updated.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-12-31T23:59:59.999
        CardStatusMaintBy:
          type: string
          description: Value to indicate the user that maintains card status.
        CardStatusMaintFrom:
          type: string
          description: Workstation or device used to maintain the status.
        CardSurchargeOption:
          type: string
          description: "Option used to indicate if surcharges should occur on the card or not.\n\n**Note:** Surcharge instruction override. Code to indicate if the system uses ISO-level surcharge instruction on checking and savings transactions for a card. \n\nValid values are: \n\n- Use ISO Default [UseDefault] (that is, the value in the Surcharge instruction field in the card’s ISO record).\n\n- Charge surcharges [Charge] on checking and savings transactions for this card. \n\n- No Charge for surcharges [DoNotCharge] on checking and savings transactions for this card. \n\n"
          enum:
          - Charge
          - DoNotCharge
          - UseDefault
        CardFee:
          type: array
          description: Details of the charges and fees applicable to the card.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardFee'
        OpenDt:
          type: string
          description: Card opening date when the card record was created.
          format: date
        IssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Card issuing date when the current card was issued.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
        ExpDt:
          type: string
          description: |+
            Card expiration date after which the card becomes inactive.

          format: date
        ExpDay:
          type: string
          description: |-
            Day on which the card expire.

            Used in conjunction with the card expiration date field to indicate the specific day of the month on which you want the card is automatically renewed.

            **Note:** Value of 31 indicates the last day of month.
          enum:
          - 1-31
        OrigIssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date on which a card record is originally issued.

            Format: yyyy-MM-dd

            Example: 2021-12-31
        NextIssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Next card issuing date.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-12-31T23:59:59.999
        CardCategory:
          type: string
          description: Category of a card.
          enum:
          - Personal
          - Business
        EmbossingName:
          maxLength: 80
          type: string
          description: Name embossed on the front side of the card.
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: |-
            Additional description line that appears on the front side of the card.

            **Note:** Second name printed on the customers plastic card.
        EmbossingPrintOption:
          type: string
          description: "Print order for the secondary embossing name. \n\n**Note:** Print order in which second embossing name is printed on the card. "
          enum:
          - FirstLine
          - SecondLine
          - None
        CardTrnLimitInd:
          type: boolean
          description: 'Flag to indicate whether to use the card limit configurations settings (VIP Class) or transaction limits created at the card level. '
        CardTrnLimitCode:
          type: string
          description: "Code to identify the card limit configuration settings applicable for a card (VIP Class). \n\n**Note:** The VIP class used for a card."
        CardTrnLimit:
          type: array
          description: "Details of the card transaction limit.\n\n**Note:** Card transaction limit amount depends on the combination of Transaction Type, Transaction Source and Limit Type of the card. "
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardTrnLimit'
        AllowWithdrawalDailyLimitInd:
          type: boolean
          description: "Flag to indicate if a cardholder can withdraw up to the daily withdrawal limit regardless of the account balance. \n\n**Note:** Value of 'true' in this field indicates that the cardholder is allowed to withdraw up to the limit defined in his VIP class, even if it means overdrawing the account."
        AllowThirdPartyXferInd:
          type: boolean
          description: "Flag to indicate if a card is permitted to perform third party transfers.\n\n**Note:** Only valid for those financial institutions that interface with a phone banking system that has a third-party transfer capability. "
        AllowInternetInd:
          type: boolean
          description: "Flag to indicate if a card is permitted to perform internet activity (remote banking). \n\n**Note:** Remote banking field to indicate if a card is internet enabled."
        SwitchCardStatus:
          type: string
          description: "Code to identify the status of the EFT card as it currently resides on a third party vendor’s (network switch, ATM driver company etc) card information file used for off-line processing.\n\n**Note:** Status current code. \n\nValid values are:\n\n- \"1\" and \"2\" = Active;\n\n- \"3\" and \"4\" = Inactive, (do not allow transactions but return the card to the user)\n\n - \"5\" thru \"8\"= Blocked (do not allow transactions but return the card to the user;)\n\n- \"9\" = Capture (do not allow transactions and retain card) \n\n"
        SwitchCardStatusRequest:
          type: string
          description: |-
            Code that indicates the new card status that is to be sent to third-party vendors.

            **Note:** Status Request code field.

            Values supported are:

            - '1' and '2' - Active

            -  '3' and '4' - Blocked (do not allow transactions but return the card to the user)

             - '5' thru '9' - Capture (do not allow transactions and retain card)

            - P -Notify Card services of a PIN offset change



            Only applicable if 'From Host Maintenance' option is active.
        GenerateCardNum:
          type: string
          description: "Number of plastic cards that need to be generated.\n\n**Note:** *Required field*\n\nValid values are: \n\n- 0: Do not issue a plastic card \n\n- 1: Issue a plastic card"
          enum:
          - "0"
          - "1"
        GenerateCardOrder:
          type: string
          description: "Value that generate card order to replace the existing EFT card issued to the cardholder.\n\n**Note:** Generate card next cycle field. \n\nValid values are: \n\n- DoNotGenerate [0]: Do not include this card in the Plastic Card Order File\n\n- ReplaceCard or NewCard [1]: Include this card in the Plastic Card Order File\n\n"
          enum:
          - ReplaceCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: 'Field to enable or disable the generation of a PIN Mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholders address. '
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardPref'
        FirstUseDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date on which the issued card is first used.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
        OrigFirstUseDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: " Date on which the card was issued for first time. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-01-31T23:59:59.999"
        PreviousExpDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |+
            Expiry date of the previous card. This date is used as a reference to order a new card and sometimes to verify the expiry date of the issued card if the card is not in use.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999

            **Note:** Expiration date of the previous (old) card that is replaced by new card.

        PreviousCardData:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_PreviousCardData'
        ReplacementCardData:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_ReplacementCardData'
        UpdaterSvcOptOutInd:
          type: boolean
          description: "Flag to indicate if updater service is to be opt out.\n\n**Note:** The AUS Override Code (Account Updater Services) that indicates whether the customer wants the card services to include the new card number in automatic updates to all merchants who have the previous (old) card number on file (stored in their records). \n\nValue of 'false' is default and indicates that the merchant will be sent the new card information.\n\nValue of 'true' indicates that the merchant will NOT be sent the new card information. \n\n"
        ReissueCardStatus:
          type: string
          description: |+
            Status of the card that is reissued.

        CardPeriodData:
          type: array
          description: "Periodic details of a card recurring at regular intervals.\n\n**Note:** Used to indicate either the last usage amount or the last withdrawal amount and hence can repeat 2 times. "
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardPeriodData'
        PINOffset:
          maxLength: 10
          type: string
          description: 'PIN offset number assigned to the card. PIN offset is not the actual PIN of the card. '
        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of invalid PIN entry attempts allowed.
          format: int64
        PINLastFailureDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date of the last PIN entry failure.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-12-31T23:59:59.999
        RefData:
          type: array
          description: |-
            Details of the Reference data to further identify the amount.

            Applicable for B2C transaction type.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_RefData'
        MaintDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Date and time when the card is maintained.
        MaintBy:
          type: string
          description: Value to indicate the user that maintains card.
        MaintFrom:
          type: string
          description: Workstation or device used to maintain the card.
        AcctLinkData:
          type: array
          description: "Details of the accounts to be linked to a debit card.\n\n**Note:** Can repeat up to 40 times, that means 40 accounts can be linked to a card account in one request. \n\nThis aggregate contains the details of account(s) linked to the card and shows the card account linkage including sequence. \n\n"
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_AcctLinkData'
      description: Detailed information about the card.
    CardInqOperSecuredResponse_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: |+
            Status code of the card.

          enum:
          - 'Valid '
        EffDt:
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
          enum:
          - Server Date
      description: Details of the card status returned in the result of API call.
    CardInqOperSecuredResponse_CardRec:
      required:
      - CardInfo
      - CardKeys
      - CardStatus
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo'
        CardStatus:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardStatus'
    CardListInqOperSecuredRequest_RecCtrlIn:
      type: object
      properties:
        MaxRecLimit:
          type: integer
          description: "Maximum number of records that can be returned within a single response.\n\n**Note:** Up to 50 records in a single response are returned for this message. But, if the search criteria are a partial card number, then only 10 records are returned by default. \n\nClient application can send a different value in this field to retrieve a different number of records, for example, request 20 or 15 records per response. By default, 10 records are returned. \n\n"
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: "Next record pointer to include in the response if more than 250 posted transaction records exist.\n\nFor more than 250 posted transactions, ESF returns Cursor value in the RecCtrlOut/Cursor field. To retrieve the next set of posted transactions, this field should be sent in the subsequent request within RecCtrlIn/Cursor field.\n\n**Note:** Value received in the response for the cursor field can be passed in this field to fetch the next set of records. "
      description: Maximum number of records that client can specify to process within a single response.
    CardListInqOperSecuredRequest_CardListSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: "Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.\n\n**Note:** Partial card number. The six-digit ISO code should be sent in the request if partial card number in the request is used. \n\nThe search criteria return all card accounts that have card Ids that are equal to or greater than the number sent in this field (up to the number of maximum cards requested). \n\n\n\n\n\n"
      description: Unique information to identify a card record.
    CardListInqOperSecuredRequest_CardListSel_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Customer permanent identifier or customer key.
      description: Unique information to identify the party record
    CardListInqOperSecuredRequest_CardListSel_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of an account record.





        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md"  title="Click to open"> Glossary </a>.



            **Note:** Should be provided if account number is sent in request.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
      description: Unique information to identify the account record.
    CardListInqOperSecuredRequest_CardListSel:
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_CardKeys'
        PartyKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_PartyKeys'
        AcctKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_AcctKeys'
        Name:
          maxLength: 80
          type: string
          description: "Name of the person.\n\n\n\n**Note:** Short name that refers to the Last name/middle initial, separated by spaces. It is not required to input the entire first name, but if it is not sent, then the middle initial should not be sent either. \n\nIf only a partial last name is sent, the list of cards belonging to all the customers with that partial last name is returned.\n\n"
      description: Details of selection criteria for card list.
    CardListInqOperSecuredResponse_RecCtrlOut:
      required:
      - SentRecCount
      type: object
      properties:
        SentRecCount:
          type: integer
          description: Total number of records that matched the selection criteria and returned in the response message.
          format: int64
        MatchedRecCount:
          type: integer
          description: "Number of records that matches the requested selection criteria.\n\n**Note:** Value of '99' in this field indicates that there are more records that have not been retrieved in the response. \n\nValue of '0' in this field indicates that no additional records exist. \n\n\n\n\n\n"
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: "Next record pointer to include in the response if more than 250 posted transaction records exist.\n\nFor more than 250 posted transactions, ESF returns Cursor value in the RecCtrlOut/Cursor field. To retrieve the next set of posted transactions, this field should be sent in the subsequent request within RecCtrlIn/Cursor field.\n\n**Note:** Client application can send the cursor value received in this field as part of the subsequent request to retrieve the additional records. \n\n"
      description: Information retrieved for the criteria specified in the RecCtrlIn aggregate of the request message.
    CardListInqOperSecuredResponse_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** Includes the ISO and Card Number. PAN (Primary Account Number) which is a maximum of 19 digits. It is a required field by the operation and should be sent in the request.

        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number. Member number is a one-digit number and it identifies multiple cards for different customers (for example, a wife’s card might have a 1 following it and the husband’s card might have a 2 following it to differentiate the cards). Only to be provided if member number functionality is  supported by financial institution. "
      description: Unique information to identify a card record.
    CardListInqOperSecuredResponse_CardListInfo_PartyAcctRelData:
      required:
      - PartyAcctRelType
      properties:
        PartyAcctRelType:
          type: string
          description: "Relationship of party with an account.\n\n**Note:** Maximum three characters is supported.\n\nSome values are client-defined and therefore, more codes can be added to the list of valid values.\n\nNot returned in the response when inquiring by only account Id, partial card num or short name. \n\n"
          enum:
          - Administrator
          - Assumption
          - Beneficiary
          - CoTrustee
          - Custodian
          - CustodianUTMA
          - Delete
          - Executor
          - JointTenancy
          - JointTenantInCommon
          - Owner
          - PersonalRep
          - Related
          - SoleOwner
          - Trustee
        PartyAcctRelOrder:
          type: string
          description: "Relationship order of party with an account in case of JointTenancy or JointTenantsInComman.\n\n**Note:** For example, Signature Relationship JA1 is represented as:  JointTenantInCommon-First\n\nand the Signature Relationship JO1 is represented as: JointTenancy-First\n\nThe Party Account Relationship Order field is not applicable to the JAF and JOF relationships. \n\nThis field is not returned in the response when inquiring by only account Id, partial card num or short name. "
          enum:
          - First
          - Second
          - Third
          - Fourth
          - Fifth
          - Other
    CardListInqOperSecuredResponse_CardListInfo:
      type: object
      properties:
        CardNum:
          maxLength: 32
          type: string
          description: "Number assigned to the card known as card account number of up to 10-digits.\n\n\n\n**Note:** Refers to the card number and does NOT include the ISO. "
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number and present only if member number functionality is supported by financial institution."
        CardType:
          type: string
          description: "Type of a card.\n\n\n\n**Note:** User-defined alphanumeric code that identifies the type of EFT card. Only one character is supported. \n\n"
        ProductIdent:
          maxLength: 42
          type: string
          description: |-
            Unique identifier of a product to indicate the processing options of the card.

            **Note:** Refers to six-digit ISO number.
        Desc:
          maxLength: 200
          type: string
          description: "Description of the product identifier.\n\n**Note:** Not returned in response when inquiring by only account Id, partial card number or short name. "
        CardDtlStatus:
          type: string
          description: "Current status of the card.\n\n\n\n**Note:** Represents the card status as active, inactive etc. The status values are client-defined, and the financial institutions can use them as per preference. Used to identify the current status of the card returned (Active, Inactive, etc.). Cards returned by the operation are not filtered based on status.\n\nThis field is not returned in response when inquiring by party Id (customer permanent identifier). \n\nValues '1' and '2' in indicate an 'Active' card record in core.\n\nValues '3' and '4' correspond to an 'Inactive' card which does not allow transactions and the card is returned to the user.\n\nStatus of '4' is associated to an open card record in an inactive state in signature.\n\nValues '5' through '8' signify a 'Blocked' card, which does not allow transactions and the card is returned to the user.\n\nValue of '9' would imply a Card in 'Capture' status i.e. core does not allow transactions and card is retained."
          enum:
          - '1 to 9 '
        OpenDt:
          type: string
          description: |-
            Card opening date when the card record was created.

            **Note:** Not returned in response if both AcctId and PartyId (customer permanent identifier) are sent in the request.
          format: date
        ExpDt:
          type: string
          description: "Card expiration date after which the card becomes inactive.\n\n\n\n**Note:** Not returned in the response when inquiring by only AcctId, partial card num or short name.  "
          format: date
        EmbossingName:
          maxLength: 80
          type: string
          description: "Name embossed on the front side of the card.\n\n**Note:** Not returned in the response when inquiring by only account Id, partial card num, short name or only by party Id (customer permanent identifier). "
        PartyKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredRequest_CardListSel_PartyKeys'
        PartyAcctRelData:
          type: array
          description: Details of the relationship between party and account.
          items:
            $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListInfo_PartyAcctRelData'
        RestrictedInd:
          type: boolean
          description: "Flag to indicate if account is restricted for view.\n\n**Note:** Restricted account flag to indicate if this account is restricted for view by a user. \n\n"
      description: Information about the card list.
    CardListInqOperSecuredResponse_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: |+
            Status code of the card.

          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status are changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
      description: Details of the card status returned in the result of API call.
    CardListInqOperSecuredResponse_CardListRec:
      required:
      - CardKeys
      - CardListInfo
      - CardStatus
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardKeys'
        CardListInfo:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardListInfo'
        CardStatus:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardStatus'
    CardModOperRequest_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** Includes the ISO and Card Number. For service provider this is a maximum of 19-digit PAN.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n**Note:** Member number. Member number is a one-digit number, and it identifies multiple cards for different customers (for example, a wife’s card might have a 1 following it and the husband’s card might have a 2 following it to differentiate the cards). Only to be provided if member number functionality is supported by financial institution. "
      description: Unique information to identify a card record.
    CardModOperRequest_CardInfo_CardFee:
      required:
      - CardFeeType
      properties:
        CardFeeType:
          type: string
          description: |+
            Type of a card fee.

          enum:
          - CardFee
          - TrnFee
        WaiveFeeInd:
          type: boolean
          description: "Flag to indicate if the fees is to be waived.\n\n**Note:** Used to indicate if card or transaction fees should be waived or not. \n\n"
        NextFeeDt:
          type: string
          description: |-
            Date on which the card record fee of a card is assessed.

            Format: yyyy-MM-dd

            Example: 2021-12-31

            **Note:** The next fee date applies to card Fee only.
          format: date
    CardModOperRequest_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: "Type of the transaction limit.  \n\n"
          enum:
          - Withdrawal
          - DepositAvail
        TrnSrc:
          type: string
          description: |+
            Source of the transaction to apply the transaction limit.



          enum:
          - ATM
          - POS
          - POSOffline
          - POSOnLine
        LimitType:
          type: string
          description: 'Type of the transaction limit. '
          enum:
          - DailyMax
          - TrnMax
        CurAmt:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CurAmt'
        Percent:
          type: number
          description: |-
            Percentage value of transaction limit.

            **Note:** Percent attribute is applicable only if transaction type is deposit available, transaction source is ATM or ATMTemp and limit type is daily maximum.

            The percentage value for this field without the decimal places is supported.
        TempTrnLimitExpDt:
          type: string
          description: "Date on which the temporary transaction limit becomes inactive.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Should be provided if new card is intended to use temporary card limits.\n\nTemporary Card limits can only be set for below listed transaction source types:\n\n- ATMTemp\n\n- POSTemp\n\n- POSOfflineTemp\n\n- POSOnlineTemp\n\nOnly one expiration date for all temporary transaction limits is supported.\n\n"
          format: date
    CardModOperRequest_CardInfo_CardPref:
      type: object
      properties:
        Language:
          type: string
          description: "Preferred language to provide the card-related information. \n\n**Note:** Code supplied by the device driver that identifies the language in which an ATM should display its screens. The language code resides on the cards magnetic stripe, and if the ATM is programmed to use language codes, it automatically displays screens in the language designated on the card. Valid values are 0-9 and A-Z.\n\n\n\n"
          enum:
          - '0-9 '
          - A-Z
      description: Details of card preference to use the card.
    CardModOperRequest_CardInfo_PreviousCardData:
      type: object
      properties:
        ISOCode:
          type: string
          description: Code to identify the ISO number of card.
        CardNum:
          maxLength: 32
          type: string
          description: "Number assigned to the card known as card account number of up to 10 digits.\n\n\n\n**Note:** Value in this field represents the card number for the previous (old) card. "
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number of the previous (old) card. "
        CardType:
          type: string
          description: |-
            Type of a card.



            **Note:** User-defined alphanumeric code that identifies the type of previous (old) card.
      description: "Details of the previous card.\n\n**Note:** Used to provide information related to the previous (old) card that is replaced by a new card. \n\nClient application should send valid values in the previous (old) expiration date field and in all the fields in the previous card data aggregate in the request if, the new card added is replacing an existing card. \n\n"
    CardModOperRequest_CardInfo_ReplacementCardData:
      type: object
      properties:
        ISOCode:
          type: string
          description: Code to identify the ISO number of card.
        CardNum:
          maxLength: 32
          type: string
          description: "Number assigned to the card known as card account number of up to 10 digits.\n\n\n\n**Note:** Value in this field represents the card number for the new card that replaced previous (old) card. \n\n\n\n"
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number of the new card that replaced previous (old) card. "
        CardType:
          type: string
          description: |+
            Type of a card.



            **Note:** *Required field*

            User-defined alphanumeric code that identifies the type of new card that replaced previous (old) card.

      description: "Details of the replacement card.\n\n**Note:** Used to provide the information related to the new card that replaced previous card.\n\nTo delete the values in this aggregate, client application should send empty fields in the request. All the fields in this aggregate are required to be sent in order to delete the replacement (new) card information. "
    CardModOperRequest_CardInfo_RefData:
      required:
      - RefType
      properties:
        RefType:
          type: string
          description: "Reference type used to further identify the amount.\n\n\n\n**Note:** Valid values are: \n\n- IVR reference number [IVRRefNum] is number used by the cardholder to select a PIN with the Phone PIN product from Plastic Card Manufacturing for Signature.\n\n- Photo ID [Photo] is an alphanumeric identifier from the vendor to identify a photo associated with the cardholder/plastic (e.g. SSN).\n\n- Signature [Signature] is an identifier from the vendor to identify the signature associated with the cardholder.\n\n- Card stock override [CardStock] identifier is a number assigned by a card vendor to identify a specific type of plastic used in the card production process. \n\n"
          enum:
          - IVRRefNum
          - Photo
          - Signature
          - CardStock
        RefIdent:
          maxLength: 36
          type: string
          description: |-
            Reference number is used in combination with reference type to further identify the amount.

            Disbursement reference number is displayed on customer statement for B2C transaction.

            Example: 1234588
    CardModOperRequest_CardInfo:
      type: object
      properties:
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.



            **Note:** Status values are client-defined and the financial institutions ca use as per the preference.

            Values '1' and '2' indicate an 'Active' card record in core.

            Values '3' and '4' correspond to an 'Inactive' card which does not allow transactions and the card is returned to the user.

            Value of '4' is associated to an open card record in an inactive state.

            Values '5' through '8' signify a 'Blocked' card, which does not allow transactions and the card is returned to the user.

            Value of '9' would imply a Card in 'Capture' status i.e. core does not allow transactions and card is retained.
          enum:
          - 1 to 9
        CardSurchargeOption:
          type: string
          description: "Option to indicate if surcharges should occur on the card.\n\n**Note:** Surcharge instruction override. Code to indicate if the system uses ISO-level surcharge instruction on checking and savings transactions for a card. \n\nValid values are: \n\n- Use ISO Default [UseDefault] (that is, the value in the Surcharge instruction field in the card’s ISO record).\n\n- Charge surcharges [Charge] on checking and savings transactions for this card. \n\n- No Charge for surcharges [DoNotCharge] on checking and savings transactions for this card. "
          enum:
          - Charge
          - DoNotCharge
          - UseDefault
        CardFee:
          type: array
          description: Details of the charges and fees applicable to the card.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardFee'
        ExpDt:
          type: string
          description: |-
            Card expiration date after which the card becomes inactive.



            **Note:** Only date value is supported.
          format: date
        ExpDay:
          type: string
          description: |-
            Day on which the card expires.

            Used in conjunction with the card expiration date field to indicate the specific day of the month on which you want the card is automatically renewed.

            **Note:** Value of 31 indicates the last day of month.
          enum:
          - 1 thru 31
        NextIssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Next card issuing date.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-12-31T23:59:59.999
        CardCategory:
          type: string
          description: Category of a card.
          enum:
          - Personal
          - Business
        EmbossingName:
          maxLength: 80
          type: string
          description: "Name embossed on the front side of the card.\n\n**Note:** Maximum 30 characters are supported; however, some card vendors support 19 characters for the embossing name. "
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: |-
            Additional description line that appears on the front side of the card.

            **Note:** Second name printed on the customer's plastic card.
        EmbossingPrintOption:
          type: string
          description: "Print order for the secondary embossing name. \n\n**Note:** *Conditionally Required field*\n\nShould be provided if the second embossing name is provided in the request. \n\n"
          enum:
          - FirstLine
          - SecondLine
        CardTrnLimitInd:
          type: boolean
          description: "Flag to indicate whether to use the card limit configurations settings (VIP Class) or transaction limits created at the card level. \n\n**Note:** Value should be set to 'true' for ATM and debit cards.  \n\nA value of 'true' indicates that new card will use the card level transaction limits instead of limits defined at the ISO level for the card. \n\nIf the card transaction limit indicator is set to 'true', then the card transaction limit amounts should be provided in the request to successfully authorize the EFT transactions.\n\n\n\n\n\n\n\n\n\n"
        CardTrnLimitCode:
          type: string
          description: "Code to identify the card limit configuration settings applicable for a card (VIP Class). \n\n**Note:** The VIP class used for a card."
        CardTrnLimit:
          type: array
          description: "Details of the card transaction limit.\n\n**Note:** Card transaction limits can only be added if value of CardTrnLimitInd is set to 'true'.\n\nCombination of transaction type, transaction source and limit type determines how limit amount is used for a card.\n\nFor example: combination of withdrawal, ATM and DailyMax provided in the request will set the limits for the total amount of daily ATM withdrawals for the card.  "
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardTrnLimit'
        AllowWithdrawalDailyLimitInd:
          type: boolean
          description: "Flag to indicate if a cardholder can withdraw up to the daily withdrawal limit regardless of the account balance. \n\n**Note:** Value of 'true' in this field indicates that the cardholder can withdraw up to the limit defined in his VIP class, even if it means overdrawing the account."
        AllowThirdPartyXferInd:
          type: boolean
          description: "Flag to indicate if a card is permitted to perform third-party transfers.\n\n**Note:** Only valid for those financial institutions that interface with a phone banking system that has a third-party transfer capability. "
        AllowInternetInd:
          type: boolean
          description: "Flag to indicate if a card is permitted to perform internet activity (remote banking). \n\n**Note:** Remote banking field to indicate if a card is internet enabled."
        SwitchCardStatusRequest:
          type: string
          description: |-
            Code that indicates the new card status that is to be sent to third-party vendors.

            **Note:** Status Request code field.

            Valid values are:

            - '1' and '2' - Active

            -  '3' and '4' - Blocked (do not allow transactions but return the card to the user)

             - '5' thru '9' - Capture (do not allow transactions and retain card)

            - P -Notify Card services of a PIN offset change

            Only applicable if 'From Host Maintenance' option is active.
        GenerateCardNum:
          type: string
          description: "Number of plastic cards that need to be generated.\n\n**Note:** Valid values are: \n\n- 0: Do not issue a plastic card \n\n- 1: Issue a plastic card"
          enum:
          - "0"
          - "1"
        GenerateCardOrder:
          type: string
          description: "Value that generates card order to replace the existing EFT card issued to the cardholder.\n\n**Note:** Generate card next cycle field. \n\nValid values are: \n\n- DoNotGenerate [0]: Do not include this card in the Plastic Card Order File\n\n- ReplaceCard or NewCard [1]: Include this card in the Plastic Card Order File. \n\n"
          enum:
          - ReplaceCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: 'Field to enable or disable the generation of a PIN mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholder''s address. '
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardPref'
        PreviousExpDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Expiry date of the previous card. This date is used as a reference to order a new card and sometimes to verify the expiry date of the issued card if the card is not in use.\n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-01-31T23:59:59.999\n\n**Note:** Expiration date of the previous (old) card that is replaced by new card.\n\nShould be provided in request if previous card data aggregate is sent in the request to replace the card with a new card. \n\nClient application should not send the previous expiration date unless this new card is used for replacing an existing card. "
        PreviousCardData:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_PreviousCardData'
        ReplacementCardData:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_ReplacementCardData'
        UpdaterSvcOptOutInd:
          type: boolean
          description: "Flag to indicate if updater service is to be opt out.\n\n**Note:** The AUS Override Code (Account Updater Services) that indicates whether the customer wants the card services to include the new card number in automatic updates to all merchants who have the previous (old) card number on file (stored in their records). \n\nValue of 'false' is default and indicates that the merchant will be sent the new card information.\n\nValue of 'true' indicates that the merchant will NOT be sent the new card information. \n\n"
        ReissueCardStatus:
          type: string
          description: "Code to identify the status of reissued card.\n\n**Note:** Valid values are: \n\n- '1' and '2' = Active; \n\n- '3' and '4' = Inactive, do not allow transactions but return the card to the user; \n\n- '5' through '8' = Blocked, do not allow transactions but return the card to the user; \n\n- '9' - Capture, do not allow transactions and retain card.\n\n"
        PINOffset:
          maxLength: 10
          type: string
          description: PIN offset number assigned to the card. PIN offset is not the actual PIN of the card.
        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of invalid PIN entry attempts allowed.
          format: int64
        RefData:
          type: array
          description: |-
            Details of the Reference data to further identify the amount.

            Applicable for B2C transaction type.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_RefData'
      description: Detailed information about the card.
    CardModOperResponse_CardStatusRec_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** Includes the ISO and card number. For service provider this is a maximum of 19-digit PAN.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable if supported by the card type.\n\n\n\n**Note:** Member number and present only if member number functionality is supported by financial institution."
      description: Unique information to identify a card record.
    CardModOperResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardListInqOperSecuredResponse_CardStatus'
      description: Details of the card status record.
