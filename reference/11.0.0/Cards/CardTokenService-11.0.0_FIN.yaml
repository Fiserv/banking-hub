---
openapi: 3.0.1
info:
  title: Card Token Service
  description: The Card service supports operations managing credit, debit, prepaid and private label cards.
  version: 11.0.0_FIN
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/CardTokenServiceFNX/11.0.0_FIN
  description: SwaggerHub API Auto Mocking
paths:
  /cards/token:
    put:
      tags:
      - Update Card
      summary: Update Card
      description: Update Card API modifies a card account.<br>This API is only available only for Finxact and requires EPOC Card Services.
      operationId: CardTokenModOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenModOperRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenModOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenModOperResponse'
      x-group-name: Card Token Service
      x-proxy-name: Update Card
      x-child-product-name: Cards
      x-core: Finxact
    post:
      tags:
      - Add Card
      summary: Add Card
      description: Add Card API creates a debit card account. <br>This API is only available only for Finxact and requires EPOC Card Services.
      operationId: CardTokenAddOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenAddOperRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenAddOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenAddOperResponse'
      x-group-name: Card Token Service
      x-proxy-name: Add Card
      x-child-product-name: Cards
      x-core: Finxact
  /cards/token/secured:
    post:
      tags:
      - Get Card
      summary: Get Card
      description: Get Card API retrieves the card account details. This API provides the ability to get cards details using a card token.<br>This API is only available only for Finxact and requires EPOC Card Services.
      operationId: CardTokenInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenInqOperSecuredResponse'
      x-group-name: Card Token Service
      x-proxy-name: Get Card
      x-child-product-name: Cards
      x-core: Finxact
components:
  schemas:
    CardTokenAddOperRequest:
      required:
      - CardTokenInfo
      properties:
        CardTokenInfo:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo'
    CardTokenAddOperResponse:
      required:
      - CardTokenStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardTokenStatusRec:
          $ref: '#/components/schemas/CardTokenAddOperResponse_CardTokenStatusRec'
    CardTokenInqOperSecuredRequest:
      required:
      - CardTokenSel
      properties:
        CardTokenSel:
          $ref: '#/components/schemas/CardTokenInqOperSecuredRequest_CardTokenSel'
    CardTokenInqOperSecuredResponse:
      required:
      - CardTokenRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardTokenRec:
          type: array
          description: Details of the card token record.
          items:
            $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenRec'
    CardTokenModOperRequest:
      required:
      - CardTokenInfo
      - CardTokenKeys
      properties:
        CardTokenKeys:
          $ref: '#/components/schemas/CardTokenModOperRequest_CardTokenKeys'
        CardTokenInfo:
          $ref: '#/components/schemas/CardTokenModOperRequest_CardTokenInfo'
    CardTokenModOperResponse:
      required:
      - CardTokenStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardTokenStatusRec:
          $ref: '#/components/schemas/CardTokenModOperResponse_CardTokenStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggregate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    CardTokenAddOperRequest_CardTokenInfo_PersonEmbossingName:
      type: object
      properties:
        NameSuffix:
          type: string
          description: Value that indicates the name suffix.
          enum:
          - CPA
          - D.C.
          - D.D.
          - D.D.S.
          - D.M.D.
          - D.O.
          - D.V.M.
          - Ed.D.
          - Esq.
          - II
          - III
          - IV
          - Inc.
          - J.D.
          - Jr.
          - LL.D.
          - Ltd.
          - M.D.
          - O.D.
          - P.C.
          - Ph.D.
          - Ret.
          - R.N.
          - R.N.C.
          - S.H.C.J.
          - Sr.
          - USA
          - USAF
          - USAFR
          - USAR
          - USCG
          - USMC
          - USMCR
          - USN
          - USNR
      description: Details of the person name embossed on the card.
    CardTokenAddOperRequest_CardTokenInfo_PostAddr_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: |-
            Standard format of country code.



            **Note:** CountryCodeSource specifies the type of standard used for the value of the CountryCodeValue field.
          enum:
          - ISO3166-Alpha-3
        CountryCodeValue:
          type: string
          description: |-
            Country code value as per the country code format set in the CountryCodeSource field.



            **Note:** The default value is USA.
      description: Details of the country code of the cardholder.
    CardTokenAddOperRequest_CardTokenInfo_PostAddr:
      required:
      - AddrType
      type: object
      properties:
        Addr1:
          maxLength: 64
          type: string
          description: 'Address line 1. '
        Addr2:
          maxLength: 64
          type: string
          description: "Address line 2. \n\nTo enter Addr2, Addr1 field must be provided."
        City:
          maxLength: 40
          type: string
          description: 'Name of the city. '
        StateProv:
          type: string
          description: State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.
        PostalCode:
          maxLength: 11
          type: string
          description: "Postal code or zip code. \n\n\n\n**Note:** U.S. addresses support the format of ZIP code that consists five digits for the ZIP code, a hyphen, and four additional digits that determine a more specific location within a specified ZIP code.\n\nThe additional four digits are optional and when not available they are provided as 0000.\n\nExamples: 32714-1234 or 32714-0000"
        CountryCode:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_PostAddr_CountryCode'
        AddrType:
          type: string
          description: Type of the address.
          enum:
          - Primary
          - Secondary
        PINMailerInd:
          type: boolean
          description: "Flag to indicate the address that the user has provided can be used to mail the pin. \n\n\n\n**Note:** This field can be set either for the primary or secondary address."
        CardMailerInd:
          type: boolean
          description: "Flag to indicate the address that the user has provided can be used to mail the card. \n\n\n\n**Note:** This field can be set either for the primary or secondary address."
      description: |-
        Postal address details of the card holder.



        **Note:** This field is required while adding a new card and reissuing card.
    CardTokenAddOperRequest_CardTokenInfo_TextAlertData_PhoneNum:
      required:
      - PhoneType
      type: object
      properties:
        PhoneType:
          type: string
          description: Type of phone.
          enum:
          - Home
          - Work
          - Mobile
          - Text
        Phone:
          type: string
          description: |-
            Phone number.

            Format: +1-AreaCode-Phone
      description: |-
        Details of a phone number.



        **Note:** At least one phone number is required to set up while adding a new card.
    CardTokenAddOperRequest_CardTokenInfo_TextAlertData_Email:
      type: object
      properties:
        EmailAddr:
          maxLength: 254
          type: string
          description: Email address of the cardholder.
      description: Details of an email address.
    CardTokenAddOperRequest_CardTokenInfo_TextAlertData_AlertContact:
      properties:
        PhoneNum:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_TextAlertData_PhoneNum'
        Email:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_TextAlertData_Email'
    CardTokenAddOperRequest_CardTokenInfo_TextAlertData:
      type: object
      properties:
        AlertContact:
          type: array
          description: Details of the alert contact.
          items:
            $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_TextAlertData_AlertContact'
      description: Details of the text alert.
    CardTokenAddOperRequest_CardTokenInfo_PersonContactInfo:
      type: object
      properties:
        AlternateContactName:
          maxLength: 40
          type: string
          description: Alternative name to contact the person.
        BirthDt:
          type: string
          description: Date of birth of the cardholder.
          format: date
        VerificationText:
          maxLength: 200
          type: string
          description: |-
            Text that verifies the identity of a person or cardholder.



            **Note:** Refers to the verification data that the primary cardholder requested for identification.

            Example: Driver's license number
        TaxIdent:
          maxLength: 12
          type: string
          description: |-
            Identification number of tax.



            **Note:** Refers to the Social Security Number (SSN) or tax ID number.

            Max length for SSN: 9 digits

            Max length for tax ID: 20 digits
        MotherMaidenName:
          maxLength: 40
          type: string
          description: Maiden name of mother.
        ActivationType:
          type: string
          description: |-
            Type of activation.



            **Note:** ***Conditionally Required field***

            Based on the client requirement, EPOC may set a configuration parameter to require fields for ActivationType and ActivationValue.



            If a new card request fails with 400: ERROR: INPUT_INVALID_ACTIVATION_TYPE_REQUIRED, then it is recommended to check EPOC configuration. When the EPOC IVR flag is enabled, the fields ActivationType and ActivationValue are required.
          enum:
          - SSN
          - MotherMaidenName
          - BirthDate
          - SecurityCode
        ActivationValue:
          maxLength: 80
          type: string
          description: |-
            Value that is required to activate the card.



            **Note:** ***Conditionally Required field***

            Based on the client requirement, EPOC may set a configuration parameter to require fields for ActivationType and ActivationValue.



            If the value of the activation type is:

            - SSN, then the activation value is the last four digits of the SSN

            - MothersMaidenName, then the activation value must be up to six characters

            - BirthDate, then the activation value must be provided using the format YYYY-MM-DD

            - SecurityCode, then the activation value must be up to six characters
      description: Contact details of a person.
    CardTokenAddOperRequest_CardTokenInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of an account record.





        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - DDA
          - MMA
          - SDA
          - EQU
          - ILA
          - LOC
          - MLA
      description: Unique information to identify the account record.
    CardTokenAddOperRequest_CardTokenInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_AcctRef_AcctKeys'
      description: Reference details of an account.
    CardTokenAddOperRequest_CardTokenInfo_AcctLinkData:
      properties:
        AcctRef:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_AcctRef'
        OtherAcctRel:
          type: integer
          description: "Code that identifies the account's relationship with the card.\n\n \n\n"
          format: int64
        Desc:
          maxLength: 200
          type: string
          description: Description of the other account relationships.
    CardTokenAddOperRequest_CardTokenInfo:
      type: object
      properties:
        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of the card.



            **Note:** Refers of the member number whose applicable values are from 0 to 9.
        ProductIdent:
          maxLength: 42
          type: string
          description: |-
            Product identifier that identifies the processing parameters of the card.



            **Note:** This field is required while adding a new card.
        ReplaceCardToken:
          maxLength: 1024
          type: string
          description: |-
            Card token identifier of the card that is replaced.



            **Note:** This field is required while requesting for a card replacement.
        PreviousCardToken:
          maxLength: 1024
          type: string
          description: |-
            Card token identifier of the previous card.



            **Note:** This field is required while reissuing a card.
        Expiry:
          maxLength: 4
          type: string
          description: |-
            Date on which the card is scheduled to expire.

            Format: MMYY



            **Note:** This field is an optional field. If this field is provided in the request, then it may get overridden by the default values of the Card Service.
        PersonEmbossingName:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_PersonEmbossingName'
        EmbossingName:
          maxLength: 80
          type: string
          description: 'Name embossed on the front side of the card. '
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: Secondary name embossed on the card.
        PictureRefIdent:
          maxLength: 36
          type: string
          description: |-
            Identifier of a picture reference. This field allows the financial institutions to print a picture on cards.



            **Note:** ***Conditionally Required field***

            Based on the client requirement, EPOC may configure this field as optional or required.
        CardDesign:
          maxLength: 16
          type: string
          description: Design of a card.
        PostAddr:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_PostAddr'
        OriginatingBranch:
          maxLength: 32
          type: string
          description: Branch that primarily created card.
        GenerateCardOrder:
          type: string
          description: |-
            Value that generates a card order to replace the existing card issued to the cardholder.



            **Note:** This field is applicable for new, reissue, and replacement of a card.

            The field GenerateCardOrder and GeneratePINMailer must be provided together because the combination of these two fields is used to determine the order type of the Card Services.
          enum:
          - Card
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: |-
            Value that identifies whether to enable or disable the generation of a PIN Mailer.



            **Note:** This field is applicable for new, reissue, and replacement of a card.

            The field GenerateCardOrder and GeneratePINMailer must be provided together because the combination of these two fields is used to determine the order type of the Card Services.
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        UpdaterSvcOptOutInd:
          type: boolean
          description: |-
            Flag to indicate the cardholder has opted out to not update the card information automatically with Visa or master cards (MC) or merchants.

            Financial Institution can also provide an option to opt out for providing previous card information to Visa or MC or merchants.



            **Note:** This field is used when the Cardbase participates in the Account Updater Service (AUS), which enables Fiserv to send payment account data to Mastercard and Visa in accordance with network standards for issuers. The fields can be left blank if the Cardbase does not participate in AUS. The fields are populated when your institution provides information through the Remote Card Maintenance (RCM) batch file record or manually enters it into the CM system. This subentity is only applicable to Debit until Omaha implements this functionality.
        ExpediteType:
          type: string
          description: Type of expedite.
          enum:
          - None
          - Regular
          - Overnight
        TextAlertData:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_TextAlertData'
        PersonContactInfo:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_PersonContactInfo'
        AcctLinkData:
          type: array
          description: Details of the account that is linked to a debit card.
          items:
            $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_AcctLinkData'
      description: Details of the card token.
    CardTokenAddOperResponse_CardTokenStatusRec_CardTokenKeys:
      required:
      - Token
      type: object
      properties:
        Token:
          maxLength: 1024
          type: string
          description: 'Token of the card. '
        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of the card.



            **Note:** Refers of the member number whose applicable values are from 0 to 9.
      description: Unique information to identify the card token record.
    CardTokenAddOperResponse_CardTokenStatusRec_CardTokenStatus:
      required:
      - CardTokenStatusCode
      type: object
      properties:
        CardTokenStatusCode:
          type: string
          description: |+
            Code to indicate the status of the card token.

          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card token status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-12-31T23:59:59.999"
      description: Status details of the card token.
    CardTokenAddOperResponse_CardTokenStatusRec:
      required:
      - CardTokenKeys
      - CardTokenStatus
      type: object
      properties:
        CardTokenKeys:
          $ref: '#/components/schemas/CardTokenAddOperResponse_CardTokenStatusRec_CardTokenKeys'
        CardTokenStatus:
          $ref: '#/components/schemas/CardTokenAddOperResponse_CardTokenStatusRec_CardTokenStatus'
      description: Details of the card token status.
    CardTokenInqOperSecuredRequest_CardTokenSel_CardTokenKeys:
      required:
      - Token
      type: object
      properties:
        Token:
          maxLength: 1024
          type: string
          description: 'Token of the card. '
      description: Unique information to identify the card token record.
    CardTokenInqOperSecuredRequest_CardTokenSel:
      required:
      - CardTokenKeys
      type: object
      properties:
        CardTokenKeys:
          $ref: '#/components/schemas/CardTokenInqOperSecuredRequest_CardTokenSel_CardTokenKeys'
      description: |+
        Criteria to select the card token record.

    CardTokenInqOperSecuredResponse_CardTokenKeys:
      required:
      - Token
      type: object
      properties:
        Token:
          maxLength: 1024
          type: string
          description: 'Token of the card. '
        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of the card.



            **Note:** Refers of the member number.
      description: Unique information to identify the card token record.
    CardTokenInqOperSecuredResponse_CardTokenInfo_PostAddr_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: Standard format of country code.
          enum:
          - ISO3166-Alpha-3
        CountryCodeValue:
          type: string
          description: Country code value as per the country code format set in the CountryCodeSource field.
      description: Details of the country code of the cardholder.
    CardTokenInqOperSecuredResponse_CardTokenInfo_PostAddr:
      required:
      - AddrType
      type: object
      properties:
        Addr1:
          maxLength: 64
          type: string
          description: 'Address line 1. '
        Addr2:
          maxLength: 64
          type: string
          description: "Address line 2. \n\nTo enter Addr2, Addr1 field must be provided."
        City:
          maxLength: 40
          type: string
          description: 'Name of the city. '
        StateProv:
          type: string
          description: State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.
        PostalCode:
          maxLength: 11
          type: string
          description: "Postal code or zip code. \n\n\n\n**Note:** U.S. addresses support the format of ZIP code that consists five digits for the ZIP code, a hyphen, and four additional digits that determine a more specific location within a specified ZIP code.\n\nThe additional four digits are optional and when not available they are provided as 0000.\n\nExamples: 32714-1234 or 32714-0000"
        CountryCode:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_PostAddr_CountryCode'
        AddrType:
          type: string
          description: Type of the address.
          enum:
          - Primary
          - Secondary
      description: Postal address details of the card holder.
    CardTokenInqOperSecuredResponse_CardTokenInfo_ActivationData:
      type: object
      properties:
        ActivationRequiredByDt:
          type: string
          description: 'Date by which the card must be activated. '
          format: date
        AvailableForUseDt:
          type: string
          description: Date from which the card is available for users to use.
          format: date
        ActivationDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Date on which the card was activated.
        ActivationStatus:
          type: string
          description: Activation status of the card.
          enum:
          - Activated
          - NotActivated
          - ActivatedBeforeAvailUseDate
          - NotFound
          - StolenOrLost
          - NoActivationRequired
          - ActivationRequired
          - ExpDateNotMatch
          - AlreadyActivated
          - AttemptAfterDeadLine
          - MaxAttemptsExceed
          - CallerIdInvalid
          - ActivationCodeInvalid
          - PINCheckNotPerformed
          - InvalidActivationMethod
          - IVRAuthFailed
        LastActivationAttemptDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Date on thich the cardholder last attempted to activate the card.
        AttemtpsNum:
          type: integer
          description: Number of attempts made to activate the card since the last reset.
          format: int64
        ActivationMethod:
          type: string
          description: Method throughwhich the card was activated.
        VerificationCallerId:
          type: string
          description: "Identifier that identifies the verification caller. \n\n\n\n**Note:** Refers to the phone number of the primary cardholder."
      description: Activation details of a card.
    CardTokenInqOperSecuredResponse_CardTokenInfo_CurAmt_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\n\n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes.\n\n\n\n"
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\n\n\nPlease note that presently only USD currency code is supported.\n\n"
      description: Details of currency code.
    CardTokenInqOperSecuredResponse_CardTokenInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: Amount in decimal format.
        CurCode:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_CurAmt_CurCode'
      description: Details of the currency limit amount.
    CardTokenInqOperSecuredResponse_CardTokenInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: Value that indicates the type of transaction.
          enum:
          - AccountOpenToBuy
          - Advances
          - All
          - CardOpenToBuy
          - PreAuth
          - SignatureDebit
          - Transfer
          - Credit
          - Withdrawal
        TrnSrc:
          type: string
          description: 'Type of transaction source. '
          enum:
          - ATM
          - ATMOffline
          - CashEquiv
          - CashEquivOffLine
          - Combined
          - CombinedOffline
          - CustomerNP
          - CustomerNPOffline
          - P2P
          - P2POffline
          - POS
          - POSOffline
          - Retail
          - Travel
        TempLimitInd:
          type: boolean
          description: Flag to indicate the temporary transaction limit of the card is set.
        LimitType:
          type: string
          description: Type of transaction limit of the card.
          enum:
          - CycleMax
          - DailyMax
          - TrnMax
          - TrnMin
        HoursInCycle:
          type: integer
          description: Number of hours in a cycle.
          format: int64
        CurAmt:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_CurAmt'
        LimitCount:
          type: integer
          description: Count of limits.
          format: int64
        TempTrnLimitExpDt:
          type: string
          description: Date on which the temporary transaction limit of the card is scheduled to expire.
          format: date
    CardTokenInqOperSecuredResponse_CardTokenInfo_TextAlertData_PhoneNum:
      required:
      - PhoneType
      type: object
      properties:
        PhoneType:
          type: string
          description: Type of phone.
          enum:
          - Home
          - Work
          - Mobile
          - Text
        Phone:
          type: string
          description: |-
            Phone number.

            Format: +1-AreaCode-Phone
      description: Details of a phone number.
    CardTokenInqOperSecuredResponse_CardTokenInfo_TextAlertData_AlertContact:
      properties:
        PhoneNum:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_TextAlertData_PhoneNum'
        Email:
          $ref: '#/components/schemas/CardTokenAddOperRequest_CardTokenInfo_TextAlertData_Email'
    CardTokenInqOperSecuredResponse_CardTokenInfo_TextAlertData:
      type: object
      properties:
        AlertContact:
          type: array
          description: Details of the alert contact.
          items:
            $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_TextAlertData_AlertContact'
      description: Details of the text alert.
    CardTokenInqOperSecuredResponse_CardTokenInfo:
      type: object
      properties:
        LastFourCardNum:
          maxLength: 4
          type: string
          description: Last four digits of the card number.
        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of the card.



            **Note:** Refers of the member number.
        CardTypeCode:
          type: string
          description: Code that identifies the type of card.
        ProductIdent:
          maxLength: 42
          type: string
          description: |-
            Product identifier that identifies the processing parameters of the card.



            **Note:** This field is required while adding a new card.
        CardDtlStatus:
          type: string
          description: Current status of the card.
          enum:
          - Active
          - HotCard
          - Lockout
          - Issued
          - Restricted
        CardStatusReason:
          type: string
          description: |-
            Value that indicates the reason of the card status.



            **Note:** This field is required only while updating the value of the CardDtlStatus field to "HotCard" or "Lockout".
          enum:
          - Stolen
          - Lost
          - Closed
          - Abused
          - Revoked
          - CustomerRequest
          - Damaged
        Expiry:
          maxLength: 4
          type: string
          description: |-
            Date on which the card is scheduled to expire.

            Format: MMYY
        EmbossingName:
          maxLength: 80
          type: string
          description: 'Name embossed on the front side of the card. '
        PostAddr:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_PostAddr'
        ActivationData:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_ActivationData'
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_CardTrnLimit'
        TextAlertData:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo_TextAlertData'
      description: Details of the card token.
    CardTokenInqOperSecuredResponse_CardTokenStatus:
      required:
      - CardTokenStatusCode
      type: object
      properties:
        CardTokenStatusCode:
          type: string
          description: |+
            Code to indicate the status of the card token.

          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card token status is changed. \n\nFormat: YYYY-MM-DDThh:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
      description: Status details of the card token.
    CardTokenInqOperSecuredResponse_CardTokenRec:
      required:
      - CardTokenInfo
      - CardTokenKeys
      - CardTokenStatus
      properties:
        CardTokenKeys:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenKeys'
        CardTokenInfo:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenInfo'
        CardTokenStatus:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenStatus'
    CardTokenModOperRequest_CardTokenKeys:
      required:
      - Token
      type: object
      properties:
        Token:
          maxLength: 1024
          type: string
          description: 'Token of the card. '
        CardSeqNum:
          maxLength: 3
          type: string
          description: Sequence number of the card.
      description: Unique information to identify the card token record.
    CardTokenModOperRequest_CardTokenInfo:
      type: object
      properties:
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.



            **Note:** For first card activation use the FirstTimeActivation field.
          enum:
          - FirstTimeActivation
          - Active
          - HotCard
          - Lockout
          - Issued
          - Restricted
        CardStatusReason:
          type: string
          description: |-
            Value that indicates the reason of the card status.



            **Note:** This field is required only while updating the value of the CardDtlStatus field to "HotCard" or "Lockout".
          enum:
          - Stolen
          - Lost
          - Closed
          - Abused
          - Revoked
          - CustomerRequest
          - Damaged
      description: Details of the card token.
    CardTokenModOperResponse_CardTokenStatusRec:
      required:
      - CardTokenKeys
      - CardTokenStatus
      type: object
      properties:
        CardTokenKeys:
          $ref: '#/components/schemas/CardTokenInqOperSecuredRequest_CardTokenSel_CardTokenKeys'
        CardTokenStatus:
          $ref: '#/components/schemas/CardTokenInqOperSecuredResponse_CardTokenStatus'
      description: Details of the card token status.
