openapi: 3.0.0
info:
  title: >
     Client Defined Field Service
  description: >-
    Client Defined Field service supports management of fields available with respect to the type of application (DDA, SDA, CDA etc.).
    <br>
    Client Defined Fields are fields that can be changed in terms of purpose and definition as per the implementation method.
  contact:
    name: Roopam Cullam
    email: Roopam.Cullam@fiserv.com
  version: "11.0.0"
paths: 
   /clientDefinedFields:
    put:
      tags:
        - Update Client Defined Field
      x-group-name: Client Defined Field Service
      x-proxy-name: Update Client Defined Field
      x-child-product-name: Accountholder
      summary:  Update Client Defined Field. 
      description: >
        Modifies, creates or deletes the client-defined field records associated with an account or party.
        <br>
        <b>Notes: </b>
        <ul><li>To modify, all client defined fields are to be included in the request (the ClientDefinedData aggregate should be included for each client defined field)</li>
        <li> To delete a particular field (currently in use by an account or party), do not include that field in the request</li>
        <li> To add a particular field (currently not in use by an account or party), include that field in the request</li></ul>
        <br>
        For more information about the Accountholder domain, <a href="../docs/?path=docs/fintechs/accountholder.md" title="Click to open">click here.</a> <br><br>
        <b>Relates to:</b>
          <ul> 
            <li><a href="../docs/?path=docs/banks-and-CU/deposits.md" title="Click to open">Deposits</a></li>
            <li><a href="../docs/?path=docs/banks-and-CU/loans.md" title="Click to open">Loans</a></li>
            <li><a href="../docs/?path=docs/banks-and-CU/bank-servicing.md" title="Click to open">Bank Servicing</a></li>
          </ul>
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader' 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDefinedFieldModRqType'
            examples:
                Sample Banking:
                  $ref: '#/components/examples/ClientDefinedFieldModRq-Premier'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDefinedFieldModRsType'
              examples:
                Sample Banking:
                  $ref: '#/components/examples/ClientDefinedFieldModRs-Premier'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDefinedFieldModRsType'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatusType1'
              examples:
                401:
                  $ref: "#/components/examples/401-Premier"
        "422":
          description: Un-processable Entity
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatusType1'
              examples:
                422:
                  $ref: "#/components/examples/422-Premier"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatusType1'
              examples:
                500:
                  $ref: "#/components/examples/500-Premier"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatusType1'
              examples:
                503:
                  $ref: "#/components/examples/503-Premier"
        default: 
            description: "Unexpected error"
            content:
              application/xml:
                schema: 
                  $ref: "#/components/schemas/ClientDefinedFieldModRsType"
    # post: 
    #   summary: ClientDefinedFieldAddOper  
    #   description: >
    #     "This service operation adds the client-defined fields for a customer’s account or party."
    #   parameters:
    #   - name: EFXHeader
    #     in: header
    #     description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
    #     required: true
    #     schema:
    #       $ref: '#/components/schemas/EFXHeader'
    #   requestBody:
    #     content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/ClientDefinedFieldAddRqType'
    #     required: true      
    #   responses:
    #     "200":
    #       description: Ok
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/ClientDefinedFieldAddRsType'
    #     default: 
    #       description: "Unexpected error"
    #       content:
    #         application/xml:
    #           schema: 
    #             $ref: "#/components/schemas/ClientDefinedFieldAddRsType"  
   /clientDefinedFields/secured:
    post: 
      tags:
        - Get Client Defined Field
      x-group-name: Client Defined Field Service
      x-proxy-name: Get Client Defined Field
      x-child-product-name: Accountholder
      summary:  Get Client Defined Field.  
      description: >-
        Retrieves the existing client-defined field records associated with an account or party.
        <br>
        For more information about the Accountholder domain, <a href="../docs/?path=docs/fintechs/accountholder.md" title="Click to open">click here.</a> <br><br>
        <b>Relates to:</b>
          <ul> 
            <li><a href="../docs/?path=docs/banks-and-CU/deposits.md" title="Click to open">Deposits</a></li>
            <li><a href="../docs/?path=docs/banks-and-CU/loans.md" title="Click to open">Loans</a></li>
            <li><a href="../docs/?path=docs/banks-and-CU/bank-servicing.md" title="Click to open">Bank Servicing</a></li>
          </ul>
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
          
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader' 
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDefinedFieldInqRqType'
              examples:
                Sample Banking:
                  $ref: '#/components/examples/ClientDefinedFieldInqRq-Premier'
        required: true      
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDefinedFieldInqRsType'
              examples:
                Sample Banking:
                  $ref: '#/components/examples/ClientDefinedFieldInqRs-Premier'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatusType1'
              examples:
                401:
                  $ref: "#/components/examples/401-Premier"
        "422":
          description: Un-processable Entity
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatusType1'
              examples:
                422:
                  $ref: "#/components/examples/422-Premier"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatusType1'
              examples:
                500:
                  $ref: "#/components/examples/500-Premier"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/StatusType1'
              examples:
                503:
                  $ref: "#/components/examples/503-Premier"
        default: 
          description: "Unexpected error"
          content:
            application/xml:
              schema: 
                $ref: "#/components/schemas/ClientDefinedFieldInqRsType"  
    # put: 
    #   summary: ClientDefinedFieldDelOperSecured  
    #   description: >
    #     "This service operation deletes the client-defined fields for a customer’s account or party."
      # parameters:
      # - name: EFXHeader
      #   in: header
      #   description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
      #   required: true
      #   schema:
      #     $ref: '#/components/schemas/EFXHeader'
    #   requestBody:
    #     content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/ClientDefinedFieldDelRqType'
    #     required: true      
    #   responses:
    #     "200":
    #       description: Ok
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/ClientDefinedFieldDelRsType'
    #     default: 
    #       description: "Unexpected error"
    #       content:
    #         application/xml:
    #           schema: 
    #             $ref: "#/components/schemas/ClientDefinedFieldDelRsType"  

components:
  schemas:
    EFXHeader:
      type: string
      example: '{ "TrnId": "f262cfa4-9da4-4a10-b48c-2e947ce3e66c", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
      required:
        - OrganizationId
      properties:
        OrganizationId:
          type: string
        TrnId:
          type: string
          maxLength: 30
        VendorId:
          type: string
          description: >-
              An identifier, supplied by Fiserv, that represents the vendor using  this API service.
        Context:
          $ref: '#/components/schemas/Context'
    Context:
      type: object
      properties:
        ClientAppName:
          description: >-
            Client Application Name of the application making the service
            request (e.g. Architect, Commercial Center, etc.).
          type: string
          maxLength: 40
        Channel:
          description: Indicates the channel used by the client application.
          type: string
        ClientDateTime:
          description: >-
            Client date and time as reported by the client application that is
            making the service request.
          type: string
          pattern: '^\[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?$'
          format: date-time
        ClientTerminalSeqNum:
          description: >-
            Also known as Trace Number or Sequence in some systems. Used to
            allow the client terminal to set a unique identifier for the
            transaction. When used by a Network defined transaction the value of
            this identifier is typically set to narrow character of 12.
          type: string
          maxLength: 36
        OriginatorType:
          description: >-
            The type of organization that the originator represents. This is
            usually a coded value representing the industry that the
            organization operates in. It contains the SIC code. For ISO 8583
            (DE18) the element is restricted to narrow character of maximum
            lenght of 4. Originator Type codes that apply to financial
            institutions are:- • 6010 - Financial institution—bank, savings and
            loan (S and L), or credit union • 6011 - Financial institution—ATM •
            6012 - Financial institution—merchandise sale • 6999 - Financial
            institution—home banking
          type: integer
          format: int64
        TerminalIdent:
          description: >-
            Unique code identifying a terminal at the card acceptor locatio
            (such as terminal code or terminal number of ATM). See For ISO 8583
            (DE41) the element is restricted to a narrow character with maximum
            length of 8.
          type: string
          maxLength: 36
        TerminalAddr1:
          type: string
          maxLength: 64
        TerminalAddr2:
          type: string
          maxLength: 64
        TerminalAddr3:
          type: string
          maxLength: 64
        TerminalAddr4:
          type: string
          maxLength: 64
        TerminalCity:
          type: string
          maxLength: 32
        TerminalCounty:
          type: string
          maxLength: 32
        TerminalStateProv:
          description: 'State Province. ISO 3166-2:US codes.'
          type: string
          maxLength: 32
        TerminalPostalCode:
          description: Postal Code is ZipCode in the US.
          type: string
          maxLength: 11
        TerminalCountryCodeSource:
          description: 'Country code source.ISO3166-Numeric, ISO3166-Alpha-3'
          type: string
          enum:
            - ISO3166Numeric
            - ISO3166Alpha3
        TerminalCountryCodeValue:
          type: string
          maxLength: 80
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          description: >-
            Name of the owner or operator of the terminal.  For ISO 8583 (DE43)
            the element is restricted to C-15.
          type: string
          maxLength: 40
        SystTraceAuditNum:
          description: >-
            Number assigned by the transaction originator to assist in
            identifying a transaction uniquely. The trace number remains
            unchanged for all messages throughout the life of a transaction.
            This number is not a terminal receipt number. The originating
            processor increments the trace number by one for each transaction
            sent to the switch. For ISO 8583 (DE11) the element is restricted to
            NC-6
          type: string
          maxLength: 36
        NetworkIdent:
          description: >-
            Identifies the interchange network for the transaction. The
            transaction is applied to the specified network settlement counts
            and balances. For ISO 8583 (DE62) the element is restricted to NC-6
          type: string
          maxLength: 80
        NetworkRefIdent:
          description: >-
            Document reference supplied by the system retaining the original
            source document and used to assist in locating that document. The
            acquirer of a transaction assigns this number. The issuer processor
            must retain it in the event that a chargeback is submitted for the
            transaction. For ISO 8583 (DE37) the element is restricted to C-12
          type: string
          maxLength: 36
        AcquirerIdent:
          description: >-
            Identifies the acquirer of the authorization or financial
            transaction. It is a mandatory element in all authorization and
            financial messages and does not change throughout the life of a
            transaction. EPOC considers the acquirer as the terminal owner for
            reporting purposes. For ISO 8583 (DE32) the element is restricted to
            C-12
          type: string
          maxLength: 36
        AcquirerCountryCodeSource:
          description: 'Country code source.ISO3166-Numeric, ISO3166-Alpha-3'
          type: string
          enum:
            - US
            - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          description: >-
            Merchant Number. For ISO 8583 (DE42) the element is restricted to
            C-15
          type: string
          maxLength: 23
        SettlementDate:
          description: >-
            This is the date on which the transaction will be settled. Used by
            ISO 8583 (DE63)
          type: string
          format: date
        SettlementIdent:
          description: >-
            This is the identification of the settlement account in which the
            transaction will be settled.
          type: string
          maxLength: 36
        BusinessApplIdent:
          description: >-
            This is the identification of the settlement account in which the
            transaction will be settled.
          type: string
        BranchIdent:
          type: string
          maxLength: 22
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
            - AM
            - PM
        ReentryType:
          type: string
          enum:
            - Manual
            - Auto
    ClientDefinedFieldStatusCodeType:
      title: ClientDefinedFieldStatusCodeType
      enum:
        - Deleted
        - Valid
      type: string
      description: >-
        Current status of the client defined field
        <br>
        Valid value is: 
          - valid
    CurCodeTypeType:
      title: CurCodeTypeType
      enum:
        - ISO4217-Alpha
        - ISO4217-Numeric
      type: string
      description: ''
    PartyIdentTypeType:
      title: PartyIdentTypeType
      enum:
        - TaxIdent
        - IBId
        - Name
        - MemberNum
        - OrgNum
        - PersonNum
      type: string
      description: ''
    SeverityType:
      title: SeverityType
      enum:
        - Error
        - Warning
        - Info
      type: string
      description: >- 
        Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
    AcctIdentType:
      title: AcctIdentType
      type: object
      properties:
        AcctIdentType:
          type: string
          description: >-
            Account Identification Type. Valid values include: AcctNum,
            AliasAcct, PORT, etc.
        AcctIdentValue:
          maxLength: 36
          type: string
          description: >-
            Account Identification Value. Contains the value of the Account
            Identifier.
      description: ''
    BaseKeysType:
      title: BaseKeysType
      type: string
      description: ''
    SvcIdentType:
      title: SvcIdentType
      type: object
      properties:
        SvcProviderName:
          maxLength: 1024
          type: string
          description: >-
            Service Provider Name is a globally unique identifier for a service
            provider which indicates the location of the Service Provider that
            gave the error.
        SvcNbr:
          maxLength: 36
          type: string
          description: Service Number.
        SvcName:
          maxLength: 32
          type: string
          description: Service Name.
      description: ''
    CardIdentType:
      title: CardIdentType
      type: object
      properties:
        CardIdentType:
          type: string
          description: 'Card Identification Type. Valid values include: PORT.'
        CardIdentValue:
          maxLength: 36
          type: string
          description: Card Identification Value.
      description: ''
    CardKeysType:
      title: CardKeysType
      allOf:
        - $ref: '#/components/schemas/BaseKeysType'
        - type: object
          properties:
            SvcIdent:
              $ref: '#/components/schemas/SvcIdentType'
            ISOCode:
              maxLength: 80
              type: string
              description: >-
                ISO Card Code. Some systems like Precision instead of ISO Number
                they use a code to refer to the ISO Number of the card.
            CardNum:
              maxLength: 32
              type: string
              description: >-
                Card Number. This number does not include the ISO component of
                the card identification.
            CardId:
              maxLength: 36
              type: string
              description: >-
                Card Identifier. Uniquely identifies a card held at a financial
                institution (this is the card number as it appears on the card).
            CardSeqNum:
              maxLength: 3
              type: string
              description: >-
                Card Sequence Number. Typically refers to the member number (if
                applicable).
            CardIdent:
              $ref: '#/components/schemas/CardIdentType'
      description: ''
    CurCodeType:
      title: CurCodeType
      required:
        - CurCodeValue
      type: object
      properties:
        CurCodeType:
          $ref: '#/components/schemas/CurCodeTypeType'
        CurCodeTypeEnumDesc:
          maxLength: 80
          type: string
          description: Currency Code Type Enumeration Description.
        CurCodeValue:
          maxLength: 80
          type: string
          description: >-
            Currency Code Value. Indicates the Currency Code Value within the
            CurCodeType table specified.
      description: ''
    AcctKeysType: 
      title: AcctKeysType
      allOf:
        # - $ref: '#/components/schemas/BaseKeysType'
        - type: object
          properties:
            AcctId:
              maxLength: 36
              type: string
              description: >-
                Unique identification number of an account record
            # SubAcctId:
            #   maxLength: 36
            #   type: string
            #   description: Sub Account Identifier.
            AcctType:
              type: string
              description: >-
                Type of an account.
                <br>
                Valid values are:
                  - CDA
                  - DDA
                  - SDA
                  - LOAN
                  
                <br>
                For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary </a>.
            # CardKeys:
            #   type: array
            #   items:
            #     $ref: '#/components/schemas/CardKeysType'
            #   description: >-
            #     Card Keys.  Contains data that describes the key of the Card
            #     record.
            # AcctIdent:
            #   type: array
            #   items:
            #     $ref: '#/components/schemas/AcctIdentType'
            #   description: >-
            #     Account Identification. Other account identification used as
            #     part of the Account object key in addition to the Account
            #     Identifier (AcctId).
            # CurCode:
            #   type: array
            #   items:
            #     $ref: '#/components/schemas/CurCodeType'
            #   description: Currency Code.
            # FIIdentType:
            #   type: array
            #   items:
            #     type: object
            #   description: Financial Institution Identification Type.
            # FIIdent:
            #   maxLength: 34
            #   type: array
            #   items:
            #     maxLength: 34
            #     type: string
            #   description: Financial Institution Identification.
            # BranchIdent:
            #   maxLength: 22
            #   type: array
            #   items:
            #     maxLength: 22
            #     type: string
            #   description: >-
            #     Branch Identification. Other identification used as part of the
            #     Branch object key.
      description: >-
        Unique information to identify the account record
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description:
            Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response. 
            # OLD: Path indicates which EFX element is in error. It provides either the
            #path of the element, or just the element name. If it provides the
            #path, it must use XPath absolute notation with the starting node
           #being the node of the message, and ending with the name of the
            #element in error.
        ServerPath:
          maxLength: 256
          type: string
          description: >-
            Server Path is the Service Provider’s identification of the field in
            their schema, such as an XPath, field ID, or field name that is
            associated with the ServerStatusCode. If this element is set, it
            must be returned in the ServerPath element of the OvrdExceptionData
            aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: 
            Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
            # OLD: Value string representation of the EFX data value of the element in
            #error. This field is intended to provide a human readable visual
            #hint as to the value in error. It should not be provided for fields
            #that cannot be represented as a string (i.e., binary data).
      description: 'Information about the subject element'     
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: 
            EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: 
            Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.

        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: >-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature

        ServerStatusCode:
          maxLength: 20
          type: string
          description: >-
            Server status code of the service provider's application.  
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: >-
            Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: >-
            Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          items:
            $ref: '#/components/schemas/SubjectElementType'
          description: >-
            Information about the elements that caused the status.
      description: ''    
    ClientDefinedDataType: 
      title: ClientDefinedDataType
      required:
        - DataIdent
      type: object
      properties:
        # DataClassType:
        #   type: string
        #   description: >-
        #     Data Class Type. Application the data belongs, this is client
        #     defined value.
        # DataClassTypeEnumDesc:
        #   maxLength: 80
        #   type: string
        #   description: Application Enumeration Descipton.
        DataIdent:
          maxLength: 36
          type: string
          description: >-
            Unique data identifier to identify the client-defined data item 
        # DataIdentEnumDesc:
        #   maxLength: 80
        #   type: string
        #   description: Data Identifier Enumeration Description.
        DataType:
          type: string
          description: >-
            Type of a client-defined Data.
            <br>
            Valid values are:
              - Alpha
              - Currency
              - CurrencySymbol
              - Date
              - Numeric
              - NumericSymbol
              - Rate
              - RateSymbol
        # DataTypeEnumDesc:
        #   maxLength: 80
        #   type: string
        #   description: Data Type Enumeration Description.
        Value:
          maxLength: 256
          type: string
          description: >-
            Value of the client-defined data item
        DataLength:
          type: integer
          description: Length of the client-defined data
          format: int64
        ExpDt:
          type: string
          description: >-
            Date after which the client-defined data item becomes inactive.
            <br>
            Format: yyyy-mm-dd 
          example: "2021-11-20"
          format: date
        Desc:
          maxLength: 100
          type: string
          description: Description of the client-defined data
        RequiredFlag:
          type: boolean
          description: >-
            Flag to indicate data value is required for the client-defined data
        SearchFlag:
          type: boolean
          description: >-
            Flag to indicate the client-defined data can be searched
        # GroupNum:
        #   maxLength: 20
        #   type: string
        #   description: Group Number. Indicates if the data belongs in a group.
        # RestrictedInd:
        #   type: boolean
        #   description: >-
        #     Restricted Indicator. Indicates whether the account information is
        #     restricted for view by the requester.
        # RestrictedDesc:
        #   maxLength: 80
        #   type: string
        #   description: >-
        #     Restricted Description. Description of the reason for the account to
        #     be restricted.
      description: >-
        Details of the client-defined data whose value, data type and definition are defined by the client or user
    OvrdElementType:
      title: OvrdElementType
      type: object
      allOf:
        - $ref: '#/components/schemas/SubjectElementType'
        - type: object
      #properties:
        #SubjectElement: 
          #$ref: '#/components/schemas/SubjectElementType'
      description: Information about the elements that corresponds to the override exception code.
    OverrideExceptionType:
      title: OverrideExceptionType
      type: object
      properties:
        SubjectRole:
          type: string
          description: Role of the subject who is overriding the exception.
        SubjectIdent:
          maxLength: 36
          type: string
          description: Subject identification value to identify the subject who is overriding the exception.
        OvrdExceptionCode:
          maxLength: 40
          type: string
          description: 
            Override exception code to be overridden. This can be the ServerStatusCode from the Message Status section.
            # OLD: Override exception code identifies an exception code that is to be overridden. This code would be the ServerStatusCode from the Status response.
        OvrdElement:
          $ref: '#/components/schemas/OvrdElementType'
      description: '' 
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OverrideException:
          type: array
          items:
            $ref: '#/components/schemas/OverrideExceptionType'
          description: List of the exceptions that can be overridden.
      description: Details of the exceptions that can be manually acknowledged by the client.
    PartyKeysType: 
      title: PartyKeysType
      allOf:
        # - $ref: '#/components/schemas/BaseKeysType'
        - type: object
          properties:
            # SvcIdent:
            #   $ref: '#/components/schemas/SvcIdentType'
            PartyId:
              maxLength: 36
              type: string
              description: >-
                Unique identification number of a party record
            # PartyIdentType:
            #   $ref: '#/components/schemas/PartyIdentTypeType'
            # PartyIdent:
            #   maxLength: 60
            #   type: string
            #   description: Party Identification.
      description: >-
        Unique information to identify the party record
    ClientDefinedFieldInfoType: 
      title: ClientDefinedFieldInfoType
      required:
        - ClientDefinedData
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/AcctKeysType'
        PartyKeys:
          $ref: '#/components/schemas/PartyKeysType'
        ClientDefinedData:
          type: array
          items:
            $ref: '#/components/schemas/ClientDefinedDataType'
          description: >-
            Details of the client-defined data whose definition, data type and value is defined by the client or user
      description: Information about client defined field record associated with an account or party
    ClientDefinedFieldAddRqType:
      title: ClientDefinedFieldAddRqType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: >-
            Override AutoAcknowledge Indicator. Used when the midleware is in
            charge of  auto-acknowledgement of exceptions.
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        ClientDefinedFieldInfo:
          $ref: '#/components/schemas/ClientDefinedFieldInfoType'
      description: ''
    StatusType: 
      title: StatusType
      required:
        - StatusCode
        - StatusDesc
        - Severity
        - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description:
            Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: 
            EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description:
            Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: >-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
 
            
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 
            Server status code of the service provider's application.  
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: 
            Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: 
            Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          items:
            $ref: '#/components/schemas/SubjectElementType'
          description: 
            Information about the elements that caused the status.
        ContentHTML:
          type: string
          description: 
            Response status in HTML format. This parameter returns only in some cases. #(excluding the core specific information), for example, in Premier, upon failure an HTML page is provided to support the maintenance of reported failures.
        AdditionalStatus:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
          description: 
            Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
            
            # OLD: Additional Status aggregate may appear once for each additional
            #status that the server intends to provide.
      description:  Details of the API response messages.            
    StatusType1:
      title: Status Type for Error messages
      required:
        - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
    ClientDefinedFieldKeysType: # 
      title: ClientDefinedFieldKeysType
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/AcctKeysType'
        PartyKeys:
          $ref: '#/components/schemas/PartyKeysType'
        # DataClassType:
        #   type: string
        #   description: >-
        #     Data Class Type. Application the data belongs, this is client
        #     defined value.
        # DataIdent:
        #   maxLength: 36
        #   type: string
        #   description: Data Identification. Identification of the client defined data item.
      description: >-
        Unique information to identify the client-defined field record
    ClientDefinedFieldStatusType: 
      title: ClientDefinedFieldStatusType
      required:
        - ClientDefinedFieldStatusCode
      type: object
      properties:
        ClientDefinedFieldStatusCode:
          $ref: '#/components/schemas/ClientDefinedFieldStatusCodeType'
        EffDt:
          pattern: '^\[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?$'
          # format: date-time
          type: string
          description: >-
            Effective date and time when the status of client defined field is changed.
            <br>
            Format: yyyy-MM-ddTHH:mm:ss.SSS
          example: "2021-06-28T23:40:30.888"
      description: Details of the client defined field status
    ClientDefinedFieldStatusRecType: #
      title: ClientDefinedFieldStatusRecType
      required:
        - ClientDefinedFieldKeys
        - ClientDefinedFieldStatus
      type: object
      properties:
        ClientDefinedFieldKeys:
          type: array
          items:
            $ref: '#/components/schemas/ClientDefinedFieldKeysType'
          description: >-
            Unique information to identify the client-defined field record
        ClientDefinedFieldStatus:
          $ref: '#/components/schemas/ClientDefinedFieldStatusType'
      description: Details of the client defined field response record that includes response keys and response status
    ClientDefinedFieldAddRsType:
      title: ClientDefinedFieldAddRsType
      required:
        - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        ClientDefinedFieldStatusRec:
          $ref: '#/components/schemas/ClientDefinedFieldStatusRecType'
      description: ''
    ClientDefinedFieldDelRqType:
      title: ClientDefinedFieldDelRqType
      required:
        - ClientDefinedFieldKeys
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: >-
            Override AutoAcknowledge Indicator. Used when the midleware is in
            charge of  auto-acknowledgement of exceptions.
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        ClientDefinedFieldKeys:
          $ref: '#/components/schemas/ClientDefinedFieldKeysType'
      description: ''
    ClientDefinedFieldDelRsType:
      title: ClientDefinedFieldDelRsType
      required:
        - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        ClientDefinedFieldStatusRec:
          $ref: '#/components/schemas/ClientDefinedFieldStatusRecType'
      description: ''
    ClientDefinedFieldSelType: #
      title: ClientDefinedFieldSelType
      type: object
      properties:
        ClientDefinedFieldKeys:
          $ref: '#/components/schemas/ClientDefinedFieldKeysType'
        AcctKeys:
          $ref: '#/components/schemas/AcctKeysType'
        PartyKeys:
          $ref: '#/components/schemas/PartyKeysType'
      description: Details of the selection criteria used to identify client defined field records
    ClientDefinedFieldInqRqType: #
      title: ClientDefinedFieldInqRqType
      required:
        - ClientDefinedFieldSel
      type: object
      properties:
        ClientDefinedFieldSel:
          $ref: '#/components/schemas/ClientDefinedFieldSelType'
      description: ''
    RecCtrlOutType:
      title: RecCtrlOutType
      required:
        - SentRecCount
      type: object
      properties:
        SentRecCount:
          type: integer
          description: >-
            Total number of records that matched the selection criteria and returned in the response message
          format: int64
        # MatchedRecCount:
        #   type: integer
        #   description: >-
        #     Matched Record Count. Total number of records matching the selection
        #     criteria.
        #   format: int64
        # RemainRecCount:
        #   type: integer
        #   description: >-
        #     Remain Record Count.  Total number of records matching the selection
        #     criteria that have not been sent yet.
        #   format: int64
        # Cursor:
        #   maxLength: 250
        #   type: string
        #   description: >-
        #     Cursor. Next Record Pointer Included in the response only if
        #     additional records are available.
      description: >-
        Information retrieved for the criteria specified in the RecCtrlIn aggregate of the request message
    ClientDefinedFieldRecType: #
      title: ClientDefinedFieldRecType
      required:
        - ClientDefinedFieldKeys
        - ClientDefinedFieldInfo
        - ClientDefinedFieldStatus
      type: object
      properties:
        ClientDefinedFieldKeys:
          $ref: '#/components/schemas/ClientDefinedFieldKeysType'
        ClientDefinedFieldInfo:
          $ref: '#/components/schemas/ClientDefinedFieldInfoType'
        ClientDefinedFieldStatus:
          $ref: '#/components/schemas/ClientDefinedFieldStatusType'
      description: Details of the client defined field response record that includes response keys, response status and response information
    ClientDefinedFieldInqRsType: #
      title: ClientDefinedFieldInqRsType
      required:
        - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/RecCtrlOutType'
        ClientDefinedFieldRec:
          $ref: '#/components/schemas/ClientDefinedFieldRecType'
      description: ''
    ClientDefinedFieldModRqType: #
      title: ClientDefinedFieldModRqType
      required:
        - ClientDefinedFieldKeys
        - ClientDefinedFieldInfo
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: 
            Flag to indicate if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.  
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        ClientDefinedFieldKeys:
          $ref: '#/components/schemas/ClientDefinedFieldKeysType'
        ClientDefinedFieldInfo:
          $ref: '#/components/schemas/ClientDefinedFieldInfoType'
      description: ''
    ClientDefinedFieldModRsType: #
      title: ClientDefinedFieldModRsType
      required:
        - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        ClientDefinedFieldStatusRec:
          $ref: '#/components/schemas/ClientDefinedFieldStatusRecType'
      description: ''
  examples:
    401-Premier:
      value:
        Status:
          StatusCode: '1740'
          StatusDesc: Authentication Failed
          Severity: Error
          SvcProviderName: Premier
          ServerStatusCode: '401'
          ServerStatusDesc: Unauthorized
    422-Premier:
      value:
        Status:
          StatusCode: '1090'
          StatusDesc: Invalid Value
          Severity: Error
          SvcProviderName: Premier
          ServerStatusCode: '422'
          ServerStatusDesc: Unprocessable Entity
    500-Premier:
      value:
        Status:
          StatusCode: '100'
          StatusDesc: General Error
          Severity: Error
          SvcProviderName: Premier
          ServerStatusCode: '500'
          ServerStatusDesc: Internal Server Error
    503-Premier:
      value:
        Status:
          StatusCode: '300'
          StatusDesc: System Not Available
          Severity: Error
          SvcProviderName: Premier
          ServerStatusCode: '503'
          ServerStatusDesc: Service Unavailable
    ClientDefinedFieldInqRq-Premier:
      value:
        ClientDefinedFieldSel:
          AcctKeys:
            AcctId: '1000'
            AcctType: SDA
    ClientDefinedFieldInqRs-Premier:
      value:
        Status:
          StatusCode: '0'
          StatusDesc: Success
          Severity: Info
          SvcProviderName: Premier
        RecCtrlOut:
          SentRecCount: 6
        ClientDefinedFieldRec:
          ClientDefinedFieldKeys:
            AcctKeys:
              AcctId: '1000'
              AcctType: SDA
          ClientDefinedFieldInfo:
            ClientDefinedData:
              - DataIdent: '1'
                DataType: Date
                Value: 09091995
                DataLength: 10
                Desc: NEXT ACCT REVIEW
                RequiredFlag: false
              - DataIdent: '2'
                DataType: Alpha
                Value: REGULAR TRANSACT
                DataLength: 16
                Desc: ACCT ACTIVITY
                RequiredFlag: false
              - DataIdent: '3'
                DataType: Alpha
                Value: ION ACTIVITY
                DataLength: 16
                Desc: ACCT ACTIVITY
                RequiredFlag: false
              - DataIdent: '5'
                DataType: Alpha
                Value: EARNED AT 6.8%
                DataLength: 16
                Desc: ACCT HISTORY
                RequiredFlag: false
              - DataIdent: '6'
                DataType: Alpha
                Value: 'FOR 3 YEARS,'
                DataLength: 16
                Desc: ACCT HISTORY
                RequiredFlag: false
              - DataIdent: '7'
                DataType: Alpha
                Value: THEN 8.9% FOR 5.
                DataLength: 16
                Desc: ACCT HISTORY
                RequiredFlag: false
          ClientDefinedFieldStatus:
            ClientDefinedFieldStatusCode: Valid
            EffDt: '2022-01-17T14:44:14.944'
    ClientDefinedFieldModRq-Premier:
      value:
        OvrdAutoAckInd: true
        ClientDefinedFieldKeys:
          AcctKeys:
            AcctId: '1000'
            AcctType: SDA
        ClientDefinedFieldInfo:
          ClientDefinedData:
            - DataIdent: '1'
              DataType: Date
              Value: '09091996'
              DataLength: 10
              Desc: NEXT ACCT REVIEW
              RequiredFlag: false
            - DataIdent: '2'
              DataType: Alpha
              Value: REGULAR TRANSACT
              DataLength: 16
              Desc: ACCT ACTIVITY
              RequiredFlag: false
            - DataIdent: '3'
              DataType: Alpha
              Value: ION ACTIVITY
              DataLength: 16
              Desc: ACCT ACTIVITY
              RequiredFlag: false
            - DataIdent: '5'
              DataType: Alpha
              Value: EARNED AT 6.8%
              DataLength: 16
              Desc: ACCT HISTORY
              RequiredFlag: false
            - DataIdent: '6'
              DataType: Alpha
              Value: 'FOR 3 YEARS,'
              DataLength: 16
              Desc: ACCT HISTORY
              RequiredFlag: false
            - DataIdent: '7'
              DataType: Alpha
              Value: THEN 8.9% FOR 5.
              DataLength: 16
              Desc: ACCT HISTORY
              RequiredFlag: false
    ClientDefinedFieldModRs-Premier:
      value:
        Status:
          StatusCode: '0'
          StatusDesc: Success
          Severity: Info
          SvcProviderName: Premier
        ClientDefinedFieldStatusRec:
          ClientDefinedFieldKeys:
            - AcctKeys:
                AcctId: '1000'
                AcctType: SDA
          ClientDefinedFieldStatus:
            ClientDefinedFieldStatusCode: Valid
            EffDt: '2022-01-18T05:31:53.145'