---
openapi: 3.0.1
info:
  title: Client Defined Field Service
  description: Client Defined Field service supports management of fields available with respect to the type of application (DDA, SDA, CDA etc.). Client Defined Fields are fields that can be changed in terms of purpose and definition as per the implementation method.
  version: 11.0.0_PRM
servers:
- url: /
paths:
  /clientdefinedfieldservice/partyacctsvc/clientDefinedFields/secured:
    post:
      tags:
      - Get Client Defined Field
      summary: Get Client Defined Field.
      description: "Retrieves the existing client-defined field records associated with an account or party.\n        <br>\n        For more information about the Accountholder domain, <a href=\"../docs/?path=docs/fintechs/accountholder.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: ClientDefinedFieldInq
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDefinedFieldInqRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDefinedFieldInqResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDefinedFieldInqResponse'
      x-group-name: Client Defined Field Service
      x-proxy-name: Get Client Defined Field
      x-child-product-name: Accountholder
      x-core: Premier
  /clientdefinedfieldservice/partyacctsvc/clientDefinedFields:
    put:
      tags:
      - Update Client Defined Field
      summary: Update Client Defined Field.
      description: "Modifies, creates or deletes the client-defined field records associated with an account or party.\n        <br>\n        <b>Notes: </b>\n        <ul><li>To modify, all client defined fields are to be included in the request (the ClientDefinedData aggregate should be included for each client defined field)</li>\n        <li> To delete a particular field (currently in use by an account or party), do not include that field in the request</li>\n        <li> To add a particular field (currently not in use by an account or party), include that field in the request</li></ul>\n        <br>\n        For more information about the Accountholder domain, <a href=\"../docs/?path=docs/fintechs/accountholder.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: ClientDefinedFieldMod
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDefinedFieldModRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDefinedFieldModResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDefinedFieldModResponse'
      x-group-name: Client Defined Field Service
      x-proxy-name: Update Client Defined Field
      x-child-product-name: Accountholder
      x-core: Premier
components:
  schemas:
    ClientDefinedFieldInqRequest:
      required:
      - ClientDefinedFieldSel
      properties:
        ClientDefinedFieldSel:
          $ref: '#/components/schemas/ClientDefinedFieldInqRequest_ClientDefinedFieldSel'
    ClientDefinedFieldInqResponse:
      required:
      - ClientDefinedFieldRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/ClientDefinedFieldInqResponse_RecCtrlOut'
        ClientDefinedFieldRec:
          $ref: '#/components/schemas/ClientDefinedFieldInqResponse_ClientDefinedFieldRec'
    ClientDefinedFieldModRequest:
      required:
      - ClientDefinedFieldInfo
      - ClientDefinedFieldKeys
      properties:
        ClientDefinedFieldKeys:
          $ref: '#/components/schemas/ClientDefinedFieldModRequest_ClientDefinedFieldKeys'
        ClientDefinedFieldInfo:
          $ref: '#/components/schemas/ClientDefinedFieldModRequest_ClientDefinedFieldInfo'
    ClientDefinedFieldModResponse:
      required:
      - ClientDefinedFieldStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        ClientDefinedFieldStatusRec:
          $ref: '#/components/schemas/ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          type: string
        TrnId:
          maxLength: 30
          type: string
        VendorId:
          type: string
          description: An identifier, supplied by Fiserv, that represents the vendor using  this API service.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Client Application Name of the application making the service request (e.g. Architect, Commercial Center, etc.).
        Channel:
          type: string
          description: Indicates the channel used by the client application.
        ClientDateTime:
          type: string
          description: Client date and time as reported by the client application that is making the service request.
          format: date-time
        ClientTerminalSeqNum:
          maxLength: 36
          type: string
          description: Also known as Trace Number or Sequence in some systems. Used to allow the client terminal to set a unique identifier for the transaction. When used by a Network defined transaction the value of this identifier is typically set to narrow character of 12.
        OriginatorType:
          type: integer
          description: "\"The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.\nOriginator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial\ninstitution—home banking\""
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor locatio (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
        TerminalAddr2:
          maxLength: 64
          type: string
        TerminalAddr3:
          maxLength: 64
          type: string
        TerminalAddr4:
          maxLength: 64
          type: string
        TerminalCity:
          maxLength: 32
          type: string
        TerminalCounty:
          maxLength: 32
          type: string
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State Province. ISO 3166-2:US codes.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: Postal Code is ZipCode in the US.
        TerminalCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - ISO3166Numeric
          - ISO3166Alpha3
        TerminalCountryCodeValue:
          maxLength: 80
          type: string
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifies the acquirer of the authorization or financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          maxLength: 23
          type: string
          description: Merchant Number. For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: This is the date on which the transaction will be settled. Used by ISO 8583 (DE63)
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BranchIdent:
          maxLength: 22
          type: string
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          enum:
          - Manual
          - Auto
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    ClientDefinedFieldInqRequest_ClientDefinedFieldSel_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - CDA
          - DDA
          - SDA
          - LOAN
      description: Unique information to identify the account record.
    ClientDefinedFieldInqRequest_ClientDefinedFieldSel_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Refers to name identification, the system-defined unique identifier assigned to the name record.
      description: Unique information to identify the party record.
    ClientDefinedFieldInqRequest_ClientDefinedFieldSel:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/ClientDefinedFieldInqRequest_ClientDefinedFieldSel_AcctKeys'
        PartyKeys:
          $ref: '#/components/schemas/ClientDefinedFieldInqRequest_ClientDefinedFieldSel_PartyKeys'
      description: Details of the selection criteria used to identify client defined field records.
    ClientDefinedFieldInqResponse_RecCtrlOut:
      required:
      - SentRecCount
      type: object
      properties:
        SentRecCount:
          type: integer
          description: Total number of records that matched the selection criteria and returned in the response message.
          format: int64
      description: Information retrived for the criteria specified in the RecCtrlIn aggregate of the request message.
    ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification code to identify an account.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary </a>.
      description: Key details to identify an account record.
    ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldKeys_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification code to identify a party record.

            **Note:** Refers to name identification, the system-defined unique identifier assigned to the name record.
      description: Details of the party keys that are used to identify the party record.
    ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldKeys:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldKeys_AcctKeys'
        PartyKeys:
          $ref: '#/components/schemas/ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldKeys_PartyKeys'
      description: Unique information to identify the client-defined field record.
    ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldInfo_ClientDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          maxLength: 36
          type: string
          description: Unique data identifier to identify the client-defined data item.
        DataType:
          type: string
          description: Type of a client-defined data.
          enum:
          - Alpha
          - Currency
          - CurrencySymbol
          - Date
          - Numeric
          - NumericSymbol
          - Rate
          - RateSymbol
        Value:
          maxLength: 256
          type: string
          description: |-
            Value of the client-defined data item.

            **Note:** Values of this field are client defined.
        DataLength:
          type: integer
          description: Length of the client-defined data.
          format: int64
        ExpDt:
          type: string
          description: "Date after which the client-defined data item becomes inactive.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20 "
          format: date
        Desc:
          maxLength: 100
          type: string
          description: Description of the client-defined data.
        RequiredFlag:
          type: boolean
          description: |+
            Flag to indicate data value is required for the client-defined data.

        SearchFlag:
          type: boolean
          description: |+
            Flag to indicate the client-defined data can be searched.

    ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldInfo:
      required:
      - ClientDefinedData
      type: object
      properties:
        ClientDefinedData:
          type: array
          description: |-
            Details of the client-defined data whose value, data type and definition are defined by the client or user.

            **Note:** For SDA/CDA/DDA only Application - 000 and For Loan & party 050 will be pulled.



            We are only pulling the client defined fields directly related to the party and the account. Client defined fields related to addenda cannot be pulled using this service.
          items:
            $ref: '#/components/schemas/ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldInfo_ClientDefinedData'
      description: Information about client-defined field record associated with an account or party.
    ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldStatus:
      required:
      - ClientDefinedFieldStatusCode
      type: object
      properties:
        ClientDefinedFieldStatusCode:
          type: string
          description: Current status of the client defined field.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time when the status of client defined field is changed.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-06-28T23:40:30.888
      description: Details of the client defined field status.
    ClientDefinedFieldInqResponse_ClientDefinedFieldRec:
      required:
      - ClientDefinedFieldInfo
      - ClientDefinedFieldKeys
      - ClientDefinedFieldStatus
      type: object
      properties:
        ClientDefinedFieldKeys:
          $ref: '#/components/schemas/ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldKeys'
        ClientDefinedFieldInfo:
          $ref: '#/components/schemas/ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldInfo'
        ClientDefinedFieldStatus:
          $ref: '#/components/schemas/ClientDefinedFieldInqResponse_ClientDefinedFieldRec_ClientDefinedFieldStatus'
      description: Details of the client defined field response record that includes response keys, response status and response information.
    ClientDefinedFieldModRequest_ClientDefinedFieldKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification code to identify an account.

            **Note:** Required while modifying account client-defined fields.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** Required while modifying account client-defined fields.
      description: |-
        Key details to identify an account record.

        **Note:** Use this aggregate to pass the information of the account.
    ClientDefinedFieldModRequest_ClientDefinedFieldKeys_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification code to identify a party record.

            **Note:** Refers to name identification. Unique Identifier for Customer.  Required when modifying party client-defined fields.
      description: |-
        Details of the party keys that are used to identify the party record.

        **Note:** Use this aggregate to pass the information of the party (customer).
    ClientDefinedFieldModRequest_ClientDefinedFieldKeys:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/ClientDefinedFieldModRequest_ClientDefinedFieldKeys_AcctKeys'
        PartyKeys:
          $ref: '#/components/schemas/ClientDefinedFieldModRequest_ClientDefinedFieldKeys_PartyKeys'
      description: "Key details to identify client defined field record.\n\n**Note:** Client-defined fields may be maintained for parties and accounts. Use this aggregate to pass the information of either a party or account. It is required to send only one of the two aggregates AcctKeys or PartyKey in the request. Not providing an account or party would lead to an error in the operation. "
    ClientDefinedFieldModRequest_ClientDefinedFieldInfo_ClientDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          maxLength: 36
          type: string
          description: |-
            Code to identify the client-defined data item related to a person of a party.

            **Note:** Refers to the Field Code and it has to exist in the Flex Data Specifications in Premier.  The service will issue an error  when more than one ClientDefinedData aggregate is sent with the same DataIdent.
        Value:
          maxLength: 256
          type: string
          description: |-
            Value of the client-defined data related to a person of the party.

            **Note:** This should be provided in the request while adding or updating the client-defined data.
        ExpDt:
          type: string
          description: "Date at which the client-defined data item becomes inactive.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20 "
          format: date
    ClientDefinedFieldModRequest_ClientDefinedFieldInfo:
      required:
      - ClientDefinedData
      type: object
      properties:
        ClientDefinedData:
          type: array
          description: "Details of the client-defined data whose definition, data type and value is defined by the client or user.\n\n**Note:** This aggregate may repeat multiple times. In the request there should be one ClientDefinedData aggregate for each client-defined field related to the party or account. \n\n\n\nThe modification request will delete a client-defined field from the party or account if this field (currently in use by the party or account) is not included in the modification request.\n\n\n\nThe modification request will add a client-defined field to the party or account if the field (not currently in use by the party or account) is included in the modification request\n\n\n\nThe modification request will modify a client-defined field of the party or account if the field is currently in use by the party or account. \n\n\n\nClient applications typically perform a ClientDefinedFieldInq prior executing a modification request to obtain the list of all client-defined fields associated to the party or account."
          items:
            $ref: '#/components/schemas/ClientDefinedFieldModRequest_ClientDefinedFieldInfo_ClientDefinedData'
      description: |-
        Information about client defined field record associated with an account or party.

        **Note:** This aggregate contains the collection of all client-defined fields of the party or account.
    ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification code to identify an account.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** Refers to Account Type corresponding to

            the Account Identifier at the Financial Institution
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
      description: Key details to identify an account record.
    ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification code to identify a party record.

            **Note:** Refers to name identification for the party.
      description: Details of the party keys that are used to identify the party record.
    ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec_ClientDefinedFieldKeys:
      properties:
        AcctKeys:
          $ref: '#/components/schemas/ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec_AcctKeys'
        PartyKeys:
          $ref: '#/components/schemas/ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec_PartyKeys'
    ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec_ClientDefinedFieldStatus:
      required:
      - ClientDefinedFieldStatusCode
      type: object
      properties:
        ClientDefinedFieldStatusCode:
          type: string
          description: |-
            Current status of the client defined field.



            **Note:** The field indicates the status of the party or account record as a result of the modification requests.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date and time at which the status of client defined field associated with an account is changed.

            Format: {yyyy-MM-ddTHH:mm:ss.SSS}

            Example: 2021-06-28T23:40:30.888
      description: Details of the client defined field status.
    ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec:
      required:
      - ClientDefinedFieldKeys
      - ClientDefinedFieldStatus
      type: object
      properties:
        ClientDefinedFieldKeys:
          type: array
          description: Key details to identify client defined field record.
          items:
            $ref: '#/components/schemas/ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec_ClientDefinedFieldKeys'
        ClientDefinedFieldStatus:
          $ref: '#/components/schemas/ClientDefinedFieldModResponse_ClientDefinedFieldStatusRec_ClientDefinedFieldStatus'
      description: Details of the client defined field response record that includes response keys and response status.
