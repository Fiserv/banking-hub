---
openapi: 3.0.1
info:
  title: Address Service
  description: The Address service manages addresses related to parties and product accounts.
  version: 11.0.0_SIG
servers:
- url: /
paths:
  /address:
    put:
      tags:
      - Update Address
      summary: Update Address
      description: "Modifies the existing address record associated with the financial account or Party. \n        <br><br>\n        For more information about the Accountholder domain, <a href=\"../docs/?path=docs/fintechs/accountholder.md\" title=\"Click to open\">click here.</a>\n        <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: modifyAddr
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyAddrRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyAddrResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyAddrResponse'
      x-group-name: Address Service
      x-proxy-name: Update Address
      x-child-product-name: Accountholder
      x-core: Signature
    post:
      tags:
      - Add Address
      summary: Add Address
      description: "Creates a new address record for a Party or a financial account. This API also allows you to relate a newly created account record to the existing Party. <br>\n        For more information about the Accountholder domain, <a href=\"../docs/?path=docs/fintechs/accountholder.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul> "
      operationId: addAddress
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAddressRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAddressResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAddressResponse'
      x-group-name: Address Service
      x-proxy-name: Add Address
      x-child-product-name: Accountholder
      x-core: Signature
  /address/secured:
    put:
      tags:
      - Delete Address
      summary: Delete Address
      description: "Deletes the existing address record associated with an account or party.\n        <br>\n        For more information about the Accountholder domain, <a href=\"../docs/?path=docs/fintechs/accountholder.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: deleteAddrByPut
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteAddrByPutRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAddrByPutResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAddrByPutResponse'
      x-group-name: Address Service
      x-proxy-name: Delete Address
      x-child-product-name: Accountholder
      x-core: Signature
    post:
      tags:
      - Get Address
      summary: Get Address
      description: "Retrieves the address record associated with an account or party.\n        <br>\n        For more information about the Accountholder domain, <a href=\"../docs/?path=docs/fintechs/accountholder.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul>"
      operationId: getAddrByPost
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAddrByPostRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAddrByPostResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAddrByPostResponse'
      x-group-name: Address Service
      x-proxy-name: Get Address
      x-child-product-name: Accountholder
      x-core: Signature
components:
  schemas:
    addAddressRequest:
      required:
      - AddrInfo
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        PartyAddrRelInfo:
          $ref: '#/components/schemas/addAddressRequest_PartyAddrRelInfo'
        AcctAddrRelInfo:
          type: array
          description: Details of the relationship between account and address.
          items:
            $ref: '#/components/schemas/addAddressRequest_AcctAddrRelInfo'
        AddrInfo:
          $ref: '#/components/schemas/addAddressRequest_AddrInfo'
    addAddressResponse:
      required:
      - AddrStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        AddrStatusRec:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec'
    deleteAddrByPutRequest:
      required:
      - AddrKeys
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        AddrKeys:
          $ref: '#/components/schemas/deleteAddrByPutRequest_AddrKeys'
    deleteAddrByPutResponse:
      required:
      - AddrStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        AddrStatusRec:
          $ref: '#/components/schemas/deleteAddrByPutResponse_AddrStatusRec'
    getAddrByPostRequest:
      required:
      - AddrSel
      properties:
        AddrSel:
          $ref: '#/components/schemas/getAddrByPostRequest_AddrSel'
    getAddrByPostResponse:
      required:
      - AddrRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/getAddrByPostResponse_RecCtrlOut'
        AddrRec:
          type: array
          description: |+
            Details of the address record that includes response keys, response status and response information.

            **Note:** For a party, only one primary and secondary/seasonal address are allowed.

            For an account, maximum 15 secondary/seasonal address is allowed. Therefore, this aggregate can repeat up to 15 times for accounts.

            For a safe deposit box, only one secondary/seasonal address is allowed.

          items:
            $ref: '#/components/schemas/getAddrByPostResponse_AddrRec'
    modifyAddrRequest:
      required:
      - AddrInfo
      - AddrKeys
      properties:
        AddrKeys:
          $ref: '#/components/schemas/modifyAddrRequest_AddrKeys'
        AddrInfo:
          $ref: '#/components/schemas/modifyAddrRequest_AddrInfo'
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
    modifyAddrResponse:
      required:
      - AddrStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        AddrStatusRec:
          $ref: '#/components/schemas/modifyAddrResponse_AddrStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          type: string
        TrnId:
          maxLength: 30
          type: string
        VendorId:
          type: string
          description: An identifier, supplied by Fiserv, that represents the vendor using  this API service.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Client Application Name of the application making the service request (e.g. Architect, Commercial Center, etc.).
        Channel:
          type: string
          description: Indicates the channel used by the client application.
        ClientDateTime:
          type: string
          description: Client date and time as reported by the client application that is making the service request.
          format: date-time
        ClientTerminalSeqNum:
          maxLength: 36
          type: string
          description: Also known as Trace Number or Sequence in some systems. Used to allow the client terminal to set a unique identifier for the transaction. When used by a Network defined transaction the value of this identifier is typically set to narrow character of 12.
        OriginatorType:
          type: integer
          description: "\"The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.\nOriginator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial\ninstitution—home banking\""
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor locatio (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
        TerminalAddr2:
          maxLength: 64
          type: string
        TerminalAddr3:
          maxLength: 64
          type: string
        TerminalAddr4:
          maxLength: 64
          type: string
        TerminalCity:
          maxLength: 32
          type: string
        TerminalCounty:
          maxLength: 32
          type: string
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State Province. ISO 3166-2:US codes.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: Postal Code is ZipCode in the US.
        TerminalCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - ISO3166Numeric
          - ISO3166Alpha3
        TerminalCountryCodeValue:
          maxLength: 80
          type: string
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifies the acquirer of the authorization or financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          maxLength: 23
          type: string
          description: Merchant Number. For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: This is the date on which the transaction will be settled. Used by ISO 8583 (DE63)
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BranchIdent:
          maxLength: 22
          type: string
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          enum:
          - Manual
          - Auto
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OverrideException:
          type: array
          description: List of the exceptions that can be overridden.
          items:
            $ref: '#/components/schemas/OverrideExceptionType'
      description: Details of the exceptions that can be manually acknowledged by the client.
    OverrideExceptionType:
      title: OverrideExceptionType
      type: object
      properties:
        SubjectRole:
          type: string
          description: Role of the subject who is overriding the exception.
        SubjectIdent:
          maxLength: 36
          type: string
          description: Subject identification value to identify the subject who is overriding the exception.
        OvrdExceptionCode:
          maxLength: 40
          type: string
          description: Override exception code to be overridden. This can be the ServerStatusCode from the Message Status section.
        OvrdElement:
          $ref: '#/components/schemas/OvrdElementType'
    OvrdElementType:
      title: OvrdElementType
      type: object
      description: Information about the elements that corresponds to the override exception code.
      allOf:
      - $ref: '#/components/schemas/SubjectElementType'
      - type: object
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    addAddressRequest_PartyAddrRelInfo_PartyRef_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Permanent identifier of a customer.
      description: Unique information to identify the party record.
    addAddressRequest_PartyAddrRelInfo_PartyRef:
      required:
      - PartyKeys
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/addAddressRequest_PartyAddrRelInfo_PartyRef_PartyKeys'
      description: |+
        Reference details of a party object that is part of the relationship with the address.

    addAddressRequest_PartyAddrRelInfo:
      type: object
      properties:
        PartyRef:
          $ref: '#/components/schemas/addAddressRequest_PartyAddrRelInfo_PartyRef'
      description: |-
        Details of the relationship between a party and an address.

        **Note:** Use this aggregate to add an alternate address of a party.

        Only one secondary/seasonal address is supported.
    addAddressRequest_AcctRef_AcctKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by a financial institution. This number is printed on the front side of the card.

            Example: 526466529

            **Note:** The CardId includes the ISO and card number. Maximum 19 digits are allowed in PAN (Primary Account Number).

        CardSeqNum:
          maxLength: 3
          type: string
          description: "Sequence number of a card that refers to the member number to whom the card is issued.\n\n**Note:** Member number is a one-digit number to identify multiple cards for different customers (for example, a wife’s card can have \"1\" and husband’s card can have \"2\" to differentiate the cards). It should be provided in request if the member number functionality is supported by the financial institution. "
      description: "Unique information to identify a card record.\n\n**Note:** To add address for a card, use AcctAddrRelInfo/AcctRef/AcctKeys/CardKeys aggregate. \n\nOnly one secondary/seasonal address is supported.\n\n"
    addAddressRequest_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** Client application should send as the account type in this field.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
          - SDB
        CardKeys:
          $ref: '#/components/schemas/addAddressRequest_AcctRef_AcctKeys_CardKeys'
      description: "Unique information to identify an account record.\n\n**Note:** To add address for an account, use AcctAddrRelInfo/AcctRef/AcctKeys aggregate. \n\nMultiple secondary/seasonal addresses are supported and only one address can be added with one service request.\n\n"
    addAddressRequest_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/addAddressRequest_AcctRef_AcctKeys'
      description: Reference information of an account object that is part of the relationship with the address.
    addAddressRequest_AcctAddrRelInfo:
      properties:
        AcctRef:
          $ref: '#/components/schemas/addAddressRequest_AcctRef'
    addAddressRequest_AddrInfo_AddrDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          type: string
          description: |+
            Unique identifier for an address line component.

            **Note:** Used to identify the content of optional information line if the AddrFormatType is "Parsed".

            Based on the selection, abbreviation appears before optional information.

            This field appears above the recipient line in the printed address.

          enum:
          - ATTN
          - INCAREOF
          - MSC
          - None
        Value:
          maxLength: 256
          type: string
          description: |-
            Value of the client-defined data item.

            **Note:** Refers to an optional information field and used if the AddrFormatType is "Parsed".
    addAddressRequest_AddrInfo_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: |+
            Standard country code format.

            **Note:** Used if AddrFormatType is "Parsed".

            The ISO3166-Alpha 2 standard is widely used and is a user-defined list table.

            EFT country codes are defined in the work with the user-defined fields.

          enum:
          - SPCountryCode
        CountryCodeValue:
          type: string
          description: |-
            Country code value as per the country code format set in the CountryCodeSource field.

            **Note:** Used if AddrFormatType is "Parsed" and contains the ISO country codes designated for each country.

            Value represents the two-letter combination of a country.

            For example: U.S. (United States), FR (France) or IN (India).

            Financial institution should ensure that user-defined fields EFT Country Code field (E10ACD) and ID Issuing Country field (CUIDCTRY1) have valid values defined in a common file.
      description: Details of the country code.
    addAddressRequest_AddrInfo_TimeFrame:
      type: object
      properties:
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Start date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** Date when the address is effective.

            Only date value is supported for this core, whereas EFX supports both date and time values.
        EndDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            End date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** Date when the address becomes inactive.

            Only date value is supported for this core, whereas EFX supports both date and time values.
      description: "Details of the time frame when the postal address is active.\n\n**Note:** The TimeFrame aggregate is used for secondary or seasonal address type to indicate if the address is permanent, temporary or annual. \n\nIf TimeFrame aggregate (StartDt and EndDt) is not provided for secondary address type in the request, then the address is a Permanent alternate address. If valid values for StartDt and EndDt are provided in the TimeFrame aggregate for secondary address type in the request, then it indicates that the address is an alternate address and will be active during the indicated period of time. \n\nFor Seasonal address type, client application should send TimeFrame aggregate (StartDt and EndDt) in the request. \n\n\n\nNot applicable for LegalTitle address.\n\n\n\n"
    addAddressRequest_AddrInfo_PostAddr:
      required:
      - AddrType
      properties:
        AddrUse:
          type: string
          description: "Usage of the address.\n\n**Note:** Type of alternate address.\n\nThis field is not needed to add secondary/seasonal address for party. \n\nValid value for safe deposit box is \"Alternate\".\n\nValid values for CDA, DDA and SDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid values for RPA, DDA accounts (formerly CAMPlus) are:\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\nTo add any of the RPAStatementAddtl values, Relationship Pricing feature should be turned on in database and account should be a relationship pricing account.\n\n\n\nValue of \"LegalTitle\" is not an address whereas refers to the name if more than one customers are related to an account. Parsed address format type does not support LegalTitle. "
          enum:
          - Alternate
          - Government
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrFormatType:
          type: string
          description: "Type of address format.\n\n**Note:** The AddrFormatType has no impact on adding address. Values \"Use Parsed address format\" determines if the financial institution is using label or parsed address format type. Cards always use parsed address format. \n\nClient application should provide address data in the applicable address fields, based on the address format type (Label or Parsed) used by the financial institution.   \n\n\n\n"
          enum:
          - Parsed
        Addr1:
          maxLength: 64
          type: string
          description: |-
            Address line 1.

            **Note:** If AddrFormatType is "Parsed" and client application uses the standardized address format. This field refers to HouseNum and Street. Client application should consolidate the HouseNum and Street in Addr1 as indicated in the format below and send it in the request.

            Format: HouseNum followed by a space followed by Street.

            Example: 123 Main drive.
        Addr2:
          maxLength: 64
          type: string
          description: |-
            Address line 2. To enter Addr2, Addr1 field must be provided.

            **Note:** If client application is using the standardized address format and "Parsed" AddrFormatType, this field refers to ApartmentNumType and ApartmentNum. Client application should consolidate the ApartmentNumType and ApartmentNum in Addr2 as indicated in the format below and send it in the request.

            Format: ApartmentNumType followed by a space then followed by ApartmentNum.

            Example: STE 600.
        ApartmentNum:
          maxLength: 15
          type: string
          description: |-
            Number assigned to the apartment in the address record.

            **Note:** Used if AddrFormatType is "Parsed" and client application is not using standardized address format.

            Maximum 15 characters are supported.

            Minimum one element of parsed address is required if the AddrFormatType is "Parsed".
        ApartmentNumType:
          type: string
          description: |-
            Type of apartment number.

            **Note:** Used if AddrFormatType is "Parsed" and client application is not using standardized address format.

            Minimum one element of parsed address is required if the AddrFormatType is "Parsed".

            Identifies the content of ApartmentNum and appears before ApartmentNum in the printed address.
          enum:
          - APT
          - BLDG
          - DEPT
          - FL
          - HNGR
          - KEY
          - LOT
          - OFC
          - PH
          - PIER
          - RM
          - SLIP
          - SPC
          - STOP
          - STE
          - TRLR
          - UNIT
        HouseNum:
          maxLength: 15
          type: string
          description: |-
            Number assigned to the house in the address record.

            **Note:** Used if AddrFormatType is "Parsed" and client application is not using standardized address format.

            Maximum 10 characters are supported.

            Minimum one element of parsed address is required if the AddrFormatType is "Parsed".
        Street:
          maxLength: 64
          type: string
          description: |-
            Name of the street in the address record.

            **Note:** Used if AddrFormatType is "Parsed" and client application is not using standardized address format.

            Minimum one element of parsed address is required if the AddrFormatType is "Parsed".

            Client application should send value in either POBox or Street field.
        AddrDefinedData:
          type: array
          description: Additional data related to an address.
          items:
            $ref: '#/components/schemas/addAddressRequest_AddrInfo_AddrDefinedData'
        City:
          maxLength: 32
          type: string
          description: |-
            Name of the city.

            **Note:** Used if AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if the AddrFormatType is "Parsed".

            Postal town is the city for parsed account addresses.

            Maximum 24 characters are supported.
        County:
          maxLength: 32
          type: string
          description: |-
            Name of the county.

            **Note:** Used if AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if the AddrFormatType is "Parsed".

            Maximum 24 characters are supported.
        District:
          maxLength: 32
          type: string
          description: |-
            Name of the district in the address record.

            **Note:** Used if AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if the AddrFormatType is "Parsed".

            Maximum 24 characters are supported.
        StateProv:
          type: string
          description: |-
            State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.

            **Note:** Used if AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if the AddrFormatType is "Parsed".

            Maximum two characters are supported.
        MilitaryRegion:
          type: string
          description: "Name of the military region associated with the address.\n\n**Note:** Used if AddrFormatType is \"Parsed\".\n\nFor a Military address, this field should be used instead of the State or City. "
          enum:
          - APO AA
          - APO AE
          - APO AP
          - FPO AA
          - FPO AE
          - FPO AP
        PostalCode:
          maxLength: 11
          type: string
          description: |-
            Postal code or Zip code.

            **Note:** Only applicable if AddrFormatType is Parsed or Label.

            For U.S. address, this field refers to a Zip code. Format of the Zip code is (five-digit code)-(four digit additional code). The four-digit additional code is optional. It can be represented as "0000" and used to determine a more specific location within a given Zip code.

            Example: XXXX-XXXX or XXXX-0000.

            For a non-U.S. address, this field refers to the post code, if applicable.

            All formats other than the format specified above can represent a non-U.S. post code.

            If PostalCode is provided as XXXXX and no CountryCode is indicated, the value is considered as a U.S. Zip code.

            Maximum 10 characters are supported.
        CountryCode:
          $ref: '#/components/schemas/addAddressRequest_AddrInfo_CountryCode'
        POBox:
          maxLength: 16
          type: string
          description: |-
            Number of the PO box associated with the address.

            **Note:** Used if AddrFormatType is "Parsed".

            Client application should send a value in either PO box or Street field.

            Output of the post office box address are displayed as PO BOX NNNNNN in the printed address.
        AddrType:
          type: string
          description: |-
            Type of address.

            **Note:** The secondary and seasonal AddrType are supported for both Label and Parsed AddrFormatType.

            If AddrType is secondary and no TimeFrame (StartDt and EndDt) is provided, then the address is considered as a permanent alternate address.

            If AddrType is secondary and TimeFrame (StartDt and EndDt) is provided, then the address is considered as a temporary alternate address that is active during the indicated time period.

            If AddrType is seasonal, then TimeFrame (StartDt and EndDt) should be provided in request and the address is considered to be annual alternate address that is active during the indicated time period for every year.
          enum:
          - Secondary
          - Seasonal
        TimeFrame:
          $ref: '#/components/schemas/addAddressRequest_AddrInfo_TimeFrame'
        Retention:
          type: boolean
          description: |-
            Flag to indicate if the address should be retained after its time frame.

            **Note:** Code to indicate if the secondary address is to be deleted when the date specified in EndDt field is reached.

            Should be set to "false" if the AddrType is "Secondary" and the TimeFrame (StartDt and EndDt) is provided in the request as the address is considered to be a permanent alternate address.

            Should be set to "false" if the AddrType is "Seasonal".

            Not applicable for LegalTitle address.

            If no value is provided in request, by default, value is set to "true".
        RevertToPartyAddr:
          type: boolean
          description: "Flag to indicate if the address is to be reverted to a party name and the address for an alternate address of the account.\n\n**Note:** Only valid if the value of AddressIdent is \"Alternate\" for an account.\n\nClient application should not send this field as \"true\" if AddrType is seasonal or secondary and TimeFrame (StartDt and EndDt) is not provided in the request. "
        FullName1:
          maxLength: 96
          type: string
          description: |-
            Full name in line 1.

            **Note:** *Conditionally Required field*

            Full name that appears in the address.

            Should be provided if AddrFormatType is "Label".
        Addr3:
          maxLength: 64
          type: string
          description: |-
            Address line 3. To enter Addr3, Addr2 field must be provided.

            **Note:** Third line of address if AddrFormatType is "Label".

            Should be provided if Addr4 is sent in request.

            Maximum 40 characters are supported.
        Addr4:
          maxLength: 64
          type: string
          description: |-
            Address line 4. To enter Addr4, Addr3 field must be provided.

            **Note:** Fourth line of address if AddrFormatType is "Label".

            Should be provided if Addr5 is sent in request.

            Maximum 40 characters are supported.
        Addr5:
          maxLength: 64
          type: string
          description: |-
            Address line 5. To enter Addr5, Addr4 field must be provided.

            **Note:** Fifth line of address if AddrFormatType is "Label".

            Should be provided if Addr6 is sent in request.

            Maximum 40 characters are supported.
    addAddressRequest_AddrInfo:
      required:
      - PostAddr
      type: object
      properties:
        PostAddr:
          type: array
          description: Postal address details of a party.
          items:
            $ref: '#/components/schemas/addAddressRequest_AddrInfo_PostAddr'
        UpdateContactCode:
          type: string
          description: |-
            Flag to indicate if card, party or account contact dates should be updated.

            **Note:** Update customer contact flag.

            To add alternate address in parsed format, the system supports option to update last contact date with the current system date for a party.

            If "Party" value is sent in this field, the last contact date of a party is updated.

            If "None" value is sent in this field, the last contact date of a party is not updated.

            If no value is sent in this field, the last contact date of a party is updated.
          enum:
          - Party
          - None
      description: Address details of a party.
    addAddressResponse_AddrStatusRec_AddrKeys_AcctKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by the financial institution. This number is printed on the front side of the card.

            Example: 526466529

            **Note:** The CardId includes the ISO and card number. Maximum 19 digits are allowed in PAN (Primary Account Number).

        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of a card that refers to the member number to whom the card is issued.

            **Note:** Only applicable if the member number functionality is supported by the financial institution.
      description: Unique information to identify a card record.
    addAddressResponse_AddrStatusRec_AddrKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
        CardKeys:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec_AddrKeys_AcctKeys_CardKeys'
      description: Unique information to identify the account record.
    addAddressResponse_AddrStatusRec_AddrKeys:
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/addAddressRequest_PartyAddrRelInfo_PartyRef_PartyKeys'
        AcctKeys:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec_AddrKeys_AcctKeys'
        AddressIdent:
          type: string
          description: "Unique identifier of an address record.\n\n**Note:** Alternate address type. \n\n\n\nValid value for card and safe deposit box is: \n\n- Alternate\n\n\n\nValid values for DDA, SDA, and CDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid additional statement values for RPA and DDA accounts (formerly CAMPlus):\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddtl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nNot applicable for party. \n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          enum:
          - Alternate
          - Government
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrType:
          type: string
          description: Type of address.
          enum:
          - Secondary
          - Seasonal
      description: Unique information to identify the address record.
    addAddressResponse_AddrStatusRec_AddrStatus:
      required:
      - AddrStatusCode
      type: object
      properties:
        AddrStatusCode:
          type: string
          description: Status code of the address.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time when the address status is changed.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-12-31T23:59:59.999
      description: Current status of the address
    addAddressResponse_AddrStatusRec:
      required:
      - AddrKeys
      - AddrStatus
      type: object
      properties:
        AddrKeys:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec_AddrKeys'
        AddrStatus:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec_AddrStatus'
      description: Response message of the address add, del, modify or delete API call.
    deleteAddrByPutRequest_AddrKeys_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Permanent identifier of a customer.
      description: "Unique information to identify the party record.\n\n**Note:** To delete an alternate address for a Party (Customer), use PartyKeys aggregate. \n\nOnly one secondary/seasonal address for a party is supported. \n\nPrimary address cannot be deleted.\n\n\n\n\n\n"
    deleteAddrByPutRequest_AddrKeys_AcctKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by the financial institution. This number is printed on the front side of the card.

            Example: 526466529

            **Note:** The CardId includes the ISO and card number. Maximum 19 digits are allowed in PAN (Primary Account Number).

        CardSeqNum:
          maxLength: 3
          type: string
          description: "Sequence number of a card that refers to the member number to whom the card is issued.\n\n**Note:** Member number is a one-digit number to identify multiple cards for different customers (for example, a wife’s card can have \"1\" and husband’s card can have \"2\" to differentiate the cards). It should be provided in request if member number functionality is supported by the financial institution. "
      description: |-
        Unique information to identify a card record.

        **Note:** To delete the address for a card, use CardKeys aggregate.

        Only one secondary/seasonal address for a card is supported.
    deleteAddrByPutRequest_AddrKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** It is required for an AcctType to identify the account.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
          - SDB
        CardKeys:
          $ref: '#/components/schemas/deleteAddrByPutRequest_AddrKeys_AcctKeys_CardKeys'
      description: |+
        Unique information to identify the account record.

        **Note:** To delete the address for an account, use AcctKeys aggregate.

        Multiple secondary/seasonal addresses for an account is supported but only one address can be deleted with one service request.





    deleteAddrByPutRequest_AddrKeys:
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/deleteAddrByPutRequest_AddrKeys_PartyKeys'
        AcctKeys:
          $ref: '#/components/schemas/deleteAddrByPutRequest_AddrKeys_AcctKeys'
        AddressIdent:
          type: string
          description: "Unique identifier of an address record.\n\n**Note:** Alternate address type. \n\n\n\nValid value for card and safe deposit box is: \n\n- Alternate\n\n\n\nValid values for DDA, SDA, and CDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid additional statement values for RPA and DDA accounts (formerly CAMPlus):\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddtl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nNot applicable for a party. \n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrType:
          type: string
          description: |+
            Type of address.

            **Note:** To delete an address, AddrType can either be secondary or seasonal.

          enum:
          - Secondary
          - Seasonal
      description: |-
        Unique information to identify the address record.

        **Note:** Minimum one address keys out of account, party or card should be provided.
    deleteAddrByPutResponse_AddrStatusRec_AddrKeys_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Permanent identifier of a customer.
      description: Unique information to identify a party record.
    deleteAddrByPutResponse_AddrStatusRec_AddrKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
        CardKeys:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec_AddrKeys_AcctKeys_CardKeys'
      description: Unique information to identify an address record.
    deleteAddrByPutResponse_AddrStatusRec_AddrKeys:
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/deleteAddrByPutResponse_AddrStatusRec_AddrKeys_PartyKeys'
        AcctKeys:
          $ref: '#/components/schemas/deleteAddrByPutResponse_AddrStatusRec_AddrKeys_AcctKeys'
        AddressIdent:
          type: string
          description: "Unique identifier of an address record.\n\n**Note:** Alternate address type. \n\n\n\nValid value for card and safe deposit box is: \n\n- Alternate\n\n\n\nValid values for DDA, SDA, and CDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid additional statement values for RPA and DDA accounts (formerly CAMPlus):\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddtl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nNot applicable for a party. \n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrType:
          type: string
          description: |+
            Type of address.

            **Note:** To delete an address, AddrType can either be secondary or seasonal.

          enum:
          - Secondary
          - Seasonal
      description: Unique information to identify an address record.
    deleteAddrByPutResponse_AddrStatusRec_AddrStatus:
      required:
      - AddrStatusCode
      type: object
      properties:
        AddrStatusCode:
          type: string
          description: Status code of an address.
          enum:
          - Deleted
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time when an address status is changed.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-12-31T23:59:59.999
      description: Current status of an address.
    deleteAddrByPutResponse_AddrStatusRec:
      required:
      - AddrKeys
      - AddrStatus
      type: object
      properties:
        AddrKeys:
          $ref: '#/components/schemas/deleteAddrByPutResponse_AddrStatusRec_AddrKeys'
        AddrStatus:
          $ref: '#/components/schemas/deleteAddrByPutResponse_AddrStatusRec_AddrStatus'
      description: Response message of the address add, del, modify or delete API call.
    getAddrByPostRequest_AddrSel_AcctKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by the financial institution. This number is printed on the front side of the card.

            Example: 526466529

            **Note:** The CardId includes the ISO and the card number. Maximum 19 digits are allowed in PAN (Primary Account Number).

        CardSeqNum:
          maxLength: 3
          type: string
          description: "Sequence number of a card that refers to the member number to whom the card is issued.\n\n**Note:** Member number is a one-digit number to identify multiple cards for different customers (for example, a wife’s card can have \"1\" and husband’s card can have \"2\" to differentiate the cards). It should be provided in request if the member number functionality is supported by the financial institution. "
      description: |-
        Unique information to identify a card record.

        **Note:** To get the address of a card, use AddrSel/AcctKeys/CardKeys aggregate. Only one secondary/seasonal address for a card account is supported.
    getAddrByPostRequest_AddrSel_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** Client application should send the account type in this field.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
          - SDB
        CardKeys:
          $ref: '#/components/schemas/getAddrByPostRequest_AddrSel_AcctKeys_CardKeys'
      description: "Unique information to identify the account record.\n\n**Note:** To get address for an account, use AddrSel/AcctKeys aggregate. \n\nBoth AcctId and AcctType should be provided in the request.\n\nMultiple secondary/seasonal addresses are supported for an account.\n\nIf AddressIdent is not provided in the request, all the secondary/seasonal addresses of an account are returned.\n\n\n\n"
    getAddrByPostRequest_AddrSel_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Permanent identifier of customer.

            Customer cannot modify this key.
      description: "Unique information to identify the party record.\n\n**Note:** To get an address for a party (customer), use AddrSel/PartyKeys aggregate. PartyId should be provided in the request.\n\nOnly one primary and secondary/seasonal address for a party is supported. \n\nIf AddrType is not provided in request, both primary and secondary/seasonal address, if applicable, are returned in the response.\n\n\n\n"
    getAddrByPostRequest_AddrSel:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/getAddrByPostRequest_AddrSel_AcctKeys'
        AddressIdent:
          type: string
          description: "Unique identifier of an address record.\n\n**Note:** Alternate address type. \n\n\n\nValid value for card and safe deposit box is: \n\n- Alternate\n\n\n\nValid values for DDA, SDA, and CDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid additional statement values for RPA and DDA accounts (formerly CAMPlus):\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddtl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nNot applicable for a party. \n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrType:
          type: string
          description: Type of address.
          enum:
          - Secondary
          - Seasonal
        PartyKeys:
          $ref: '#/components/schemas/getAddrByPostRequest_AddrSel_PartyKeys'
      description: "Details of the selection criteria used to identify the address associated with an account.\n\n**Note:** The AddrInq service for Label address format returns secondary/seasonal address for accounts in the response. \n\nThis user guide is only for accounts if the financial institution uses \"Label\" value for AddrFormatType.\n\n\n\n\n\n"
    getAddrByPostResponse_RecCtrlOut:
      required:
      - SentRecCount
      type: object
      properties:
        SentRecCount:
          type: integer
          description: Total number of records that matched the selection criteria and returned in the response message.
          format: int64
      description: Information retrieved for the criteria specified in the RecCtrlIn aggregate of a request message.
    getAddrByPostResponse_AddrKeys_AcctKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by the financial institution. This number is printed on the front side of the card.

            Example: 526466529

            **Note:** The CardId includes the ISO and card number. Maximum 19 digits are allowed in PAN (Primary Account Number).

        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of a card that refers to the member number to whom the card is issued.

            **Note:** Only applicable if the member number functionality is supported by the  financial institution.
      description: Unique information to identify a card record.
    getAddrByPostResponse_AddrKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
          - SDB
        CardKeys:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrKeys_AcctKeys_CardKeys'
      description: Unique information to identify an account record.
    getAddrByPostResponse_AddrKeys_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Permanent identifier of customer.
      description: Unique information to identify the party record.
    getAddrByPostResponse_AddrKeys:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrKeys_AcctKeys'
        AddressIdent:
          type: string
          description: "Unique identifier of an address record.\n\n**Note:** Alternate address type. \n\n\n\nValid value for card and safe deposit box is: \n\n- Alternate\n\n\n\nValid values for DDA, SDA, and CDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid additional statement values for RPA and DDA accounts (formerly CAMPlus):\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddtl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nNot applicable for a party. \n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrType:
          type: string
          description: Type of address.
          enum:
          - Secondary
          - Seasonal
        PartyKeys:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrKeys_PartyKeys'
      description: Unique information to identify an address record.
    getAddrByPostResponse_AddrInfo_TimeFrame:
      type: object
      properties:
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Start date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** Date when the address is effective.

            Only date value is supported for this core, whereas EFX supports both date and time values.
        EndDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            End date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** Date when the address becomes inactive.

            Only date value is supported for this core, whereas EFX supports both date and time values.
      description: |-
        Details of the time frame when the postal address is active.

        **Note:** Only applicable to secondary or seasonal address.
    getAddrByPostResponse_AddrInfo_LabelAddr:
      type: object
      properties:
        Addr1:
          maxLength: 64
          type: string
          description: |-
            Address line 1.

            **Note:** Only applicable for card account.

            Maximum 33 characters are supported.
        Addr2:
          maxLength: 64
          type: string
          description: |-
            Address line 2. To enter Addr2, Addr1 field must be provided.

            **Note:** Only applicable for card account.

            Maximum 33 characters are supported.
        Addr3:
          maxLength: 64
          type: string
          description: |-
            Address line 3. To enter Addr3, Addr2 field must be provided.

            **Note:** Only applicable for card account.

            Maximum 21 characters are supported.
        Addr4:
          maxLength: 64
          type: string
          description: |-
            Address line 4. To enter Addr4, Addr3 field must be provided.

            **Note:** Used if AddrFormatType is "Parsed".
        Addr5:
          maxLength: 64
          type: string
          description: |-
            Address line 5. To enter Addr5, Addr4 field must be provided.

            **Note:** Used if AddrFormatType is "Parsed".
      description: |+
        Details of the address in label format.

        **Note:** Used to display the address in RCM format for card accounts (label address view).

    getAddrByPostResponse_AddrInfo_AddrDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          type: string
          description: |+
            Unique identifier for address line component.

            **Note:** Used to identify the content of optional information line if AddrFormatType is "Parsed".

            Based on the selection, abbreviation appears before optional information.

            This field appears above the recipient line in printed address.

          enum:
          - ATTN
          - IN CARE OF
          - MSC
          - None
        Value:
          maxLength: 256
          type: string
          description: |-
            Value of the client-defined data item.

            **Note:** Optional information field used if AddrFormatType is "Parsed".

            This field will replace HouseNum.
    getAddrByPostResponse_AddrInfo_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: "Standard country code format.\n\n**Note:** Used if AddrFormatType is \"Parsed\".\n\nThis field has the free form text for Country. "
          enum:
          - SPCountryCode
        CountryCodeValue:
          type: string
          description: |-
            Country code value as per the country code format set in the CountryCodeSource field.

            **Note:** Used if AddrFormatType is "Parsed" and contains the ISO country codes designated for each country.

            Value represents the two-letter combination of a country.

            For example: US (United States), FR (France) or IN (India).

            Financial institution should ensure that user-defined fields EFT Country Code field (E10ACD) and ID Issuing Country field (CUIDCTRY1) have valid values defined in common file.
      description: Details of the country code.
    getAddrByPostResponse_AddrInfo_PostAddr:
      required:
      - AddrType
      properties:
        AddrUse:
          type: string
          description: "Use of the address.\n\n**Note:** Type of alternate address.\n\nThis field is not needed to add secondary/seasonal address for party. \n\n\n\nValid value for safe deposit box is 'Alternate'.\n\n\n\nValid values for CDA, DDA and SDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid values for RPA, DDA accounts (formerly CAMPlus) are:\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)"
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrUseEnumDesc:
          maxLength: 80
          type: string
          description: Description of the enumeration in AddrUse field.
        AddrFormatType:
          type: string
          description: |-
            Type of address format.

            **Note:** Value of AddrFormatType for account and party and for secondary/seasonal address type is either Label or Parsed depending on the common file setup of financial institution.

            Cards and primary address for party use "Parsed" value.
          enum:
          - Label
        FullName1:
          maxLength: 96
          type: string
          description: |-
            Full name in line 1.

            **Note:** Full name should appear in the address.
        Addr1:
          maxLength: 64
          type: string
          description: |-
            Address line 1.

            **Note:** First line of the address if AddrFormatType is "Label".
        Addr2:
          maxLength: 64
          type: string
          description: |-
            Address line 2. To enter Addr2, Addr1 field must be provided.

            **Note:** Second line of the address if AddrFormatType is "Label".
        Addr3:
          maxLength: 64
          type: string
          description: |-
            Address line 3. To enter Addr3, Addr2 field must be provided.

            **Note:** Third line of the address if AddrFormatType is "Label".
        Addr4:
          maxLength: 64
          type: string
          description: |-
            Address line 4. To enter Addr4, Addr3 field must be provided.

            **Note:** Fourth line of address if AddrFormatType is "Label".
        Addr5:
          maxLength: 64
          type: string
          description: |-
            Address line 5. To enter Addr5, Addr4 field must be provided.

            **Note:** Fifth line of the address if AddrFormatType is "Label".
        PostalCode:
          maxLength: 11
          type: string
          description: |-
            Postal code or Zip code.

            **Note:** Only applicable if the AddrFormatType is Parsed or Label.

            For U.S. address, this field refers to a Zip code. Format of Zip code is (five digits code)-(four digit additional code). The four-digit additional code is optional. It can be represented as "0000" and used to determine a more specific location within a given Zip code.

            Example: XXXX-XXXX or XXXX-0000.

            For a non-U.S. address, this field refers to a, post code if applicable.

            All formats other than the format specified above can represent non-U.S. post code.

            If PostalCode is provided as XXXXX and no CountryCode is indicated, the value is considered as U.S. Zip code.

            Maximum 10 characters are supported.
        AddrType:
          type: string
          description: |-
            Type of address.

            **Note:** The secondary and seasonal AddrType are supported for both Label and Parsed AddrFormatType.

            If AddrType is secondary and no TimeFrame (StartDt and EndDt) is provided, then the address is considered as the permanent alternate address.

            If AddrType is secondary and TimeFrame (StartDt and EndDt) are provided, then the address is considered as a temporary alternate address that is active during the indicated time period.

            If AddrType is seasonal, then the TimeFrame (StartDt and EndDt) should be provided in request and the address is considered to be annual alternate address that is active during the indicated time period for every year.
          enum:
          - Secondary
          - Seasonal
        TimeFrame:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrInfo_TimeFrame'
        Retention:
          type: boolean
          description: |-
            Flag to indicate if the address should be retained after its time frame.

            **Note:** Code to indicate if the secondary address is to be deleted when the date specified in EndDt field is reached.
        RevertToPartyAddr:
          type: boolean
          description: |-
            Flag to indicate if the address is to be reverted to party name and the address for an alternate address of the account.

            **Note:** Only valid if the value of AddressIdent is "Alternate" for an account.
        FullName2:
          maxLength: 96
          type: string
          description: |-
            Full name in line 2.

            **Note:** Only applicable for card account.

            Refers to embossing name-2.

            Maximum 26 characters are supported.
        ApartmentNum:
          maxLength: 15
          type: string
          description: |-
            Number assigned to the apartment in the address record.

            **Note:** Used if AddrFormatType is "Parsed" and client application does not use standardized address format.
        ApartmentNumType:
          type: string
          description: |-
            Type of apartment number.

            **Note:** Used if AddrFormatType is "Parsed" and client application does not use standardized address format.

            Identifies the contents of ApartmentNum field and appears before the apartment number in the printed address.
          enum:
          - APT
          - BLDG
          - DEPT
          - FL
          - HNGR
          - KEY
          - LOT
          - OFC
          - PH
          - PIER
          - RM
          - SLIP
          - SPC
          - STOP
          - STE
          - TRLR
          - UNIT
        HouseNum:
          maxLength: 15
          type: string
          description: |-
            Number assigned to the house in the address record.

            **Note:** Used if AddrFormatType is "Parsed" and client application is not using standardized address format.
        Street:
          maxLength: 64
          type: string
          description: |-
            Name of the street in the address record.

            **Note:** Used if AddrFormatType is "Parsed" and client application is not using standardized address format.
        MilitaryRegion:
          type: string
          description: "Name of the military region associated with the address.\n\n**Note:** Used if AddrFormatType is \"Parsed\".\n\nFor a Military address, this field should be used instead of the State or City. "
          enum:
          - APO AA
          - APO AE
          - APO AP
          - FPO AA
          - FPO AE
          - FPO AP
        LabelAddr:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrInfo_LabelAddr'
        AddrDefinedData:
          type: array
          description: Additional data related to an address.
          items:
            $ref: '#/components/schemas/getAddrByPostResponse_AddrInfo_AddrDefinedData'
        City:
          maxLength: 32
          type: string
          description: |-
            Name of the city.

            **Note:** Used if AddrFormatType is "Parsed".
        County:
          maxLength: 32
          type: string
          description: |-
            Name of the county associated with the address.

            **Note:** Used if AddrFormatType is "Parsed".
        District:
          maxLength: 32
          type: string
          description: |-
            Name of the district in address record.

            **Note:** Used if AddrFormatType is "Parsed".
        StateProv:
          type: string
          description: |-
            State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.

            **Note:** Used if AddrFormatType is "Parsed".
        Country:
          maxLength: 64
          type: string
          description: "Name of the country associated with the address record.\n\n**Note:** Used if AddrFormatType is \"Parsed\".\n\nThis field has the free form text for Country. "
        CountryCode:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrInfo_CountryCode'
        POBox:
          maxLength: 16
          type: string
          description: |-
            Number of the PO box associated with the address.

            **Note:** Used if AddrFormatType is "Parsed".

            Client application should send a value in either POBox or Street field.

            Output of post office box address are displayed as PO BOX NNNNNN in the printed address.
        ForeignFlag:
          type: boolean
          description: Flag to indicate whether the given address is foreign address
        MoveInDt:
          type: string
          description: "Date of current address.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Only applicable if AddrType is 'Primary'."
          format: date
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** Only applicable if AddrType is 'Primary'.

            User-defined value to identify if the mail is sent to the customer.
    getAddrByPostResponse_AddrInfo:
      required:
      - PostAddr
      type: object
      properties:
        PostAddr:
          type: array
          description: Postal address details of a party.
          items:
            $ref: '#/components/schemas/getAddrByPostResponse_AddrInfo_PostAddr'
      description: |+
        Address details of a party.

        **Note:** If AddrFormatType is "Label", secondary/seasonal address can contain up to six lines of 40 characters each.

    getAddrByPostResponse_AddrStatus:
      required:
      - AddrStatusCode
      type: object
      properties:
        AddrStatusCode:
          type: string
          description: Status code of the address.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time when the address status is changed.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-12-31T23:59:59.999
      description: Current status of the address.
    getAddrByPostResponse_AddrRec:
      required:
      - AddrInfo
      - AddrKeys
      - AddrStatus
      properties:
        AddrKeys:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrKeys'
        AddrInfo:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrInfo'
        AddrStatus:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrStatus'
    modifyAddrRequest_AddrKeys_AcctKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by the financial institution. This number is printed on the front side of the card.

            Example: 526466529

            **Note:** The CardId includes the ISO and card number. Maximum 19 digits are allowed in PAN (Primary Account Number).

        CardSeqNum:
          maxLength: 3
          type: string
          description: "Sequence number of a card that refers to the member number to whom the card is issued.\n\n**Note:** Member number is a one-digit number to identify multiple cards for different customers (for example, a wife’s card can have a '1' and husband’s card can have '2' to differentiate the cards). Should be provided in request if, member number functionality is supported by financial institution. "
      description: "Unique information to identify a card record.\n\n**Note:** To modify an address for a Card, use AddrKeys/AcctKeys/CardKeys aggregate. Only one secondary/seasonal address for a Card is supported. \n\n"
    modifyAddrRequest_AddrKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** Client application should send account type in this field.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
          - SDB
        CardKeys:
          $ref: '#/components/schemas/modifyAddrRequest_AddrKeys_AcctKeys_CardKeys'
      description: "Unique information to identify the account record.\n\n**Note:** To modify address for an account, use AddrKeys/AcctKeys aggregate. \n\nAcctId, AcctType and AddressIdent should be provided in the request.\n\nMultiple secondary/seasonal addresses are supported for an account but, only one address can be modified with one service request.\n\n\n\n"
    modifyAddrRequest_AddrKeys_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Permanent identifier of customer.

            Customer cannot modify this key.
      description: "Unique information to identify the party record.\n\n**Note:** To modify the address for a party (customer), use AddrKeys/PartyKeys aggregate. \n\nOnly one primary and secondary/seasonal address for a party is supported. \n\n\n\n"
    modifyAddrRequest_AddrKeys:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/modifyAddrRequest_AddrKeys_AcctKeys'
        AddressIdent:
          type: string
          description: "Unique identifier of an address record.\n\n**Note:** Alternate address type. \n\n\n\nValid value for card and safe deposit box is: \n\n- Alternate\n\n\n\nValid values for DDA, SDA, and CDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid additional statement values for RPA and DDA accounts (formerly CAMPlus):\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddtl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nNot applicable for party. \n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrType:
          type: string
          description: Type of address.
          enum:
          - Secondary
          - Seasonal
        PartyKeys:
          $ref: '#/components/schemas/modifyAddrRequest_AddrKeys_PartyKeys'
      description: Unique information to identify the address record.
    modifyAddrRequest_AddrInfo_TimeFrame:
      type: object
      properties:
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Start date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** Date when address is effective.

            Only date value is supported for this core, whereas EFX supports both date and time values.
        EndDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            End date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** Date when address becomes inactive.

            Only date value is supported for this core, whereas EFX supports both date and time values.
      description: "Details of the time frame when the postal address is active.\n\n**Note:** The TimeFrame aggregate is used for secondary or seasonal address type to indicate if address is permanent, temporary or annual. \n\nIf TimeFrame aggregate (StartDt and EndDt) is not provided for secondary address type in the request, then the address is a Permanent alternate address. If valid values for StartDt and EndDt are provided in the TimeFrame aggregate for Secondary address type in the request, then it indicates that address is an alternate address and will be active during the indicated period of time. \n\nFor Seasonal address type, client application should send TimeFrame aggregate (StartDt and EndDt) in the request. \n\n\n\nNot applicable for LegalTitle address.\n\n\n\n"
    modifyAddrRequest_AddrInfo_AddrDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          type: string
          description: |+
            Unique identifier for an address line component.

            **Note:** Used to identify the content of optional information line if AddrFormatType is "Parsed".

            Based on the selection, abbreviation appears before optional information.

            This field appears above the recipient line in printed address.

          enum:
          - ATTN
          - IN CARE OF
          - MSC
          - None
        Value:
          maxLength: 256
          type: string
          description: |+
            Value of the client-defined data item.

            **Note:** Optional information field, used if AddrFormatType is "Parsed".

    modifyAddrRequest_AddrInfo_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: |+
            Standard country code format.

            **Note:** Used if AddrFormatType is "Parsed".

            The  ISO3166-Alpha 2 standard is widely used and is a user defined list table.

            EFT country codes are defined and work with the user-defined fields.

          enum:
          - SPCountryCode
        CountryCodeValue:
          type: string
          description: |-
            Country code value as per the country code format set in the CountryCodeSource field.

            **Note:** Used if AddrFormatType is "Parsed" and contains the ISO country codes designated for each country.

            Value represents the two-letter combination of a country.

            For example: US (United States), FR (France) or IN (India).

            Financial institution should ensure that user-defined fields EFT Country Code field (E10ACD) and ID Issuing Country field (CUIDCTRY1) have valid values defined in common file.
      description: Details of the country code.
    modifyAddrRequest_AddrInfo_PostAddr:
      required:
      - AddrType
      properties:
        AddrFormatType:
          type: string
          description: "Type of address format.\n\n**Note:** The AddrFormatType has no impact on adding address. Values 'Use Parsed address format' determines if the financial institution is using Label or Parsed address format type. Cards always use Parsed address format. \n\n\n\nClient application should provide address data in applicable address fields, based on the address format type (Label or Parsed) used by the financial institution.   \n\n\n\n"
          enum:
          - Label
        FullName1:
          maxLength: 96
          type: string
          description: |-
            Full name in line 1.

            **Note:** Full name displayed in address.

            Maximum 40 characters are supported.
        Addr1:
          maxLength: 64
          type: string
          description: |-
            Address line 1.

            **Note:** First line of address if AddrFormatType is "Label".

            Maximum 40 characters are supported.
        Addr2:
          maxLength: 64
          type: string
          description: |-
            Address line 2. To enter Addr2, Addr1 field must be provided.

            **Note:** Second line of address if AddrFormatType is "Label".

            Maximum 40 characters are supported.
        Addr3:
          maxLength: 64
          type: string
          description: |-
            Address line 3. To enter Addr3, Addr2 field must be provided.

            **Note:** Third line of address if AddrFormatType is "Label".

            Maximum 40 characters are supported.
        Addr4:
          maxLength: 64
          type: string
          description: |-
            Address line 4. To enter Addr4, Addr3 field must be provided.

            **Note:** Fourth line of address if AddrFormatType is "Label".

            Maximum 40 characters are supported.
        Addr5:
          maxLength: 64
          type: string
          description: |-
            Address line 5. To enter Addr5, Addr4 field must be provided.

            **Note:** Fifth line of address if AddrFormatType is "Label".

            Maximum 40 characters are supported.
        AddrType:
          type: string
          description: |-
            Type of address.

            **Note:** The secondary and seasonal AddrType is supported for both Label and Parsed AddrFormatType.

            If AddrType is secondary, and no TimeFrame (StartDt and EndDt) is provided, then address is considered as permanent alternate address.

            If AddrType is secondary, and TimeFrame (StartDt and EndDt) is provided, then address is considered as temporary alternate address that is active during indicated time period.

            If AddrType is seasonal, then TimeFrame (StartDt and EndDt) should be provided in request and address is considered to be annual alternate address that is active during indicated time period for every year.
          enum:
          - Secondary
          - Seasonal
        TimeFrame:
          $ref: '#/components/schemas/modifyAddrRequest_AddrInfo_TimeFrame'
        Retention:
          type: boolean
          description: |-
            Flag to indicate if the address should be retained after its time frame.

            **Note:** Code to indicate if the secondary address is to be deleted when the date specified in EndDt field is reached.

            Should be set to 'false' if the AddrType is 'Secondary' and the TimeFrame (StartDt and EndDt) is provided in the request as the address is considered to be permanent alternate address.

            Should be set to 'false' if the AddrType is 'Seasonal'.

            Not applicable for LegalTitle address.

            If no value is provided in request, by default, value is set to 'true'.
        RevertToPartyAddr:
          type: boolean
          description: "Flag to indicate if the address is to be reverted to a party name and the address for an alternate address of the account.\n\n**Note:** Only valid if value of AddressIdent is 'Alternate' for an account.\n\nClient application should not send this field as 'true' if AddrType is seasonal or secondary and TimeFrame (StartDt and EndDt) is not provided in the request. "
        ApartmentNum:
          maxLength: 15
          type: string
          description: |-
            Number assigned to the apartment in the address record.

            **Note:** Used only if client application is not using the standardized address format and AddrFormatType is "Parsed".

            Maximum 15 characters are supported.

            Minimum one element of parsed address is required if AddrFormatType is "Parsed".
        ApartmentNumType:
          type: string
          description: |-
            Type of apartment number.

            **Note:** Used only if client application is not using the standardized address format and AddrFormatType is "Parsed".

            Identifies the content of ApartmentNum and displayed before ApartmentNum in printed address.
          enum:
          - APT
          - BLDG
          - DEPT
          - FL
          - HNGR
          - KEY
          - LOT
          - OFC
          - PH
          - PIER
          - RM
          - SLIP
          - SPC
          - STOP
          - STE
          - TRLR
          - UNIT
        HouseNum:
          maxLength: 15
          type: string
          description: |-
            Number assigned to the house in the address record.

            **Note:** Used only if client application is not using the standardized address format and AddrFormatType is "Parsed".

            Maximum 10 characters are supported.

            Minimum one element of parsed address is required if AddrFormatType is "Parsed".
        Street:
          maxLength: 64
          type: string
          description: |-
            Name of the street in the address record.

            **Note:** Used only if client application is not using the standardized address format and AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if AddrFormatType is "Parsed".

            Client application should send a value in either POBox or Street field.
        AddrDefinedData:
          type: array
          description: Additional data related to an address.
          items:
            $ref: '#/components/schemas/modifyAddrRequest_AddrInfo_AddrDefinedData'
        City:
          maxLength: 32
          type: string
          description: |+
            Name of the city.

            **Note:** Used if AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if AddrFormatType is "Parsed".

            Postal town is the city for parsed account addresses.

        County:
          maxLength: 32
          type: string
          description: |-
            Name of the county.

            **Note:** Used if AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if AddrFormatType is "Parsed".

            Maximum 24 characters are supported.
        District:
          maxLength: 32
          type: string
          description: |-
            Name of the district in the address record.

            **Note:** Used if AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if AddrFormatType is "Parsed".

            Maximum 24 characters are supported.
        StateProv:
          type: string
          description: |-
            State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.

            **Note:** Used if AddrFormatType is "Parsed".

            Minimum one element of parsed address is required if AddrFormatType is "Parsed".

            Maximum 2 characters are supported.
        MilitaryRegion:
          type: string
          description: "Name of the military region associated with the address.\n\n**Note:** Used if AddrFormatType is \"Parsed\".\n\nFor a military address, this field should be used instead of the State or City. "
          enum:
          - APO AA
          - APO AE
          - APO AP
          - FPO AA
          - FPO AE
          - FPO AP
        CountryCode:
          $ref: '#/components/schemas/modifyAddrRequest_AddrInfo_CountryCode'
        POBox:
          maxLength: 16
          type: string
          description: |-
            Number of the PO box associated with the address.

            **Note:** Used if AddrFormatType is "Parsed".

            Client application should send a value in either POBox or Street field.

            Output of post office box address are displayed as PO BOX NNNNNN in the printed address.
        PostalCode:
          maxLength: 11
          type: string
          description: |-
            Postal code or Zip code.

            **Note:** Only applicable if AddrFormatType is Parsed or Label.

            For US address, this field refers to zip code. Format of ZIP code is, (five digits code)-(four digit additional code). The four digit additional code is optional, can be represented as '0000' and used to determine a more specific location within a given ZIP code.

            Example: XXXX-XXXX or XXXX-0000.

            For a non-US address, this field refers to post code if applicable.

            All formats other than the format specified above can represent non-US post code.

            If PostalCode is provided as XXXXX and no CountryCode is indicated, value is considered as US ZIP code.

            Maximum 10 characters are supported.
        MoveInDt:
          type: string
          description: "Date of current address.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Only applicable to primary address."
          format: date
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** Only applicable to primary address.

            User-defined value to identify if the mail should be sent to a customer.
    modifyAddrRequest_AddrInfo:
      required:
      - PostAddr
      type: object
      properties:
        PostAddr:
          type: array
          description: Postal address details of a party.
          items:
            $ref: '#/components/schemas/modifyAddrRequest_AddrInfo_PostAddr'
        UpdateContactCode:
          type: string
          description: |-
            Update contact code that indicates if the card, party or account contact dates should be updated.

            **Note:** To add alternate address in parsed format, system supports option to update last contact date with current system date for a party.

            If 'Party' value is sent in this field, last contact date of a party is updated.

            If 'Account' value is sent in this field, last contact date of an account or all the accounts is updated where, customer is primary owner of the account.

            If 'All' value is sent in this field, last contact date of an account and primary owner of the account is updated.

            If 'None' value is sent in this field, last contact date of a party or account is not updated.

            If no value is sent in this field, last contact date of a party and account is updated.
          enum:
          - Party
          - Account
          - All
          - None
      description: |+
        Address details of a party.

        **Note:** If AddrFormatType is "Label", secondary/seasonal address can contain up to six lines of 40 characters each.

    modifyAddrResponse_AddrStatusRec_AddrKeys_AcctKeys_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by the financial institution. This number is printed on the front side of the card.

            Example: 526466529

            **Note:** The CardId includes the ISO and card number. Maximum 19 digits are allowed in PAN (Primary Account Number).

        CardSeqNum:
          maxLength: 3
          type: string
          description: |-
            Sequence number of a card that refers to the member number to whom the card is issued.

            **Note:** Only applicable if member number functionality is supported by financial institution.
      description: Unique information to identify a card record.
    modifyAddrResponse_AddrStatusRec_AddrKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
          - SDB
        CardKeys:
          $ref: '#/components/schemas/modifyAddrResponse_AddrStatusRec_AddrKeys_AcctKeys_CardKeys'
      description: Unique information to identify the account record.
    modifyAddrResponse_AddrStatusRec_AddrKeys:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/modifyAddrResponse_AddrStatusRec_AddrKeys_AcctKeys'
        AddressIdent:
          type: string
          description: "Unique identifier of an address record.\n\n**Note:** Alternate address type. \n\n\n\nValid value for card and safe deposit box is: \n\n- Alternate\n\n\n\nValid values for DDA, SDA, and CDA are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nValid additional statement values for RPA and DDA accounts (formerly CAMPlus):\n\n- RPAStatementAddtl (1-5)\n\n- RPAStatementAddtl\n\n\n\nValid values for LOAN are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional (1-5)\n\n\n\nNot applicable for party. \n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrType:
          type: string
          description: Type of address.
          enum:
          - Secondary
          - Seasonal
        PartyKeys:
          $ref: '#/components/schemas/deleteAddrByPutResponse_AddrStatusRec_AddrKeys_PartyKeys'
      description: Unique information to identify the address record.
    modifyAddrResponse_AddrStatusRec:
      required:
      - AddrKeys
      - AddrStatus
      type: object
      properties:
        AddrStatus:
          $ref: '#/components/schemas/getAddrByPostResponse_AddrStatus'
        AddrKeys:
          $ref: '#/components/schemas/modifyAddrResponse_AddrStatusRec_AddrKeys'
      description: Response message of the address add, del, modify or delete API call.
