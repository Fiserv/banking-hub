---
openapi: 3.0.1
info:
  title: Address Service
  description: The Address service manages addresses related to parties and product accounts.
  version: 11.0.0_SIG-Add_Label
servers:
- url: /
paths:
  /address:
    post:
      tags:
      - Add Address
      summary: Add Address
      description: "Creates a new address record for a Party or a financial account. This API also allows you to relate a newly created account record to the existing Party. <br>\n        For more information about the Accountholder domain, <a href=\"../docs/?path=docs/fintechs/accountholder.md\" title=\"Click to open\">click here.</a> <br><br>\n        <b>Relates to:</b>\n          <ul> \n            <li><a href=\"../docs/?path=docs/banks-and-CU/deposits.md\" title=\"Click to open\">Deposits</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/loans.md\" title=\"Click to open\">Loans</a></li>\n            <li><a href=\"../docs/?path=docs/banks-and-CU/bank-servicing.md\" title=\"Click to open\">Bank Servicing</a></li>\n          </ul> "
      operationId: addAddress
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAddressRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAddressResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAddressResponse'
      x-group-name: Address Service
      x-proxy-name: Add Address
      x-child-product-name: Accountholder
      x-core: Signature-Label
components:
  schemas:
    addAddressRequest:
      required:
      - AddrInfo
      properties:
        PartyAddrRelInfo:
          $ref: '#/components/schemas/addAddressRequest_PartyAddrRelInfo'
        AcctAddrRelInfo:
          type: array
          description: |+
            Details of the relationship between account and address.

            **Note:** The AcctAddrRelInfo/AcctRef/AcctKeys aggregate is used to add an address for an account. Service Provider supports multiple secondary/seasonal addresses for an account, but only one address is allowed with one service request.

          items:
            $ref: '#/components/schemas/addAddressRequest_AcctAddrRelInfo'
        AddrInfo:
          $ref: '#/components/schemas/addAddressRequest_AddrInfo'
    addAddressResponse:
      required:
      - AddrStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        AddrStatusRec:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    addAddressRequest_PartyAddrRelInfo_PartyRef_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Refers to permanent identifier of a customer.
      description: Unique information to identify the party record.
    addAddressRequest_PartyAddrRelInfo_PartyRef:
      required:
      - PartyKeys
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/addAddressRequest_PartyAddrRelInfo_PartyRef_PartyKeys'
      description: |+
        Reference details of a party object that is part of the relationship with the address.

    addAddressRequest_PartyAddrRelInfo:
      type: object
      properties:
        PartyRef:
          $ref: '#/components/schemas/addAddressRequest_PartyAddrRelInfo_PartyRef'
      description: "Details of the relationship between a party and an address.\n\n**Note:** The PartyAddrRelInfo aggregate is used to add an alternate address for a party (customer). \n\nService provider supports only one secondary/seasonal address for a party.\n\n"
    addAddressRequest_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** Client application should send as the account type in this field.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
          - SDB
      description: Unique information to identify an account record.
    addAddressRequest_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/addAddressRequest_AcctRef_AcctKeys'
      description: Reference information of an account object that is part of the relationship with the address.
    addAddressRequest_AcctAddrRelInfo:
      properties:
        AcctRef:
          $ref: '#/components/schemas/addAddressRequest_AcctRef'
    addAddressRequest_AddrInfo_TimeFrame:
      type: object
      properties:
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Start date and time value.\n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999\n\n**Note:** Refers to the date on which the address is to take effect. "
        EndDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "End date and time value.\n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999\n\n**Note:** Refres to the date on which the address is stop being used. "
      description: "Details of the time frame when the postal address is active.\n\n**Note:** TimeFrame aggregate is used for Secondary or Seasonal address types to indicate if address is permanent, temporary or annual. \n\nIf TimeFrame aggregate (that is Start date and End date) is not provided for Secondary address type in the request, then it indicates that the address is a Permanent alternate address. If valid values for the Start date and End date are provided in the TimeFrame aggregate for Secondary address type in the request, then it indicates that the address is an alternate address and will be active during the indicated period of time. \n\nFor Seasonal address type, it is expected that the TimeFrame aggregate (that is Start date and End date) is sent in the request by the client application. \n\n\n\nTimeFrame aggregate does not apply to Legal Title alternate address type. "
    addAddressRequest_AddrInfo_PostAddr:
      required:
      - AddrType
      properties:
        AddrUse:
          type: string
          description: "Usage of the address.\n\n**Note:** *Required field*\n\n\n\nRefers to alternate address type. \n\nThis field is not required for adding secondary/seasonal address for party. \n\n\n\nFor safe deposit box valid value is: \n\n- Alternate \n\n\n\nFor DDA, SDA and CDA valid values are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional1 to StatementAdditional5\n\n\n\nFor RPA DDA accounts (formerly CAMPlus) valid additional statement values are:\n\n- RPAStatementAddtl1 to RPAStatementAddtl5 \n\n- RPAStatementAddl\n\n\n\nFor LOAN valid values are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional1 to StatementAdditional5\n\n\n\nIn order to add any of the RPAStatementAddtl values, relationship pricing feature should be turned on in Signature database and account must have a relationship pricing account.\n\n\n\nLegal title refers to the name when more than one customers are related to one account. The Parsed address format type does not support legal title."
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl          
        AddrFormatType:
          type: string
          description: "Type of address format.\n\n**Note:** Cards always use parsed address format. \n\nClient application should provide address data in the applicable address fields, based on the address format type (Label or Parsed) used by the financial institution.   \n\n\n\n"
          enum:
          - Label
        FullName1:
          maxLength: 96
          type: string
          description: |-
            Full name in line 1.

            **Note:** *Conditionally Required field*

            Full name that appears in the address.

            Should be provided if AddrFormatType is "Label".
        Addr1:
          maxLength: 64
          type: string
          description: "Address line 1.\n\n**Note:** Addr1 is required only when address format type is Label. \n\n\n\nMax length: 40 characters\n\n\n\n"
        Addr2:
          maxLength: 64
          type: string
          description: |-
            Address line 2. To enter Addr2, Addr1 field must be provided.

            **Note:** Max length: 40 characters
        Addr3:
          maxLength: 64
          type: string
          description: |-
            Address line 3. To enter Addr3, Addr2 field must be provided.

            **Note:** Third line of address if AddrFormatType is "Label".

            Should be provided if Addr4 is sent in request.

            Maximum 40 characters are supported.
        Addr4:
          maxLength: 64
          type: string
          description: |-
            Address line 4. To enter Addr4, Addr3 field must be provided.

            **Note:** Fourth line of address if AddrFormatType is "Label".

            Should be provided if Addr5 is sent in request.

            Maximum 40 characters are supported.
        Addr5:
          maxLength: 64
          type: string
          description: |-
            Address line 5. To enter Addr5, Addr4 field must be provided.

            **Note:** Fifth line of address if AddrFormatType is "Label".

            Should be provided if Addr6 is sent in request.

            Maximum 40 characters are supported.
        PostalCode:
          maxLength: 11
          type: string
          description: |-
            Postal code or Zip code.

            **Note:** Only applicable if AddrFormatType is Parsed or Label.

            For U.S. address, this field refers to a Zip code. Format of the Zip code is (five-digit code)-(four digit additional code). The four-digit additional code is optional. It can be represented as "0000" and used to determine a more specific location within a given Zip code.

            Example: XXXX-XXXX or XXXX-0000.

            For a non-U.S. address, this field refers to the post code, if applicable.

            All formats other than the format specified above can represent a non-U.S. post code.

            If PostalCode is provided as XXXXX and no CountryCode is indicated, the value is considered as a U.S. Zip code.

            Max length: 10 characters
        AddrType:
          type: string
          description: |-
            Type of address.

            **Note:** The secondary and seasonal AddrType are supported for both Label and Parsed AddrFormatType.

            If AddrType is secondary and no TimeFrame (StartDt and EndDt) is provided, then the address is considered as a permanent alternate address.

            If AddrType is secondary and TimeFrame (StartDt and EndDt) is provided, then the address is considered as a temporary alternate address that is active during the indicated time period.

            If AddrType is seasonal, then TimeFrame (StartDt and EndDt) should be provided in request and the address is considered to be annual alternate address that is active during the indicated time period for every year.
          enum:
          - Secondary
          - Seasonal
        TimeFrame:
          $ref: '#/components/schemas/addAddressRequest_AddrInfo_TimeFrame'
        Retention:
          type: boolean
          description: "Flag to indicate if the address should be retained after its time frame.\n\n**Note:** This field should be set to 'false' when the Address type is secondary and the time frame (Start date and End date) is provided in the request.\n\nThis field should be set to 'true' for secondary address type when the time frame (Start date and End date) is not provided. Since then the address is considered to be a permanent alternate address. \n\n\n\nThis field should be set to 'true' for seasonal address type and is not applicable for legal title alternate address type.\n\n\n\nThe default value is set to 'true' if the client does not send any value in this field.  \n\n\n\n\n\n\n\n\n\n\n\n"
        RevertToPartyAddr:
          type: boolean
          description: "Flag to indicate if the address is to be reverted to a party name and the address for an alternate address of the account.\n\n**Note:** Refers to Revert to Primary customer address (that is Revert customer N/A field in Signature). It is only valid for the Account level alternate address, that is, when the AddressIdent is equals to 'Alternate' for an account. \n\n\n\nClient application should send this field as 'false' when the address type is seasonal or when the address type is secondary and time frame (Start date and End date) is not provided in the request. "
    addAddressRequest_AddrInfo:
      required:
      - PostAddr
      type: object
      properties:
        PostAddr:
          type: array
          description: Postal address details of a party.
          items:
            $ref: '#/components/schemas/addAddressRequest_AddrInfo_PostAddr'
        UpdateContactCode:
          type: string
          description: "Code to indicate if card, party or account contact dates should be updated.\n\n**Note:** If value 'Party' is sent, then only the Party's last contact date will be updated. \n\nIf value 'Account' is sent, then the Account or all the Accounts' last contact date will be updated where the customer is the primary owner.\n\nIf value 'All' is sent, then the last contact date for the account and the last contact date for the primary owner of the account will be updated. \n\nIf value 'None' is sent, then the last contact date will not be updated for either Party or Account(s). \n\nIf no value is sent, then Signature updates the last contact date for party and the account(s). "
          enum:
          - Party
          - Account
          - All
          - None
      description: |-
        Address details of a party.

        **Note:** A secondary/seasonal address can contain up to six lines of 40 characters each (including the FullName).
    addAddressResponse_AddrStatusRec_AddrKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
          - SDB
      description: Unique information to identify the account record.
    addAddressResponse_AddrStatusRec_AddrKeys:
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/addAddressRequest_PartyAddrRelInfo_PartyRef_PartyKeys'
        AcctKeys:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec_AddrKeys_AcctKeys'
        AddressIdent:
          type: string
          description: "Unique identifier of an address record.\n\n**Note:** Refers to alternate address type. \n\n\n\nFor safe deposit box valid value is: \n\n- Alternate \n\n\n\nFor DDA, SDA and CDA valid values are: \n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- Check\n\n- StatementPrimary\n\n- StatementAdditional1 to StatementAdditional5\n\n\n\nFor RPA DDA accounts (formerly CAMPlus) valid additional statement values are:\n\n- RPAStatementAddtl1 to RPAStatementAddtl5 \n\n- RPAStatementAddl\n\n\n\nFor LOAN valid values are:\n\n- Alternate\n\n- Government\n\n- LegalTitle\n\n- StatementPrimary\n\n- StatementAdditional1 to StatementAdditional5\n\n\n\nFor Party, this field is not applicable. "
          enum:
          - Alternate
          - Government
          - LegalTitle
          - Check
          - StatementPrimary
          - StatementAdditional1
          - StatementAdditional2
          - StatementAdditional3
          - StatementAdditional4
          - StatementAdditional5
          - RPAStatementAddtl1
          - RPAStatementAddtl2
          - RPAStatementAddtl3
          - RPAStatementAddtl4
          - RPAStatementAddtl5
          - RPAStatementAddtl
        AddrType:
          type: string
          description: Type of address.
          enum:
          - Secondary
          - Seasonal
      description: Unique information to identify the address record.
    addAddressResponse_AddrStatusRec_AddrStatus:
      required:
      - AddrStatusCode
      type: object
      properties:
        AddrStatusCode:
          type: string
          description: Status code of the address.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time when the address status is changed.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-12-31T23:59:59.999
      description: Current status of the address
    addAddressResponse_AddrStatusRec:
      required:
      - AddrKeys
      - AddrStatus
      type: object
      properties:
        AddrKeys:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec_AddrKeys'
        AddrStatus:
          $ref: '#/components/schemas/addAddressResponse_AddrStatusRec_AddrStatus'
      description: Response message of the address add, del, modify or delete API call.
