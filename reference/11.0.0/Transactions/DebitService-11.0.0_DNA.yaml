---
openapi: 3.0.1
info:
  title: Debit Service
  description: This service domain is the debit facility for Accounts. A debit is performed with the use of a DebitAdd message. \_The client \_can use the DebitRev message to reverse the previous debit request.
  version: 11.0.0_DNA
servers:
- url: /
paths:
  /debitservice/payments/debits:
    put:
      tags:
      - Reverse Debit
      summary: Reverse Debit.
      description: "Reverse Debit API reverses the previously processed debit transaction on a deposit account.<br>For DNA, this API supports reversal of the withdrawal transaction with cash and electronic fund types. This API does not support partial reversal of the transaction amount that was debited from the account. <br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: DebitRevOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebitRevOperRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebitRevOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebitRevOperResponse'
      x-group-name: Debit Service
      x-proxy-name: Reverse Debit
      x-child-product-name: Transactions
      x-core: DNA
    post:
      tags:
      - Add Debit
      summary: Add Debit.
      description: |
        "Add Debit API creates a debit transaction where monetary funds are debited/withdrawn from a deposit account.<br>For DNA, this API supports withdrawal (WTH) transaction type with electronic fund type or cash fund type for real-time post-transaction.<br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: DebitAddOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebitAddOperRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebitAddOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebitAddOperResponse'
      x-group-name: Debit Service
      x-proxy-name: Add Debit
      x-child-product-name: Transactions
      x-core: DNA
components:
  schemas:
    DebitAddOperRequest:
      required:
      - DebitInfo
      properties:
        DebitInfo:
          $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo'
    StatusType_DNA:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Example value is:
              -  DNA
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        AdditionalStatus:
          $ref: '#/components/schemas/StatusType_DNA_AdditionalStatus'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    DebitAddOperResponse:
      required:
      - DebitStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType_DNA'
        DebitStatusRec:
          $ref: '#/components/schemas/DebitAddOperResponse_DebitStatusRec'
        Receipt:
          $ref: '#/components/schemas/DebitAddOperResponse_Receipt'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    DebitRevOperRequest:
      required:
      - DebitInfo
      properties:
        DebitKeys:
          $ref: '#/components/schemas/DebitRevOperRequest_DebitKeys'
        DebitInfo:
          $ref: '#/components/schemas/DebitRevOperRequest_DebitInfo'
    DebitRevOperResponse:
      required:
      - DebitStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType_DNA'
        DebitStatusRec:
          $ref: '#/components/schemas/DebitRevOperResponse_DebitStatusRec'
        Receipt:
          $ref: '#/components/schemas/DebitRevOperResponse_Receipt'
    DebitAddOperRequest_DebitInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of an account record.





      description: Unique information to identify the account record.
    DebitAddOperRequest_DebitInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo_AcctRef_AcctKeys'
      description: Reference information of an account from which the amount is debited.
    DebitAddOperRequest_DebitInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.



            **Note:** *Required field*
      description: Details of the debit amount to be processed.
    DebitAddOperRequest_DebitInfo_CompositeCurAmt:
      required:
      - CurAmt
      properties:
        CurAmt:
          $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo_CurAmt'
    DebitAddOperRequest_DebitInfo_CashAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.



            **Note:** *Required field*
      description: Details of the cash amount.
    DebitAddOperRequest_DebitInfo_CashOutData:
      required:
      - CashAmt
      properties:
        CashAmt:
          $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo_CashAmt'
    DebitAddOperRequest_DebitInfo:
      required:
      - CompositeCurAmt
      - DebitType
      type: object
      properties:
        DebitType:
          type: string
          description: Type of debit transaction.
          enum:
          - Withdrawal
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time when the transaction status is changed.

            Format: yyyy-mm-ddThh:mm:ss.micro

            Example: 2021-01-31T23:59:59.999



            **Note:** Refers to override effective date. If this field is not provided in the request, then service provider uses effective date value from user authentication data.
        Desc:
          maxLength: 100
          type: array
          description: |-
            Description of debit transaction.



            **Note:** If multiple descriptions are provided, DNA consider the first description and the rest are ignored.
          items: {}
        AcctRef:
          $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo_AcctRef'
        CompositeCurAmt:
          type: array
          description: Details of the composition of debited amount.
          items:
            $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo_CompositeCurAmt'
        CashOutData:
          type: array
          description: Information to specify the cash out data that comprises the transaction.
          items:
            $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo_CashOutData'
      description: Details of the debit transaction.
    StatusType_DNA_AdditionalStatus:
      type: object
      properties:
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
      description: Details of the additional status of the response message. This aggregate can appear once for each additional status that the server is expected to provide.
    DebitAddOperResponse_DebitStatusRec_DebitKeys:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo_AcctRef_AcctKeys'
      description: Unique information to identify a debit record.
    DebitAddOperResponse_DebitStatusRec_DebitStatus:
      required:
      - DebitStatusCode
      type: object
      properties:
        DebitStatusCode:
          type: string
          description: Code to specify the status of the debit transaction.
          enum:
          - Posted
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time when the transaction status is changed.

            Format: yyyy-mm-ddThh:mm:ss.sss

            Example: 2021-01-31T23:59:59.999
      description: Details of the debit transaction status.
    DebitAddOperResponse_DebitStatusRec:
      required:
      - DebitStatus
      type: object
      properties:
        DebitKeys:
          $ref: '#/components/schemas/DebitAddOperResponse_DebitStatusRec_DebitKeys'
        DebitStatus:
          $ref: '#/components/schemas/DebitAddOperResponse_DebitStatusRec_DebitStatus'
      description: Details of the debit status record in response to the add operation.
    DebitAddOperResponse_Receipt_TrnAmt:
      type: object
      properties:
        Amt:
          type: number
          description: Amount in decimal format.
      description: Details of the transaction amount.
    DebitAddOperResponse_Receipt:
      type: object
      properties:
        TrnAmt:
          $ref: '#/components/schemas/DebitAddOperResponse_Receipt_TrnAmt'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification code of a transaction.
      description: Details of the debit transaction receipt.
    DebitRevOperRequest_DebitKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.



            **Note:** Refers to the account number on which the transaction is performed.
      description: Unique information to identify the account record.
    DebitRevOperRequest_DebitKeys:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/DebitRevOperRequest_DebitKeys_AcctKeys'
      description: Unique information to identify a debit record.
    DebitRevOperRequest_DebitInfo_CompositeCurAmt_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: "Amount in decimal format.\n\n\n\n**Note:** This field can have two occurrences, one is for the transaction amount. \n\nThis is an optional field. If not provided in the request, then the original transaction amount is considered for reversal. Also if the partial or incorrect amount is provided, then the transaction fails."
      description: Details of the debit amount to be processed.
    DebitRevOperRequest_DebitInfo_CompositeCurAmt:
      required:
      - CurAmt
      type: object
      properties:
        CurAmt:
          $ref: '#/components/schemas/DebitRevOperRequest_DebitInfo_CompositeCurAmt_CurAmt'
      description: Details of the composition of the debit reversal amount.
    DebitRevOperRequest_DebitInfo_CashAmt:
      type: object
      properties:
        Amt:
          type: number
          description: Amount in decimal format.
      description: Details of the cash amount.
    DebitRevOperRequest_DebitInfo_CashInData:
      required:
      - CashAmt
      properties:
        CashAmt:
          $ref: '#/components/schemas/DebitRevOperRequest_DebitInfo_CashAmt'
    DebitRevOperRequest_DebitInfo_NetworkRefData:
      type: object
      properties:
        TrnIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier for the original transaction that is used to reference a previous transaction.



            **Note:** *Required field*



            Refers to the original transaction number to be reversed.
      description: Details of the network reference data to uniquely identify a previously posted transaction.
    DebitRevOperRequest_DebitInfo:
      required:
      - CompositeCurAmt
      - DebitType
      type: object
      properties:
        DebitType:
          type: string
          description: |-
            Type of debit transaction.



            **Note:** This field refers to transaction type code to be performed.
          enum:
          - Withdrawal
        EffDt:
          type: string
          description: |-
            Effective date and time when the transaction status is changed.

            Format: yyyy-mm-ddThh:mm:ss.sss

            Example: 2021-01-31T23:59:59.999



            **Note:** Refers to override effective date. If this field is not provided in the request, then service provider uses effective date value from user authentication data.
        Desc:
          maxLength: 200
          type: array
          description: |-
            Description of the debit transaction.



            **Note:** Refers to the REG-E compliant description for the transaction. Description for the from account.

            If multiple descriptions are provided, then DNA considers the first description and the rest are ignored.

            Max length: 80 characters
          items: {}
        CompositeCurAmt:
          $ref: '#/components/schemas/DebitRevOperRequest_DebitInfo_CompositeCurAmt'
        CashInData:
          type: array
          description: Cash-In data that comprises the transaction.
          items:
            $ref: '#/components/schemas/DebitRevOperRequest_DebitInfo_CashInData'
        NetworkRefData:
          $ref: '#/components/schemas/DebitRevOperRequest_DebitInfo_NetworkRefData'
      description: Details of the debit transaction.
    DebitRevOperResponse_DebitStatusRec_DebitKeys:
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/DebitAddOperRequest_DebitInfo_AcctRef_AcctKeys'
      description: Unique information to identify a debit record.
    DebitRevOperResponse_DebitStatusRec_DebitStatus:
      required:
      - DebitStatusCode
      type: object
      properties:
        DebitStatusCode:
          type: string
          description: Code to indicate the status of the debit transaction.
          enum:
          - Reversed
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time when the transaction status is changed.

            Format: yyyy-mm-ddThh:mm:ss.micro

            Example: 2021-01-31T23:59:59.999
      description: Details of the debit transaction status.
    DebitRevOperResponse_DebitStatusRec:
      required:
      - DebitStatus
      type: object
      properties:
        DebitKeys:
          $ref: '#/components/schemas/DebitRevOperResponse_DebitStatusRec_DebitKeys'
        DebitStatus:
          $ref: '#/components/schemas/DebitRevOperResponse_DebitStatusRec_DebitStatus'
      description: Details of the debit status record in response to the reverse operation.
    DebitRevOperResponse_Receipt:
      type: object
      properties:
        TrnAmt:
          $ref: '#/components/schemas/DebitAddOperResponse_Receipt_TrnAmt'
        TrnIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identification code of a transaction.



            **Note:** Refers to the unique generated transaction number.
      description: Details of the debit transaction receipt.
  parameters:
    EFXHeader:
      name: EFXHeader
      in: header
      description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/EFXHeader'
