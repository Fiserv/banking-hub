---
openapi: 3.0.1
info:
  title: Transaction Service
  description: The Transactions service supports operations managing financial transactions.
  version: 11.0.0_FIN
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/TransactionService/11.0.0_FIN
  description: SwaggerHub API Auto Mocking
paths:
  /payments/transactions:
    post:
      tags:
      - Add Transaction
      summary: Adds a monetary transaction
      description: "Add Transaction API creates transactions in the Precision system. This API supports all types of customer and general ledger transactions using transaction codes. <br>The transaction code must be defined in Precision core to use for posting the transaction.<br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: addTransactions
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addTransactionsRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addTransactionsResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addTransactionsResponse'
      x-group-name: Transaction Service
      x-proxy-name: Add Transaction
      x-child-product-name: Transactions
      x-core: Precision
  /payments/transactions/reversals:
    post:
      tags:
      - Reversal Transaction
      summary: Reverses a monetary transaction
      description: "Reversal Transaction API reverses a posted transaction. Transaction reversal is not permitted for previously reversed or reversal transactions. When the request is successful, the response includes transaction receipt information.<br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: addReversal
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addReversalRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addReversalResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addReversalResponse'
      x-group-name: Transaction Service
      x-proxy-name: Reversal Transaction
      x-child-product-name: Transactions
      x-core: Precision
components:
  schemas:
    addTransactionsRequest:
      required:
      - entries
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        isValidateOnly:
          type: boolean
          description: Value to indicate whether the transaction is posted in the system of record or not.
        effectiveDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Effective date and time of the transaction.



            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999



            **Note:** "effectiveDateTime" is not provided for immediate transfers.
        entries:
          type: array
          description: Details of the transaction entries.
          items:
            $ref: '#/components/schemas/addTransactionsRequest_entries'
        cashIn:
          type: array
          description: "Details of cash deposit (Cash In) amount. \n\n"
          items:
            $ref: '#/components/schemas/addTransactionsRequest_cashIn'
        cashOut:
          $ref: '#/components/schemas/addTransactionsRequest_cashOut'
        checkIn:
          type: array
          description: Information of check such as check number, routing number and amount for the check transactions.
          items:
            $ref: '#/components/schemas/addTransactionsRequest_checkIn'
    addTransactionsResponse:
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        receipt:
          type: array
          description: Details of transaction receipt.
          items:
            $ref: '#/components/schemas/addTransactionsResponse_receipt'
    addReversalRequest:
      required:
      - id
      properties:
        id:
          maxLength: 36
          type: string
          description: Unique identification number of the transaction to be reversed.
    addReversalResponse:
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        receipt:
          type: array
          description: Details of the transaction receipt.
          items:
            $ref: '#/components/schemas/addReversalResponse_receipt'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: Flag to indicate if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.
      description: Details of the exceptions that can be manually acknowledged by the client.
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggregate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    addTransactionsRequest_account:
      type: object
      properties:
        number:
          type: string
          description: |+
            Account number in which the transaction is performed.



            **Note:** Only position account number should be entered in this field.



        type:
          type: string
          description: |-
            Type of account on which the transaction is performed. This field is required while creating a new account.



            **Note:** The following values indicate:

            - CDA: Certificate of Deposit Account

            - CLA: Commercial Loan Account

            - CMA: Cash Management Account

            - DDA: Demand Deposit Account

            - EQU: Home Equity Loan

            - GLA: General Ledger Account

            - ILA: Installment Loan Account

            - LOC: Consumer Line of Credit

            - MMA: Money Market Account

            - SDA: Savings Deposit Account
          enum:
          - CDA
          - CLA
          - CMA
          - DDA
          - EQU
          - GLA
          - ILA
          - LOC
          - MMA
          - SDA
      description: Details of the account in which the transaction is performed.
    addTransactionsRequest_segments:
      required:
      - id
      - value
      properties:
        id:
          type: string
          description: Value to indicate the identifier for the segment.
          enum:
          - CostCenter
          - Product
          - Branch
          - Region
        value:
          maxLength: 256
          type: string
          description: Value of the segment.
    addTransactionsRequest_entries:
      required:
      - account
      - code
      properties:
        code:
          maxLength: 15
          type: string
          description: Code to identify the transaction entry.
        account:
          $ref: '#/components/schemas/addTransactionsRequest_account'
        amount:
          type: number
          description: Amount of the transaction in decimal format.
        currencyCode:
          maxLength: 3
          type: string
          description: "Code to indicate the currency.\n\n\n\n**Note:** *Required field*\n\nRefers to acctType that can be configured by Financial Institutions. "
        description:
          maxLength: 200
          type: string
          description: Description for the transaction entry.
        segments:
          type: array
          description: |-
            Details of segments for the transaction entry.



            **Note:** Accounting segments define the structure of financial institutions' general ledger (GL) account and position segmentation.
          items:
            $ref: '#/components/schemas/addTransactionsRequest_segments'
    addTransactionsRequest_cashIn:
      required:
      - amount
      properties:
        amount:
          type: number
          description: 'Deposit amount in decimal format. '
    addTransactionsRequest_cashOut:
      required:
      - amount
      type: object
      properties:
        amount:
          type: number
          description: 'Withdrawal amount in decimal format. '
      description: 'Details of cash withdrawal (Cash Out) amount. '
    addTransactionsRequest_account_1:
      type: object
      properties:
        number:
          type: string
          description: Account number of check issuer.
        routingNumber:
          type: integer
          description: Routing number of the check issuer.
          format: int64
      description: Details of the account.
    addTransactionsRequest_checkDetails:
      properties:
        account:
          $ref: '#/components/schemas/addTransactionsRequest_account_1'
        number:
          maxLength: 22
          type: string
          description: Check number on the check leaf.
        amount:
          type: number
          description: Amount in decimal format.
    addTransactionsRequest_checkIn:
      required:
      - amount
      properties:
        amount:
          type: number
          description: "Amount in decimal format.\n\nExample: 10.00 "
        currencyCode:
          type: string
          description: Code to indicate the currency.
          enum:
          - USD
        reference:
          type: string
          description: Reference of the check in amount.
        checkDetails:
          type: array
          description: |-
            Information of the check such as check number, routing number and amount of the check.



            **Note:** "checkDetails" aggregate supports multiple check transactions.
          items:
            $ref: '#/components/schemas/addTransactionsRequest_checkDetails'
    addTransactionsResponse_account:
      type: object
      properties:
        id:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        number:
          type: string
          description: Number of an account.
      description: Details of the account.
    addTransactionsResponse_balances:
      required:
      - type
      properties:
        type:
          type: string
          description: Types of balances in the account.
        amount:
          type: number
          description: "Amounts in decimal format.\n\n\n\n**Note:** This amount can be negative if returned in response. \n\n"
        currencyCode:
          maxLength: 4
          type: string
          description: Code to indicate the currency.
    addTransactionsResponse_receiptHolds:
      properties:
        type:
          type: string
          description: Type of hold applied to the transaction.
        amount:
          type: number
          description: "Amount in decimal format.\n\n\n\n**Note:** This amount can be negative if returned in response. "
        expirationDate:
          type: string
          description: "Date on which the hold on the transaction is expected to expire. \n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
    addTransactionsResponse_receipt:
      properties:
        id:
          maxLength: 36
          type: string
          description: Unique identifier of the transaction receipt.
        account:
          $ref: '#/components/schemas/addTransactionsResponse_account'
        postedDateTime:
          type: string
          description: |-
            Date and time when the transaction is posted.



            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
        amount:
          type: number
          description: "Amount in decimal format of the transaction.\n\n\n\n**Note:** This amount can be negative if returned in response. "
        currencyCode:
          maxLength: 4
          type: string
          description: Code to indicate the currency.
        balances:
          type: array
          description: 'Details of the balances in the account. '
          items:
            $ref: '#/components/schemas/addTransactionsResponse_balances'
        receiptHolds:
          type: array
          description: Details of the holds applied on the transaction.
          items:
            $ref: '#/components/schemas/addTransactionsResponse_receiptHolds'
    addReversalResponse_account:
      type: object
      properties:
        id:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        number:
          type: string
          description: |+
            Number of an account.







      description: Details of the account.
    addReversalResponse_balances:
      required:
      - type
      properties:
        type:
          type: string
          description: |+
            Type of account balance.



          enum:
          - Avail
          - Current
        amount:
          type: number
          description: "Amount in decimal format.\n\n\n\n**Note:** This amount can be negative if returned in response. "
        currencyCode:
          type: string
          description: |+
            Code that indicates the currency.

          enum:
          - USD
    addReversalResponse_receipt:
      properties:
        id:
          maxLength: 36
          type: string
          description: Unique identifier of the transaction receipt.
        account:
          $ref: '#/components/schemas/addReversalResponse_account'
        postedDateTime:
          type: string
          description: |-
            Date and time when the transaction is posted on the core.



            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
        currencyCode:
          type: string
          description: |+
            Code that indicates the currency.

          enum:
          - USD
        balances:
          type: array
          description: Details of the account balances.
          items:
            $ref: '#/components/schemas/addReversalResponse_balances'
