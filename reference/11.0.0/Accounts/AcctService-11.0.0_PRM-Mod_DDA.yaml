---
openapi: 3.0.1
info:
  title: Account Service
  description: The account service helps to create and manage product accounts serviced by the financial institutions. It is also used to retrieve information about the existing accounts and maintain information of new accounts.
  version: 11.0.0_PRM-Mod_DDA
servers:
- url: /
paths:
  /acctservice/acctmgmt/accounts:
    put:
      tags:
      - Update Account
      summary: Update Account.
      description: "Update Account API modifies the various Demand Deposit Account (DDA) details, such as nicknames, account statuses, rate data, interest data, periodic data, balances, open dates and the postal address associated with the account. <br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: AccountMod
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountModRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModResponse'
      x-default-example: Premier
      x-group-name: Account Service
      x-proxy-name: Update Account
      x-child-product-name: Accounts
      x-core: Premier-DDA
components:
  schemas:
    AccountModRequest:
      required:
      - AcctKeys
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        AcctKeys:
          $ref: '#/components/schemas/AccountModRequest_AcctKeys'
        DepositAcctInfo:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo'
    AccountModResponse:
      required:
      - AcctStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        AcctStatusRec:
          $ref: '#/components/schemas/AccountModResponse_AcctStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: Flag to indicate if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.
      description: Details of the exceptions that can be manually acknowledged by the client.
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    AccountModRequest_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - DDA
      description: Unique information to identify the account record.
    AccountModRequest_DepositAcctInfo_AcctPref:
      type: object
      properties:
        Language:
          type: string
          description: 'Preferred language to provide the account-related information. '
          enum:
          - UsePortfolio
          - English
          - Spanish
      description: Preferences to define the default settings such as language and region for an account.
    AccountModRequest_DepositAcctInfo_InitialAmount_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes."
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\nPresently only USD currency code is supported.\n\n"
      description: Details of currency code.
    AccountModRequest_DepositAcctInfo_InitialAmount:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            Example: 10.00
        CurCode:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_InitialAmount_CurCode'
      description: Details of the certificate value of a time deposit account.
    AccountModRequest_DepositAcctInfo_BalanceAtClosingAmt_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\n\n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes."
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\nPresently only USD currency code is supported.\n\n"
      description: Details of currency code.
    AccountModRequest_DepositAcctInfo_BalanceAtClosingAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            Example: 10.00

            **Note:** Refers to closing withdrawal amount.
        CurCode:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_BalanceAtClosingAmt_CurCode'
      description: Balance details of an account at the time of account closure.
    AccountModRequest_DepositAcctInfo_DateData:
      properties:
        DateType:
          type: string
          description: "Type of dates to be referenced to fetch the transaction records.  \n\n**Note:** Only 'LastOverDraft' date can be modified."
          enum:
          - LastOverdraft
        DateValue:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Value of the date.



            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999
    AccountModRequest_DepositAcctInfo_RelationshipMgr:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |+
            Unique identifier of a relationship manager.

            **Note:** Refers to responsibility code.

        RelationshipRole:
          type: string
          description: "Role of a relationship manager.\n\n**Note:** Values refers to:\n\n- Officer refers to Responsibility Code. \n\n- SecondOfficer refers to Opened By Responsibility Code. \n\n- ReferralOfficer refers to Referral Responsibility code."
          enum:
          - Officer
          - SecondOfficer
          - ReferralOfficer
    AccountModRequest_DepositAcctInfo_ClientDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          maxLength: 36
          type: string
          description: |-
            Unique data identifier to identify the client-defined data item.

            **Note:** Refers to field code. This field identifies the flex data field to add or modify.
        DataType:
          type: string
          description: "Type of client defined data. \n\n\n\n**Note:** Refers to Metadata. \n\nThis value must match with the premier field definition."
          enum:
          - Alpha
          - Boolean
          - Currency
          - CurrencySymbol
          - Date
          - Numeric
          - NumericSymbol
          - Rate
          - RateSymbol
        Value:
          maxLength: 256
          type: string
          description: |-
            Value of the client-defined data item.

            **Note:** Values are client-defined.
        DataLength:
          type: integer
          description: "Length of the client defined data.\n\n**Note:** Refers to Metadata. \n\nThis value must match with the premier field definition."
          format: int64
        ExpDt:
          type: string
          description: "Date after which client-defined data item expires.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        Desc:
          maxLength: 200
          type: string
          description: |-
            Description of client defined data.

            **Note:** Refers to field label, metadata.
        RequiredFlag:
          type: boolean
          description: "Flag to indicate the client-defined-defined data is mandatory.\n\n**Note:** Refers to Metadata. \n\nThis value must match with the premier field definition.\n\n- True = data required\n\n- False = data not required"
    AccountModRequest_DepositAcctInfo_AcctStmtData_StmtTimeFrame:
      properties:
        RecurType:
          type: string
          description: "Recurrence type indicates the pattern of recurrence. \n\n**Note:** Premier supports statement cycle and alternate cycle. \n\nUse the AlternateStmtInd to identify the type of cycle sent in the request."
          enum:
          - Cycle
        RecurInterval:
          type: integer
          description: "Recurrence interval between two successive occurrences of statement generation.\n\nFor example:\n\n- If Daily: Number of days between occurrences\n\n- If Weekly: Number of weeks between occurrences\n\n- If Monthly: Number of months between occurrences \n\n- If Yearly: Number of years between occurrences\n\n- If Cycle: Number of the designated cycle. \n\nThe default value is set to 1.\n\n**Note:** This field is used to identify user-defined statement cycle number/alternate statement cycle number."
          format: int64
        AlternateStmtInd:
          type: boolean
          description: "Flag to indicate the statement time frame refers to alternate statement cycle.\n\n**Note:** Set this value to true if the \"RecurInterval\" represents a client-defined alternate cycle. \n\nThis is a client-defined field. "
        AlternateStmtOption:
          type: string
          description: |-
            Option for alternate statement.

            **Note:** If RecurInterval applies to an Alternate Cycle, use this field to specify the Alternate Cycle Option using a value other than None.
          enum:
          - None
          - Stmt
          - SmtAndInt
          - StmtAndSvcChg
          - StmtAndIntAndSvcChg
    AccountModRequest_DepositAcctInfo_AcctStmtData:
      type: object
      properties:
        StmtTimeFrame:
          type: array
          description: Time frame details for the account statement.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_AcctStmtData_StmtTimeFrame'
        CombinedStmtIdent:
          maxLength: 36
          type: string
          description: Unique identifier of a combined statement.
        CombinedStmtCode:
          type: string
          description: Code for combined statement of primary and secondary accounts.
          enum:
          - Primary
          - Secondary
        SpecialStmtCode:
          type: string
          description: 'Code to indicate a special statement. '
          enum:
          - Transcript
          - FinalStmt
          - None
          - DropTransactions
        StmtFormat:
          type: string
          description: "Format to identify the statement detail, balance options, daily summary and other values.\n\n**Note:** Refers to Statement Format Override. Values are client-defined. "
        StmtTruncationOption:
          type: string
          description: Option to indicate if the physical items are enclosed with an account statement.
        StmtGroup:
          type: string
          description: |-
            Group to identify statement cycle for an account.

            **Note:** Refers to statement relationship code.

            A statement group indicates we can add relationship to accounts to all other accounts that is attached to the Portfolio.

            This will indicate combined statement relationship.
      description: Details of the account statement processing data.
    AccountModRequest_DepositAcctInfo_NoticeData:
      properties:
        NoticeType:
          type: string
          description: "Type of notice.\n\n\n\n\n\n**Note:** Values provided in this field are:\n\n- ACHNotice: Refers to ACH Notification Code Override\n\n- ChargeBack: Refers to EIM Charge Back Notice Detail. \n\n- PayeeChanges: Refers to Payee List Request Code. \n\n- BalanceOnReceipt: Refers to ReceiptBalanceOverride.\n\n- RegCCNotice: Refers to Reg CC Notice Override.\n\n- RegularNotice: Refers to NotificationCode."
          enum:
          - ChargeBack
          - RegCCNotice
          - ACHNotice
          - BalanceOnReceipt
          - PayeeChanges
          - RegularNotice
        NoticeOption:
          type: string
          description: "Option for account notice. \n\n"
    AccountModRequest_DepositAcctInfo_IntRateData_AccrualFrequency:
      type: object
      properties:
        RecurType:
          type: string
          description: 'Recurrence type indicates the pattern of recurrence. '
          enum:
          - Cycle
        RecurInterval:
          type: integer
          description: "Recurrence interval between two successive occurrences of statement generation.\n\nFor example:\n\n- If Daily: Number of days between occurrences\n\n- If Weekly: Number of weeks between occurrences\n\n- If Monthly: Number of months between occurrences \n\n- If Yearly: Number of years between occurrences\n\n- If Cycle: Number of the designated cycle. \n\nThe default value is set to 1.\n\n**Note:** Valid values are from 0 to 99."
          format: int64
      description: Details of accrual frequency.
    AccountModRequest_DepositAcctInfo_IntRateData:
      type: object
      properties:
        AccrualFrequency:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_IntRateData_AccrualFrequency'
      description: Details of the interest rate processing for the account.
    AccountModRequest_DepositAcctInfo_RateChangeData:
      properties:
        VarianceFactorType:
          type: string
          description: "Type of variance factor used to calculate interest rate. \n\nThis value is used in combination with the RateVariance, RateFactor and RateCalcMethod.\n\n**Note:** Refers to rate adjuster option.\n\nFor this field either a RateFactor or RateVariance can be applied but not both. The \"VarianceFactorType\" specifies the type to use."
          enum:
          - Variance
          - Factor
        RateFactor:
          type: number
          description: |-
            Percentage of index rate used to calculate the rate changes.



            **Note:** Refers to deposit rate adjuster. Specify a value if the VarianceFactorType is Factor.
        RateVariance:
          type: number
          description: |-
            Percentage difference between interest rate and index rate to adjust the interest rate.

            **Note:** Refers to deposit rate adjuster. Specify a value if the VarianceFactorType is Variance.
    AccountModRequest_DepositAcctInfo_RelationshipMgr_1:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of a relationship manager.

            **Note:** Values are client-defined. Applicable when AddrType is Primary or Secondary.
        RelationshipRole:
          type: string
          description: "Role of a relationship manager.\n\n**Note:** Values refers to:\n\n- Officer refers to Responsibility Code. \n\n- SecondOfficer refers to Opened By Responsibility Code. \n\n- ReferralOfficer refers to Referral Responsibility code."
          enum:
          - Officer
          - ReferralOfficer
    AccountModRequest_DepositAcctInfo_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: Standard country code format.
          enum:
          - SPCountryCode
        CountryCodeValue:
          type: string
          description: |-
            Country code value as per the country code format set in the CountryCodeSource field.

            For example, as per IRS country codes, country code of Canada is CA.

            **Note:** Values are client-defined.
      description: Country code details of the account holder.
    AccountModRequest_DepositAcctInfo_TimeFrame:
      type: object
      properties:
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Start date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** This field is applicable only if AddrType is seasonal. Seasonal address starts and ends on same start/end date every year, therefore, only start month and start day is stored and year can be provided as 9999.
        EndDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            End date and time value.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

            **Note:** This field is applicable only if AddrType is seasonal. Seasonal address starts and ends on same start/end date every year, therefore, only start month and start day is stored and year can be provided as 9999.
      description: |-
        Details of the time frame when the address is active.

        **Note:** Time frame is valid and required only when AddrType is Seasonal.
    AccountModRequest_DepositAcctInfo_PostAddr:
      required:
      - AddrType
      properties:
        OpenDt:
          type: string
          description: "Date on which the account record is created.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** *Conditionally Required field*\n\n\n\nThis field is not applicable to the seasonal address type and required to be provided if new address record is to be created."
          format: date
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the account.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_RelationshipMgr_1'
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** *Conditionally Required field*



            This field is not applicable for seasonal address type and is required if new address record is to be created. Values of this field are user-defined.
        ResponsibleBranch:
          maxLength: 32
          type: string
          description: |-
            Branch responsible for the relationship.

            **Note:** Refers to accounting branch associated to the address record.

            Values are user-defined.

            Does not apply to Seasonal Address type.
        NameIdent:
          maxLength: 36
          type: array
          description: |+
            Name identification value to identify the names related to the account address.

            **Note:** Applicable if AddrType is secondary and AddrUse is mailing and, not applicable for seasonal address type.

            Only up to 3 name identifiers can be provided if financial institution is configured to use different Primary/Inquiry and Secondary/Mailing addresses and names. If provided for Primary/Inquiry address it will be ignored as name relationships for inquiry are established using information provided in PartyCardRelInfo.

            Only names that have a relationship to the safe deposit box or account portfolio can be associated to safe deposit box for mailing purpose.

          items: {}
        AddressIdent:
          maxLength: 36
          type: string
          description: |-
            Unique address identification value.

            **Note:** *Conditionally Required field*



            Refers to address id. It is shared by Primary and Seasonal Address related to it. Secondary and related Seasonal address also shares the same address identifier.

            Required to be provided if existing address is being added to the new account.

            Do not provide if new address is being created for account.
        AddrUse:
          type: string
          description: |-
            Usage of the address.

            **Note:** *Required field*



            Depending up on the parameter "Mailing Name Option" set up at the Financial Institution, Inquiry and Mailing address can be supported.

            If a mailing address is sent but the bank has configured Premier to support inquiry addresses only, the system will ignore the mailing address details.
          enum:
          - Inquiry
          - Mailing
        AddrFormatType:
          type: string
          description: |-
            Type of address format.



            **Note:** Label address format is supported.
          enum:
          - Label
        Addr1:
          maxLength: 64
          type: string
          description: |-
            Address line 1.

            **Note:** *Conditionally Required field*



            Required to be provided if a new address record is being created.

            Dependent on Name and Address Length Option defined under Miscellaneous specification in Premier, First Address Line can be either 30 or 40 characters long.

            Name and Address Length Option values available in Premier:

            "0" indicates names and addresses up to 30 characters in length can be entered.

            "1" indicates names and addresses up to 40 characters in length can be entered.

            "2" indicates names and addresses up to 30 characters may be entered, and that two address lines are available.

            "3" indicates names and addresses up to 40 characters may be entered, and that two address lines are available.
        Addr2:
          maxLength: 64
          type: string
          description: "Address line 2. \n\nTo enter Addr2, Addr1 field must be provided.\n\n**Note:** Address line 2 is applicable only if enabled on Premier in the CIS Miscellaneous (Institution) specifications."
        City:
          maxLength: 32
          type: string
          description: |+
            Name of the city.

            **Note:** *Conditionally Required field*



            It is mandatory to provide this field if a new address record is to be created.

            Field length is 20 characters long (including spaces). It is recommended for consumer to abbreviate the value sent in the EFX request to prevent truncation (For example, city name "Rancho Santa Margarita" exceeds 20 characters and can be abbreviated to "Rancho S Margarita" to avoid truncation). Total length of 40 characters is supported for city, StateProv and PostalCode (appended together) including spaces.

        StateProv:
          type: string
          description: |-
            State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.

            **Note:** *Conditionally Required field*



            It is mandatory to provide this field if new address record is created and country is United States.
        PostalCode:
          maxLength: 11
          type: string
          description: |-
            Postal code or zip code.

            **Note:** *Conditionally Required field*



            It is required to provide this field if, a new address record is to be created with country as United States.



            Postal Code provides information about the ZIP code if, address is from United States and, provides information about postal code if, address is not from United States.  This field provides the information in ZIP Code (5 Digit)-Additional Code (4 Digit) format. Additional code of four digits is optional and provides a more specific location within a given ZIP code. If additional code is not provided, it can be represented with value as '0000'. For example, 32714-1234 or 32714-0000.



            Postal codes are string of characters for non-US addresses.
        CountryCode:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_CountryCode'
        AddrType:
          type: string
          description: "Type of the address. \n\n\n\n**Note:** *Required field*\n\n\n\nAccount can have one primary, one secondary and two seasonal addresses. \n\nHowever, seasonal address cannot exist as a single address record hence, it is always related to a primary/secondary address. Therefore, seasonal address always shares AddressIdent and AddrUse with primary or the secondary address.\n\nIn order to relate the primary/secondary address with seasonal address, present the seasonal address right after the primary/secondary address.\n\nIt is required to provide the TimeFrame for seasonal address."
          enum:
          - Primary
          - Secondary
          - Seasonal
        TimeFrame:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_TimeFrame'
        Retention:
          type: boolean
          description: |-
            Flag to indicate the address should be retained after its timeframe.

            **Note:** Applicable when AddrType is Primary or Secondary. When retention is false, Premier automatically deletes the address when no accounts, tax addenda or any other relationships exist for the address record.
        CensusTract:
          maxLength: 20
          type: string
          description: Census track number assigned by the U.S. Census Bureau to identify the geographic location.
        CensusBlock:
          maxLength: 20
          type: string
          description: Census block number assigned by the U.S. postal service to uniquely identify each carrier delivery point.
        ForeignFlag:
          type: boolean
          description: Flag to indicate the given address is foreign address.
        HandlingCode:
          type: string
          description: "Handling code to specify the handling process of the notification and statement forms.\n\n**Note:** Applicable when AddrType is Primary or Secondary. Values are client-defined and indicate special routing information for correspondence. "
        HandlingCodeOption:
          type: string
          description: |-
            Notification and statement forms handling option for the account.



            **Note:** Values of this field are client-defined and indicate special routing information for customer correspondence.
          enum:
          - StatementsNoticesChecks
          - Statements
          - StatementsNotices
          - StatementsChecks
          - Notices
          - NoticesChecks
          - Checks
          - DoNotPrint
          - UsePortfolio
        MSACode:
          type: integer
          description: Code that identifies a metropolitan statistical area for postal delivery purposes. This code is defined by the U.S. Office of Management and Budget (OMB) and used by the U.S. Census Bureau and other federal government agencies for statistical purposes.
          format: int64
    AccountModRequest_DepositAcctInfo_WithholdingData:
      type: object
      properties:
        WithholdingType:
          type: string
          description: Withholding type to identify if withholding percent is FederalTax or StateTax.
          enum:
          - FederalTax
          - StateTax
        WithholdingPercent:
          type: number
          description: Percent rate used to withhold distributed funds.
      description: Details of the withholding data used to process interest withholdings.
    AccountModRequest_DepositAcctInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            Example: 10.00

            **Note:** Refers to the charge amount for certain fee types: Recurring, DormantFee, and NSFFee. For recurring fees, this fee amount, if any, overrides the Recurring Charge Code amount in the DDA Fee Specifications.

            This field must be provided for a new recurring charge.
        CurCode:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_InitialAmount_CurCode'
      description: Details of the currency amount.
    AccountModRequest_DepositAcctInfo_TimeFrame_1_RecurRule:
      properties:
        RecurType:
          type: string
          description: "Recurrence type indicates the pattern of recurrence. \n\n**Note:** This field must be provided for a new recurring charge.\n\n\n\nDormant Fee Support Cycle only.\n\n\n\nRecurring Fee with FeeIdent=0 (Fee that is maintained in the master file) only supported option is Cycle.\n\n\n\nFee types = Recurring may use any of the allowed frequencies. All other fee types use Cycle only.\n\n\n\nFor RecurType = Cycle, use the RecurInterval to specify the cycle number.\n\n"
          enum:
          - Cycle
          - Monthly
          - Quarterly
          - SemiYearly
          - Yearly
          - SvcChgCycle
        RecurInterval:
          type: integer
          description: "Recurrence interval between two successive occurrences of statement generation.\n\nFor example:\n\n- If Daily: Number of days between occurrences\n\n- If Weekly: Number of weeks between occurrences\n\n- If Monthly: Number of months between occurrences \n\n- If Yearly: Number of years between occurrences\n\n- If Cycle: Number of the designated cycle. \n\nThe default value is set to 1.\n\n**Note:** This field must be provided for a new recurring charge"
          format: int64
        Occurrences:
          type: integer
          description: "Number of occurrences.\n\n**Note:** Refers to remaining transactions.  \n\nPremier does not support occurrences for the initial recurring charge (EFX FeeIdent = 0)."
          format: int64
    AccountModRequest_DepositAcctInfo_TimeFrame_1:
      type: object
      properties:
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Start date and time value.\n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999\n\n**Note:** Applicable only to fees with FeeType as Recurring. Refers to the Recurring Charge Start Date. \n\nThis field must be provided for a new recurring charge."
        RecurRule:
          type: array
          description: Details of the recurrence rule.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_TimeFrame_1_RecurRule'
      description: Details of the time frame when the address is active.
    AccountModRequest_DepositAcctInfo_FeeWaiver:
      type: object
      properties:
        WaiverCode:
          type: string
          description: |-
            Waiver code indicates whether an account is subject to an analysis charge.

            **Note:** Waiver charge codes are defined as data descriptions in Premier Administrator. Use for Waiver FDIC Charge Code, Waiver Overdraft Charge Code and Waiver Overdraft Interest Code.
      description: Method used to waive fees.
    AccountModRequest_DepositAcctInfo_Fee:
      required:
      - FeeType
      properties:
        FeeIdent:
          maxLength: 36
          type: string
          description: "Unique identifier of fee.\n\n**Note:** FeeIdent is used to identify the Recurring Charge addenda record number to modify. To Modify a Record send the existing FeeIdent associated to it. To delete a Recurring Charge addendum, do not return the FeeIdent and fee details for the record in the request. For new recurring charges, the system will assign the next available record number. FeeIdent should not be sent in case of a New Fee setup. Valid values are 0-999, where zero is the initial recurring charge record. (Note: Record 0 is not stored in the Addenda file. It is stored in the DDA master file. Requests to modify the initial recurring charge must include the FeeIdent = 0.) \n\n"
        FeePlan:
          maxLength: 80
          type: string
          description: "Fee Plan identifies a group of fees related to a pricing plan.\n\n\n\n**Note:** Refers to dormant charge code, BPM charge code and recurring charge code.\n\n\n\nTo add a new recurring charge, the fee plan sent in the request must match a recurring charge code that is allowable for the account on Premier. \n\nWhen modifying an existing recuring charge, the fee plan must match the existing recurring charge code (that is, you cannot change the existing recurring record charge code)."
        Desc:
          maxLength: 200
          type: string
          description: "Description of client defined data.\n\n**Note:** Additional user-defined description of the recurring charge. Applicable only to fees with FeeType as Recurring. \n\nPremier does not support a description for the initial recurring charge (EFX FeeIdent = 0)."
        FeeType:
          type: string
          description: "Type of fee.\n\n**Note:** Values for this field refer to:\n\n\n\n- \"ATMFee\" refers to ATM Charge Option.\n\n- \"BillPmt\" refers to BPM Charge Code.\n\n- \"DormantFee\" refers to Dormant Charge Code. \n\n- \"EIM\" refers to EIM Charge Option.\n\n- \"FDIC\" refers to Waiver FDIC Insurance Charge Code.\n\n- \"FeeCharge\" refers to Fee Charge Option.\n\n- \"NSFFee\" refers to CYTD Maximum NSF Paid Handling Fee Override\n\n- \"Other\" refers to Other Charge Option.\n\n- \"OtherNonTax\" refers to Other Non-Taxable Charge Option.\n\n- \"OverdraftFee\" refers to Waiver Overdraft Charge Code.\n\n- \"OverdraftInt\" refers to Waiver Overdraft Interest Code.\n\n- \"Recurring\" refers to Recurring Charge Code."
          enum:
          - ATMFee
          - BillPmt
          - DormantFee
          - EIM
          - FDIC
          - FeeCharge
          - NSFFee
          - Other
          - OtherNonTax
          - OverdraftInt
          - OverdraftFee
          - Recurring
        FeeOption:
          type: string
          description: |-
            Processing option for fee type.



            **Note:** Refers to the charge option for certain fee types: EIM, ATMfee, FeeCharge, Other and OtherNonTax

            This field must be provided for a new recurring charge.
          enum:
          - Waive
          - Charge
          - Analysis
          - SvcChgCreditBack
          - SvcChg
        CurAmt:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_CurAmt'
        TimeFrame:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_TimeFrame_1'
        FeeWaiver:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_FeeWaiver'
    AccountModRequest_DepositAcctInfo_CreditRisk:
      required:
      - RiskCategory
      properties:
        RiskCategory:
          type: string
          description: 'Type of credit risk category. '
          enum:
          - RiskScore1
          - RiskScore2
        InternalScore:
          type: string
          description: |-
            Internal credit risk rating to assess the credit risk of customer.

            **Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI).
    AccountModRequest_DepositAcctInfo_AcctMemoData:
      properties:
        AcctMemoIdent:
          maxLength: 36
          type: string
          description: "Account memo identifier used to arrange multiple memos and warnings in a sequence.\n\n**Note:** This field identifies the \"Teller Alert\". \n\nValid values are: \n\n- 1\n\n- 2\n\n- 3"
        AcctMemoType:
          type: string
          description: "Type of account memo. \n\n"
          enum:
          - Teller
          - Warning
        AcctMemoText:
          maxLength: 255
          type: string
          description: "Client-defined text for the account memo.\n\n**Note:** \n\n- If the AcctMemoType is \"Teller\". Valid values for this field range from \"01\" to \"99\" and values correspond to descriptions in the CIS Teller Alert Specifications.\n\n- If the AcctMemoType is \"Warning\", message can be up to 12 characters which is flashed on the first page of a DDA account inquiry."
    AccountModRequest_DepositAcctInfo_IntDispData_IntDistAcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.

            **Note:** Refers to the number that identifies the account to which the interest is transferred. Applicable only if the "IntDisposition" is "TransferToAcct".
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** This field identifies the type of account to which the interest is transferred.

            Applicable only if "IntDisposition" is "TransferToAcct".
          enum:
          - DDA
          - SDA
      description: Unique information to identify the account record.
    AccountModRequest_DepositAcctInfo_IntDispData_IntDistAcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_IntDispData_IntDistAcctRef_AcctKeys'
      description: Details of the interest distribution account reference indicating the object where the interest is distributed.
    AccountModRequest_DepositAcctInfo_IntDispData:
      type: object
      properties:
        IntDisposition:
          type: string
          description: "Option to indicate the interest disposition. \n\n**Note:** Refers to interest payment method."
          enum:
          - TransferToAcct
          - Capitalize
        IntDistAcctRef:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_IntDispData_IntDistAcctRef'
      description: Details of the interest disposition for the account.
    AccountModRequest_DepositAcctInfo_OverdraftData_OverdraftLimitAmt_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\n\n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes."
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: |-
            Currency code value as per the ISO4217-Alpha format.



            Please note that presently only USD currency code is supported.
      description: Details of currency code.
    AccountModRequest_DepositAcctInfo_OverdraftData_OverdraftLimitAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            Example: 10.00
        CurCode:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_OverdraftData_OverdraftLimitAmt_CurCode'
      description: Details of the amount specified in overdraft program.
    AccountModRequest_DepositAcctInfo_OverdraftData_AtmPosOverdraft:
      type: object
      properties:
        AuthLimitOption:
          type: string
          description: |-
            Type of authorization limit.

            **Note:** Indicates whether the customer has given consent to authorize payments of ATM or POS transactions that will overdraw the account and the type of overdraft limit invoked when an overdraft occurs. The Overdraft Authorization Limit (AuthLimit) applies to ATM and POS transactions only.  The Overdraft Limit (ODLimit) applies to all overdrafts on the account.
          enum:
          - NoAuthorized
          - OptInAtmAuthLimit
          - OptInAtmODLimit
          - OptInAtmPosAuthLimit
          - OptInAtmPosODLimit
          - OptInPosAuthLimit
          - OptInPosODLimit
          - OptOut
          - OptOutCourtesy
          - OptOutNoReply
        OptInOutDt:
          type: string
          description: Date on which the ATM POS overdraft was opted in or out.
          format: date
        NoticeOption:
          type: string
          description: "Option for account notice. \n\n\n\n**Note:** Refers to ATM/POS: Consent Notification Option."
          enum:
          - NoNotice
          - GenerateNotice
          - NoticeSent
      description: Details of ATM POS overdraft.
    AccountModRequest_DepositAcctInfo_OverdraftData:
      type: object
      properties:
        OverdraftEnrollOpt:
          type: string
          description: |-
            Option to indicate the customer enrollment for overdraft program.

            **Note:** This field indicates whether the account is enrolled in an overdraft plan and if the customer has elected to continue in the Overdraft Protection Plan or opt out of the Overdraft Protection Plan.
          enum:
          - NoODPAccount
          - ODPAccount
          - OptIn
          - OptOut
          - InstutionOptOut
        OverdraftAutoTrnInd:
          type: boolean
          description: |-
            Flag to indicate the automatic transactions (for example, automatic loan payments) access the overdraft limit.

            **Note:** Value 'true' indicates automatic transactions can access the overdraft limit and value 'false' indicates automatic transactions will not access the overdraft limit.
        OverdraftLimitPriority:
          type: string
          description: Type of overdraft limit priority.
          enum:
          - PriorXfer
          - AfterXfer
        OverdraftLimitAmt:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_OverdraftData_OverdraftLimitAmt'
        OverdraftReviewDt:
          type: string
          description: Date on which the overdraft limit is reviewed.
          format: date
        OverdraftRatingCode:
          type: string
          description: |-
            Code to indicate the overdraft rating.

            **Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI).
        OverdraftTypeCode:
          type: string
          description: |-
            Code to indicate the type of overdraft.

            **Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI)
        AtmPosOverdraft:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_OverdraftData_AtmPosOverdraft'
      description: Details of overdraft program.
    AccountModRequest_DepositAcctInfo_CheckFloatAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            Example: 10.00
        CurCode:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_InitialAmount_CurCode'
      description: Details of the float check amount that contains the monetary value and currency code.
    AccountModRequest_DepositAcctInfo_CashFloatAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            Example: 10.00
        CurCode:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_InitialAmount_CurCode'
      description: Details of the cash float amount.
    AccountModRequest_DepositAcctInfo_FloatDetails:
      properties:
        FloatDays:
          type: string
          description: |-
            Time period between submitting the check and clearing the check.

            **Note:** Premier supports 12 float days, where float day 1 represents today and 2 represents tomorrow and so on. Use this field to specify the float day you want to modify (1-12).
          enum:
          - 1  through 12
        CheckFloatAmt:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_CheckFloatAmt'
        CashFloatAmt:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_CashFloatAmt'
    AccountModRequest_DepositAcctInfo_FloatData:
      properties:
        FloatType:
          type: string
          description: Type of float data.
          enum:
          - RegCC
        FloatDetails:
          type: array
          description: Details of float containing float days and check amount.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_FloatDetails'
    AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgMethod:
      properties:
        SvcChgMethodType:
          type: string
          description: |-
            Type of method used to calculate service charge.

            **Note:** Maintenance refers to maintenance method. Activity refers to activity method.
          enum:
          - Activity
          - Maintenance
        SvcChgMethodOpt:
          type: integer
          description: |-
            Service charge code on the account.

            **Note:** For either Activity or Maintenance, the valid values are 00-40. Identifies the DDA Service Charge Maintenance or Activity Specification.  00 indicates an account is not subject to automatic maintenance or activity charges.
          format: int64
    AccountModRequest_DepositAcctInfo_SvcChgData_CreditBackAcct:
      required:
      - CreditBackIdent
      properties:
        CreditBackIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of credit back amount.

            **Note:** If the client-defined Credit Back Identification matches the Credit Back Identification on another DDA account, this account is included in the calculation of credit back on DDA service charges. Blank is a valid identifier.
        CreditBackType:
          type: string
          description: |+
            Type of credit back identification.

            **Note:** Refers to Credit Back Option 1

             or Credit Back Option 2.  Identifies the account types used to calculate credit back against accrued service charges.



          enum:
          - AllPrimaryDDA
          - AllPrimarySDA
          - AllPrimaryCDA
          - AllPrimaryDeposit
          - AllPrimarySecondaryDeposit
          - AllPrimaryDepositLoan
          - AllPrimarySecondaryDepositLoan
          - AllPrimaryLoan
          - AllPrimarySecondaryLoan
          - PrimaryDDA
          - PrimarySDA
          - PrimaryCDA
          - PrimaryLoan
        CreditBackAcctId:
          maxLength: 36
          type: string
          description: |+
            Credit back account is used to calculate credit back against accrued service charges.

            **Note:** Refers to Credit Back Account 1 or Credit Back Account 2. Identifies the account that is used to calculate credit back against accrued service charges.

    AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgFlatFeeAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            Example: 10.00

            **Note:** Refers to Service Charge Amount Override. This amount will replace any existing amount that is currently set for the occurrence (1-18) that is being updated.
        CurCode:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_InitialAmount_CurCode'
      description: Details of the service charge flat fee amount.
    AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgFlatFee:
      properties:
        SvcChgFlatFeeType:
          type: string
          description: |-
            Type of service charge flat fee.

            **Note:** Refers to Service Charge Amount Override. ActivityItem refers to Item Type Charge Override. DepositItem refers to Deposited Item Type Charge Override. Premier allows up to 9 instances of each type.
          enum:
          - ActivityItem
          - DepositItem
        SvcChgFlatFeeIdent:
          type: string
          description: "Unique identifier of service charge flat fee.\n\n**Note:** Identifies the Service Charge Amount Override occurrence. Values 1 through 9 may be used for ActivityItem flat fee types. Values 10-18 may be used for DepositItem flat fee types. "
          enum:
          - 1 thru 18
        SvcChgFlatFeeAmt:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgFlatFeeAmt'
    AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgAcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.

            **Note:** The account from which assessed service charges are withdrawn.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - DDA
          - SDA
      description: Unique information to identify the account record.
    AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgAcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgAcctRef_AcctKeys'
      description: Reference details of account associated with the service charge.
    AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgTimeFrame:
      properties:
        RecurType:
          type: string
          description: 'Recurrence type indicates the pattern of recurrence. '
          enum:
          - Cycle
        RecurInterval:
          type: integer
          description: "Recurrence interval between two successive occurrences of statement generation.\n\nFor example:\n\n- If Daily: Number of days between occurrences\n\n- If Weekly: Number of weeks between occurrences\n\n- If Monthly: Number of months between occurrences \n\n- If Yearly: Number of years between occurrences\n\n- If Cycle: Number of the designated cycle. \n\nThe default value is set to 1.\n\n**Note:** The number that identifies the Service Charge Cycle. Valid values are from 0 to 99."
          format: int64
    AccountModRequest_DepositAcctInfo_SvcChgData:
      type: object
      properties:
        SvcChgMethod:
          type: array
          description: Method used to calculate the automatic service charges for maintenance or activity.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgMethod'
        CreditBackMethod:
          type: string
          description: |-
            Credit back method indicates how the credit back portion of an automatic service charge is calculated.

            **Note:** Values are client-defined (00-40). Identifies the DDA Service Charge Credit Back Specification. 00 indicates an account is not subject to automatic credit back on a service charge. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI)
        CreditBackAcct:
          type: array
          description: Details to identify the account used to calculate credit back against accrued service charges.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_SvcChgData_CreditBackAcct'
        CreditBackGroupIdent:
          type: string
          description: "Unique identifier of a credit back group to identify client-defined-defined credit back matches the credit back on the account to include that account in calculation of the credit back.\n\n**Note:** Premier supports up to two CreditBack accounts. Use this field to identify the CreditBack account and CreditBack type grouping being modified.\n\nValid values are:\n\n- 1\n\n- 2 "
          enum:
          - "1"
          - "2"
        SvcChgFlatFee:
          type: array
          description: Flat fees associated with service charge.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgFlatFee'
        SvcChgAcctRef:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgAcctRef'
        SvcChgWaiveCode:
          type: integer
          description: |-
            Code to identify the service charge to be waived off.

            **Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI).
          format: int64
        SvcChgWaiveTaxInd:
          type: boolean
          description: Flag to indicate the code used to waive the sales tax on service charges.
        SvcChgTimeFrame:
          type: array
          description: Details of the service charge time frame.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_SvcChgData_SvcChgTimeFrame'
      description: Details of the service charge associated with an account.
    AccountModRequest_DepositAcctInfo_CommercialAnalysisData_AnalysisChargeAcct_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.

            **Note:** Refers to analysis. Charge account that is the DDA account and is debited for analysis charges.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** Premier supports DDA account types only for the account to debit the analysis charges.
          enum:
          - DDA
      description: Unique information to identify the account record.
    AccountModRequest_DepositAcctInfo_CommercialAnalysisData_AnalysisChargeAcct:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_CommercialAnalysisData_AnalysisChargeAcct_AcctKeys'
      description: Details of an account that is debited for analysis charges.
    AccountModRequest_DepositAcctInfo_CommercialAnalysisData:
      type: object
      properties:
        AnalysisCode:
          type: string
          description: |-
            Code to determine if an account is analyzed for profitability, methods of handling analysis charges and customer reporting.

            **Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI)
        AnalysisGroup:
          type: integer
          description: "Analysis group use to combine a customer's account for analysis reporting purposes. \n\n\n\n**Note:** The group number (up to 10 digits) should match the portfolio number with the name and address information. If the portfolio is deleted or does not exist, Premier gets the name and address information from the lowest account number in the analysis group."
          format: int64
        AnalysisChargeAcct:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_CommercialAnalysisData_AnalysisChargeAcct'
      description: Data related to commercial analysis.
    AccountModRequest_DepositAcctInfo:
      type: object
      properties:
        AcctDtlStatus:
          type: string
          description: |+
            Current status of an account.



          enum:
          - Active
          - Inactive
          - Dormant
          - ClientControlled
          - Closed
        AcctDtlStatusDt:
          type: string
          description: "Date on which current status of an account is updated \n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n\n\n\n\n\n\n"
          format: date
        AcctPref:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_AcctPref'
        TaxIncentiveType:
          type: string
          description: "Type of tax incentive. \n\n\n\n**Note:** Refers to special reporting code indicating if the account is associated with tax benefits."
          enum:
          - HSAFamily
          - HSAIndividual
          - None
        InitialAmount:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_InitialAmount'
        OpenDt:
          type: string
          description: "Date on which the account record is created.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        ClosedDt:
          type: string
          description: "Date on which the account is closed.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Account balance must be zero to set a closed date."
          format: date
        BalanceAtClosingAmt:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_BalanceAtClosingAmt'
        LastContactDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |+
            Last contact date when the financial institution contacted the customer for the account.

            Format: yyyy-MM-ddTHH:mm:ss.sss

            Example: 2021-01-31T23:59:59.999

        DateData:
          type: array
          description: Details of additional date types and values associated with the account.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_DateData'
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the account.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_RelationshipMgr'
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** Refers to branch region.
        ResponsibleBranch:
          maxLength: 32
          type: string
          description: "Branch responsible for the relationship.\n\n**Note:** Refers to accounting branch. "
        NicknameOption:
          type: string
          description: 'Printing option for the account nickname. '
          enum:
          - Printed
          - NotPrinted
        Nickname:
          maxLength: 80
          type: string
          description: Name that customer can assign to the account for easy identification.
        AcctTitleOption:
          type: string
          description: |-
            Printing option for the account title.



            **Note:** Values of this field are user-defined.
        AcctTitle:
          maxLength: 255
          type: string
          description: "Title of account. This value is typically used to indicate the ownership or responsibility of account holder and manner in which the ownership or responsibility is assigned. \n\nFor example, John Doe CUSTODIAN."
        HandlingCodeOption:
          type: string
          description: |+
            Notification and statement forms handling option for the account.

          enum:
          - Statements
          - StatementsNotices
          - Notices
          - DoNotPrint
          - UsePortfolio
        HandlingCode:
          type: string
          description: |-
            Handling code to specify the handling process of the notification and statement forms.

            **Note:** Values of this field are user-defined.
        OEDCode:
          type: string
          description: |-
            Officer, employee, director code. This code is used to indicate if the party is an employee of the financial institution.

            **Note:** Values are client-defined
        ClassCode:
          type: string
          description: |-
            Code to group accounts for the purpose of processing and reporting.

            **Note:** Values are client-defined.
        AcctTypeCode:
          type: string
          description: "Code to classify accounts for the purpose selection and totaling.\n\n**Note:** Code that also identifies public funds and special accounts. \n\nValues are client-defined."
        AcctOpenMethod:
          type: string
          description: "Method used to open the account.\n\n**Note:** Up to six additional values for this field may be client-defined. "
          enum:
          - InPerson
          - Internet
          - Mail
          - Phone
        ClientDefinedData:
          type: array
          description: |-
            Details of the client-defined data whose value, data type and definition are client-defined.

            **Note:** If required to update the client-defined data, the final state of the account client-defined data should be sent in the request in order for ESF to determine which client-defined data is added, updated or deleted.

            Premier requires the flex data, metadata (such as field size) to be sent along with the user-entered account data.

            The metadata must match the flex data field definition, as defined on Premier, for both new and updated flex data fields. This service will not modify Flex Data field definitions.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_ClientDefinedData'
        AcctStmtData:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_AcctStmtData'
        NoticeData:
          type: array
          description: Details of account notice processing data.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_NoticeData'
        ProdIntRateId:
          maxLength: 36
          type: string
          description: "Code to specify how the interest rate and interest is calculated for the account.\n\n**Note:** Refers to deposit rate index. Indicates which of the structures defined in Deposit Rate Specifications is used to calculate an account's interest. "
        IntRateData:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_IntRateData'
        RateChangeData:
          type: array
          description: Details of frequency for interest rate adjustment.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_RateChangeData'
        PostAddr:
          type: array
          description: |-
            Postal address details of the account holder.

            **Note:** *Required field*



            At least one account address is required.

            Account can have one primary, one secondary and two seasonal addresses associated to it.

            Seasonal address cannot exist as a single address record and is related to either primary or secondary address. Therefore, seasonal address shares AddressIdent and AddrUse fields with primary and secondary address.

            Value of AddrUse for primary and related seasonal address is 'Inquiry'.

            Value of AddrUse for secondary and related seasonal address is 'Mailing'.

            If "Mailing Name Options" parameter is configured at financial institution, it determines if account can have different inquiry and mailing address/names.

            - If parameter is set to N, both inquiry and mailing addresses are same therefore, only primary address type and AddrUse as Inquiry is to be provided.

            - If parameter is set to Y, both inquiry and mailing addresses can be different therefore, secondary address type and AddrUse as mailing and names is to be provided.

            If existing address is to be linked to an account then AddressIdent including AddrType, AddrUse and AdddrFormatType are required.

            If new address is to be created for an account, address details including AddrType, AddrUse and AdddrFormatType is required and AddressIdent should not be provided in the request.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_PostAddr'
        WithholdingOption:
          type: string
          description: Withholding option to identify the type of tax to be withheld for the party.
          enum:
          - None
          - StateTax
          - FederalTax
          - StateFederalTax
        WithholdingData:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_WithholdingData'
        IntReportingInd:
          type: boolean
          description: Flag to indicate what tax should be reported to the party.
        Fee:
          type: array
          description: "Details of recurring fee to identify the type and amount of fee charged.\n\n**Note:** If FeeType is Recurring, it supports multiple recurring charges on an account. \n\nUse this service to modify or delete any existing charge record or to add a new charge record.\n\nAll other \"FeeType\" supports only one instance."
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_Fee'
        CreditRisk:
          type: array
          description: Credit risk details related to the account.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_CreditRisk'
        RiskRanking:
          type: string
          description: |-
            Ranking value to indicate the level of risk ranging from low to high.

            **Note:** Premier supports 4 system-defined values. Additional values may be client-defined. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI)
        TrnRestriction:
          type: string
          description: "Client defined restrictions for transactions applied to the account during the transaction posting.\n\n**Note:** Code indicates whether certain transaction codes are allowed (posted) or disallowed (nonposted) on the account. \n\nThe calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI).\n\nValues are client-defined."
        TrnRestrictionOvrd:
          type: string
          description: |-
            Client defined instructions to override the restrictions applied to the account during transaction posting.

            **Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the core for the Financial Institution (FI).
        MemoPostProcessOptOvrd:
          type: string
          description: Type of memo post process option.
          enum:
          - None
          - Summary
          - Detail
        ElectronicBankingOpt:
          type: string
          description: "Options to indicate the available services for electronic Banking.\n\n**Note:** Refers to electronic banking restriction. "
          enum:
          - InquiryOnly
          - Enabled
          - Disable
        ReportGroupCode:
          type: string
          description: |-
            Client-defined code to group the accounts for reporting purposes.

            **Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI)
        DocDistributionOption:
          type: string
          description: "Client defined method to indicate the document distribution method used for processing the notices and statement forms.\n\n\n\n**Note:** This is a client-defined field. \n\nThe calling application needs to pass the values as have been configured on the core for the Financial Institution (FI)."
        NAICS:
          maxLength: 6
          type: string
          description: Six-digit North American Industry Classification System (NAICS) code used to indicate the type of customer based upon standard government definitions.
        CostCenter:
          type: string
          description: 'Cost center where activity of this account is reported. '
        RetentionOption:
          type: string
          description: "Retention option indicates how the account is processed when balance is zero. \n\n\n\n**Note:** This option overrides the Closed Retention Option in DDA Miscellaneous 3 Specifications."
          enum:
          - None
          - DoNotRetain
          - Retain
        AcctMemoData:
          type: array
          description: Details of the important alerts set to an account to view during account inquiry.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_AcctMemoData'
        IntDispData:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_IntDispData'
        OverdraftData:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_OverdraftData'
        FloatData:
          type: array
          description: Details of the float data for the check deposit.
          items:
            $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_FloatData'
        SvcChgData:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_SvcChgData'
        CommercialAnalysisData:
          $ref: '#/components/schemas/AccountModRequest_DepositAcctInfo_CommercialAnalysisData'
        EscheatDt:
          type: string
          description: Date at which unclaimed funds of an account are turned over to financial institution.
          format: date
        CollateralPledgeCode:
          type: string
          description: |-
            Unique identification code for amount pledged as collateral.

            **Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the Core for the Financial Institution (FI).
        EIM_NSFInstruction:
          type: string
          description: 'Type of action to be undertaken in case of an NSF that may have led to a dishonor of instrument. '
          enum:
          - Specification
          - Post
          - Return
          - PostandReturnNSF
        AutoNSFDecision:
          type: string
          description: "Auto NSF decision.  \n\n\n\n**Note:** This is a client-defined field. The calling application needs to pass the values as have been configured on the core for the Financial Institution (FI)."
      description: |-
        Details of the deposit account.

        **Note:** The service can only update the information associated directly to the account.

        It cannot update the underlying product
    AccountModResponse_AcctStatusRec_AcctStatus:
      required:
      - AcctStatusCode
      type: object
      properties:
        AcctStatusCode:
          type: string
          description: Status code of an account.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the account status is changed. \n\n\n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999"
      description: Status details of the account.
    AccountModResponse_AcctStatusRec:
      required:
      - AcctKeys
      - AcctStatus
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/AccountModRequest_AcctKeys'
        AcctStatus:
          $ref: '#/components/schemas/AccountModResponse_AcctStatusRec_AcctStatus'
      description: Details of the account status record in response to the update operation.
