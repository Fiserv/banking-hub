---
openapi: 3.0.1
info:
  title: Account Service
  description: The account service helps to create and manage product accounts serviced by the financial institutions. It is also used to retrieve information about the existing accounts and maintain information of new accounts.
  version: 11.0.0_PRC-Add_CDA
servers:
- url: /
paths:
  /acctservice/acctmgmt/accounts:
    post:
      tags:
      - Add Account
      summary: Add Account.
      description: "Add Account API creates a new Certificate of Deposit Account (CDA).<br>Precision has the ability to insert default values defined for the selected CDA Type (Type Code).<br>This API supports the Open Verification Method (OVM), as Precision defines, to insert the default values. <br>This means, while creating a new account with the fields sent in the Add Account request, the CDA default types defined within the Precision parameters may get overridden. The override depends on the setting of the New Account Override attribute for each field where a default value is defined.<br>Precision uses the default values to populate the fields whose default value is defined but not included in the Add Account request."
      operationId: addAccount
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAccountRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAccountResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAccountResponse'
      x-group-name: Account Service
      x-proxy-name: Add Account
      x-child-product-name: Accounts
      x-core: Precision-CDA
components:
  schemas:
    addAccountRequest:
      properties:
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        PartyAcctRelInfo:
          type: array
          description: Details of a relationship between party and account.
          items:
            $ref: '#/components/schemas/addAccountRequest_PartyAcctRelInfo'
        DepositAcctInfo:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo'
    addAccountResponse:
      required:
      - AcctStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        AcctStatusRec:
          $ref: '#/components/schemas/addAccountResponse_AcctStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          type: string
        TrnId:
          maxLength: 36
          type: string
        VendorId:
          type: string
          description: An identifier, supplied by Fiserv, that represents the vendor using  this API service.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "f262cfa4-9da4-4a10-b48c-2e947ce3e66c", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Client Application Name of the application making the service request (e.g. Architect, Commercial Center, etc.).
        Channel:
          type: string
          description: Indicates the channel used by the client application.
        ClientDateTime:
          type: string
          description: Client date and time as reported by the client application that is making the service request.
          format: date-time
        ClientTerminalSeqNum:
          maxLength: 36
          type: string
          description: Also known as Trace Number or Sequence in some systems. Used to allow the client terminal to set a unique identifier for the transaction. When used by a Network defined transaction the value of this identifier is typically set to narrow character of 12.
        OriginatorType:
          type: integer
          description: "\"The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.\nOriginator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial\ninstitution—home banking\""
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor locatio (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
        TerminalAddr2:
          maxLength: 64
          type: string
        TerminalAddr3:
          maxLength: 64
          type: string
        TerminalAddr4:
          maxLength: 64
          type: string
        TerminalCity:
          maxLength: 32
          type: string
        TerminalCounty:
          maxLength: 32
          type: string
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State Province. ISO 3166-2:US codes.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: Postal Code is ZipCode in the US.
        TerminalCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - ISO3166Numeric
          - ISO3166Alpha3
        TerminalCountryCodeValue:
          maxLength: 80
          type: string
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifies the acquirer of the authorization or financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          maxLength: 23
          type: string
          description: Merchant Number. For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: This is the date on which the transaction will be settled. Used by ISO 8583 (DE63)
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BranchIdent:
          maxLength: 22
          type: string
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          enum:
          - Manual
          - Auto
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: 
            Flag to indicate if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.
      description: Details of the exceptions that can be manually acknowledged by the client.
    OverrideExceptionType:
      title: OverrideExceptionType
      type: object
      properties:
        SubjectRole:
          type: string
          description: Role of the subject who is overriding the exception.
        SubjectIdent:
          maxLength: 36
          type: string
          description: Subject identification value to identify the subject who is overriding the exception.
        OvrdExceptionCode:
          maxLength: 40
          type: string
          description: Override exception code to be overridden. This can be the ServerStatusCode from the Message Status section.
        OvrdElement:
          $ref: '#/components/schemas/OvrdElementType'
    OvrdElementType:
      title: OvrdElementType
      type: object
      description: Information about the elements that corresponds to the override exception code.
      allOf:
      - $ref: '#/components/schemas/SubjectElementType'
      - type: object
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    addAccountRequest_PartyRef_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Short name key to identify the customer.

            Customer record should already exist in the system.
      description: "Unique information to identify the party record.\n\n**Note:** Send this aggregate for each customer associated to deposit account. For primary customer, set PartyAcctRelInfo/PrimaryOwnerInd as 'true'. Only one primary customer is allowed. "
    addAccountRequest_PartyRef:
      required:
      - PartyKeys
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/addAccountRequest_PartyRef_PartyKeys'
      description: Reference details of a party that is part of the relationship with the account.
    addAccountRequest_PartyAcctRelData:
      required:
      - PartyAcctRelType
      properties:
        PartyAcctRelType:
          type: string
          description: "Type of party relationship to account.\n\n\n\n**Note:** Values are client-defined. If values are not set up for transformation in ESF by financial institution, values are passed-through to the system.\n\nIf values are set up, ESF transforms the incoming value to the corresponding numeric value (0-99) based on transformations setup in ESF Xref for the FI (OrgId). \n\nType of relationship should be assigned to the secondary customers.  Any value sent for primary owner is ignored. \n\n\n\nNumeric values (0-99) passed in request or configured for transformation in ESF, should be set up as a valid Party-Account Relationship in Precision (Parameters-->Customer Info), for the FI - based on understanding with Precision team, at the time of onboarding. The FI (OrgId) can configure some client-defined values for transformation in ESF and additional client-defined values in that case, not set up in ESF, shall be passed-through to Precision. "
        OwnershipType:
          type: string
          description: |-
            Type of party ownership to an account.

            **Note:** Type of ownership. Primary customer is set to direct. Any value sent for the primary customer is ignored.
          enum:
          - Direct
          - Indirect
          - Fiduciary
          - Additional
    addAccountRequest_Liability:
      type: object
      properties:
        LiabilityPercent:
          type: number
          description: "Percentage of tax liability for which the party is responsible.\n\n**Note:** If 100% of tax reporting is done under primary customer, convert as 100. \n\nIf 100% of tax reporting is done under one of the secondary customers then convert as 0 for the primary and put the 100 under the secondary customer. \n\nIf tax reporting is broken up between primary and secondary then convert values accordingly."
      description: Details of the liability of owner on an account.
    addAccountRequest_PartyAcctRelInfo:
      properties:
        PartyRef:
          $ref: '#/components/schemas/addAccountRequest_PartyRef'
        PartyAcctRelData:
          type: array
          description: Details of the relationship of the party to the account.
          items:
            $ref: '#/components/schemas/addAccountRequest_PartyAcctRelData'
        PrimaryOwnerInd:
          type: boolean
          description: "Flag to indicate the owner is primary owner of an account.\n\n**Note:** Value for this field should be set to 'true' for only one party. \n\nIf value is set to 'true' for multiple parties, first instance of a party is assigned the role of primary owner.\n\nIf value of 'false' is set to all parties, first party assumed as primary owner should have PrimaryOwnerInd as 'false', else ESF would pick up the next party available (with PrimaryOwnerInd as blank/empty). \n\nFor a party assigned as Primary Owner for an account, should provide the PartyAcctRelType as a valid Account Owner/Signer relation, OwnershipType as 'Direct' and PrimaryOwnerInd as 'true' (or blank/empty).\n\nAll other parties are assigned as Secondary Owner."
        Liability:
          $ref: '#/components/schemas/addAccountRequest_Liability'
        NamePrintOption:
          type: string
          description: |-
            Option to indicate the position where secondary name or title is displayed on account or, separate notice/statement is printed.

            **Note:** Used to determine how a secondary customer prints on a notice or statement.  Also used to send a separate notice to secondary customer, and determine how the primary is printed on the notice.  If no value is provided, the default value of 'None' is considered.

            Following numeric values are supported:

            0 - None (display on inquiry only)

            1 - SecondLine (print in the second name line)

            2 - ReplaceNameAddrLine (print in place of name/address)

            3 - FirstAvailAddrLine (print on the first open line)

            4 - PrintOutsideWindow (print outside of address window)

            5 - SepNoticePrimLine1 (Separate Notice, Primary on Line 1)

            6 - SepNoticePrimLine2 (Separate Notice, Primary on Line 2)

            7 - SepNoticePrimAbove (Separate Notice, Primary Above)

            9 - OnlyforInquiry (Do Not Print Or Display on Inquiry)
        AndorOr:
          type: string
          description: |-
            Conjunctions used to print names before secondary name.

            **Note:** Used if a conjunction between primary and secondary customer is to be applied. Example:  Bob and Martha customer or Bob or Martha customer.  If no conjunction is desired the default will be none.
          enum:
          - AND
          - OR
          - None
    addAccountRequest_DepositAcctInfo_AcctIdent:
      properties:
        AcctIdentType:
          type: string
          description: |+
            Type of account identifiers.

          enum:
          - AcctNum
        AcctIdentValue:
          maxLength: 36
          type: string
          description: |-
            Account identification value.

            **Note:** There is a parameter available in PRC that allows the financial institution to have account numbers up to 17 digits in length.
    addAccountRequest_DepositAcctInfo_InitialAmount_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes."
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\nPresently only USD currency code is supported.\n\n"
      description: Details of currency code.
    addAccountRequest_DepositAcctInfo_InitialAmount:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            Example: 10.00

            **Note:** Refers to the amount of first deposit (opening balance).
        CurCode:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_InitialAmount_CurCode'
      description: |-
        Initial amount details of an account.

        For example, the origination amount for a loan+F34 or a certificate value of a time deposit account.
    addAccountRequest_DepositAcctInfo_Term:
      required:
      - TermUnits
      type: object
      properties:
        Count:
          type: integer
          description: Number of occurrences with respect to the specified unit value.
          format: int64
        TermUnits:
          type: string
          description: "Units to define the term of the account. \n\n\n\n"
          enum:
          - Days
          - Months
      description: Term details for a deposit account.
    addAccountRequest_DepositAcctInfo_RelationshipMgr:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of a relationship manager.

            **Note:** If officer code is activated, a value should be sent unless the financial institution has built a null (N/A) value.  Officer code is always activated and required or a null (N/A) should be built for that officer.
        RelationshipRole:
          type: string
          description: |-
            Role of a relationship manager.

            **Note:** Only SecondOfficer, ThirdOfficer or FourthOfficer should be sent if field is activated for the module.
          enum:
          - Officer
          - SecondOfficer
          - ThirdOfficer
          - FourthOfficer
    addAccountRequest_DepositAcctInfo_AddtlTitles:
      properties:
        AcctTitleType:
          type: string
          description: "Type of account title.\n\n\n\n**Note:** Maximum three titles on an account are supported.\n\nThis field refers to OwnershipType values 4 (Title), 5 (Title 2), or 6 (Title 3). Used to determine the position of AcctTitle text. Each AcctTitleType can be used only once. FirstTitle is required if SecondTitle is to be provided, and SecondTitle is required ThirdTitle is to be provided. "
          enum:
          - FirstTitle
          - SecondTitle
          - ThirdTitle
        AcctTitle:
          maxLength: 255
          type: string
          description: "Title of an account to indicate the ownership or responsibility of account holder and manner in which the ownership or responsibility is assigned. \n\nFor example, John Doe CUSTODIAN.\n\n**Note:** Max length: 40 characters."
        AcctTitleOption:
          type: string
          description: |+
            Printing option for the account title.

          enum:
          - SecondLine
          - FirstAvailAddrLine
          - ReplaceNameAddrLine
          - None
          - OnlyforInquiry
          - PrintOutsideWindow
        DBAInd:
          type: boolean
          description: |-
            Flag to indicate if the prefix DBA (Doing Business As) should be added to the title.

            **Note:** Only applicable to FirstTitle (4).  If DBA (Doing Business As) is to be included after the FirstTitle text, set this field to 'true'.
    addAccountRequest_DepositAcctInfo_ClientDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          type: string
          description: |-
            Unique data identifier to identify the client-defined data item.

            **Note:** Used to identify the user code or the user-defined fields for specified module and field type. Up to three CDA user-defined codes and a dynamic collection of CDA user -defined fields is supported. User-defined fields are grouped by data types and this is the interpretation of the prefixes such as, udl (Boolean), udi (Numeric), udd (Currency), udc (Alpha) and uddt (Date). Format for user-defined codes (eg. udl-[1..n]) requires the calling application to send the DataIdent as udl-1, udl-2, where 1..n to indicate values between 1 to 999 (i.e. udl-1, udl-2, ..... udl-999). So, occurrences of boolean user-defined field has DataIdent as udl-1, udl-2, etc. (similarly for Numeric (udi), Currency (udd), Alpha (udc) and Date (uddt) User Defined Codes).
          enum:
          - UserCode1
          - UserCode2
          - UserCode3
          - udl-[1..n]
          - udd-[1..n]
          - uddt-[1..n]
          - udi-[1..n]
          - udc-[1..n]
        Value:
          maxLength: 256
          type: string
          description: Value of the client-defined data item.
    addAccountRequest_DepositAcctInfo_AcctStmtData_StmtTimeFrame:
      properties:
        RecurType:
          type: string
          description: 'Recurrence type indicates the pattern of recurrence. '
          enum:
          - Cycle
        RecurInterval:
          type: integer
          description: |-
            Recurrence interval between two successive occurrences of statement generation.

            For example, if the recurrence type value is set to 'Monthly' and the recurrence interval set to '1', then there will be 1-month interval between the next statement.

            The default value is set to 1.



            **Note:** Statement cycle code. Values are client-defined.
          format: int64
    addAccountRequest_DepositAcctInfo_AcctStmtData:
      type: object
      properties:
        StmtTimeFrame:
          type: array
          description: Time frame details for the account statement.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_AcctStmtData_StmtTimeFrame'
      description: Details of the account statement processing data.
    addAccountRequest_DepositAcctInfo_NoticeData:
      properties:
        NoticeType:
          type: string
          description: |-
            Type of notice.





            **Note:** Client-defined numeric values, which should be defined/setup in system (Parameters>Certificates>NoticeHandling) are supported and these values are passed as-is by ESF to if received in request.



            If NoticeOption is 'NoNotice', notice code is set as '0'.

            If NoticeOption is 'GenerateNotice' and NoticeType is 'MaturityNotice', notice code '1' is set.

            If NoticeOption is 'GenerateNotice' and NoticeType is 'IntNotice', notice code '2' is set.

            If NoticeOption is 'GenerateNotice' and both NoticeType is 'RegularNotice', then notice code '3' is set.



            If NoticeType values 'MaturityDailyNotice', 'MaturityPriorNotice', 'IntDailyNotice' and 'IntPriorNotice' are sent in request, no notice code is set by ESF. Provide these values in request only if HandlingCode is also provided along with NoticeOption 'GenerateNotice' .
          enum:
          - IntNotice
          - MaturityNotice
          - RegularNotice
          - MaturityDailyNotice
          - MaturityPriorNotice
          - IntDailyNotice
          - IntPriorNotice
        NoticeOption:
          type: string
          description: "Option for account notice. \n\n"
          enum:
          - NoNotice
          - GenerateNotice
        HandlingCode:
          type: string
          description: "Handling code to specify the handling process of the notification and statement forms.\n\n**Note:** Values are client-defined and should be setup/defined in system (Parameters>Certificates>Notice Handling). \n\nIf NoticeOption is 'NoNotice' then HandlingCode is set as '0'.\n\nIf NoticeOption is 'GenerateNotice' the numeric value of HandlingCode sent in request is passed as-is by ESF to the system, if NoticeType values 'MaturityDailyNotice', 'MaturityPriorNotice', 'IntDailyNotice' or 'IntPriorNotice' are sent in request."
    addAccountRequest_DepositAcctInfo_IntRateData:
      type: object
      properties:
        BasedOnValue:
          type: number
          description: |-
            Value of the Index, prime or LIBOR.

            **Note:**  Should be provided for fixed rate CD.
        AccrualMethod:
          type: string
          description: |-
            Method of interest accrual.

            **Note:** This field refers to compounding method.
          enum:
          - Simple
          - Daily
          - Continuous
        DailyAccrual:
          type: string
          description: |+
            Option to determine the method of daily interest accrual.

          enum:
          - Standard366
          - Standard365
          - Standard360
          - Actual365
          - Actual360
          - Actual366
      description: Details of the interest rate processing for the account.
    addAccountRequest_DepositAcctInfo_StepRate:
      properties:
        Rate:
          type: number
          description: |-
            Current interest rate for the account.

            **Note:** Maximum 12-step rates are allowed.
    addAccountRequest_DepositAcctInfo_RateChangeData:
      properties:
        RateChangeControl:
          type: string
          description: "Type of interest rate. \n\n\n\n\n\n**Note:** Method of earning.\n\nValue of PeriodicReview refers to variable-periodic and OnSchedule refers to variable-scheduled. "
          enum:
          - BumpUp
          - Fixed
          - StepFreq
          - PeriodicReview
          - OnSchedule
        StepRate:
          type: array
          description: |-
            Collection of step rates.

            **Note:** Only applicable if value of RateChangeControl is 'StepFreq'. Provide only one occurrence of StepRate, along with the corresponding 'Rate' field in each 'RateChangeData' aggregate. Term/Frequency details of each step should also be sent in the corresponding RateChangeData aggregate occurrence (fields 'RateChangeRecurType' and 'RecurInterval'). Only the first instance of RateChangeDta should have the 'RateChangeIntervalOption' (Not to be sent along with each step). For each step record being set up, send a separate occurrence of 'RateChangeData' (along with the 'StepRate' and 'RateChangeRecurType'/'RecurInterval' fields as advised above). Number of 'RateChangeData' occurrences sent should be equal to the count of step records being set up.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_StepRate'
        RateChangeNbr:
          type: integer
          description: |-
            Number of rate changes per term.

            **Note:** Number of rate changes within the interval specified in RateChangeIntervalOption field.
          format: int64
        RateChangeIntervalOption:
          type: string
          description: |-
            Option to indicate if the number of rate changes is applicable to first term only, each term or is limited to rates specified in step rate table.



            **Note:** Should be provided in request only if variable rate CD have RateChangeControl 'BumpUp' or 'StepFreq'. RateTerm is applicable only for CD with RateChangeControl as 'StepFreq'. Should be sent only once for the StepFreq Certificate Deposit (in the first occurrence of RateChangeData) and not along with subsequent occurrences.
          enum:
          - FirstTermOnly
          - EachTerm
          - RateTerm
        BasedOnCode:
          type: string
          description: |-
            Internal index code, prime, LIBOR and so on.

            **Note:** Variable rate code is the client-defined rate code (numeric value). The rate code setup/defined should be passed as-is in request. Applicable for CDs with a variable rate (RateChangeControl - PeriodicReview/OnSchedule).
        BasedOnValue:
          type: number
          description: |-
            Value of the index, prime or LIBOR.

            **Note:** New rate only applicable for CD having RateChangeControl as 'OnSchedule'.
        RateVariance:
          type: number
          description: |-
            Percentage difference between interest rate and index rate to adjust the interest rate.

            **Note:** Rate offset for fixed rate CD or variable rate CD (RateChangeControl - PeriodReview/OnSchedule).
        ExpDt:
          type: string
          description: "Date after which client-defined data item expires.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Expiration date of the rate offset. Provide this field only for fixed rate CD (RateChangeControl - Fixed)."
          format: date
        FloorRate:
          type: number
          description: |-
            Rate of interest finalized from the lower range of rates.

            **Note:** Low Rate for the certificate deposit. Should be provided in request only if variable rate CD (RateChangeControl - PeriodReview/OnSchedule/BumpUp). Not applicable for fixed rate CD.
        CeilingRate:
          type: number
          description: |-
            Rate of interest finalized from the higher range of rates.

            **Note:** High Rate for the certificate deposit. Should be provided in request only if variable rate CD  (RateChangeControl - PeriodReview/OnSchedule/BumpUp). Not applicable for fixed rate CD.
        MinRateChange:
          type: number
          description: |-
            Minimum amount of rate change in interest as per review period.

            **Note:** Maximum rate that can be lowered in one rate change for variable rate CD (RateChangeControl - PeriodicReview/OnSchedule).
        MaxRateChange:
          type: number
          description: |-
            Maximum amount of rate change in interest as per review period.

            **Note:** Maximum rate that can be increased in one rate change for variable rate CD (RateChangeControl - PeriodicReview/OnSchedule).
        RateChangeRecurType:
          type: string
          description: |-
            Recurrency type to define the recurring change in interest rate.



            **Note:** The RateChangeRecurType and RecurInterval fields can be repeating if value of RateChangeControl is 'StepFreq. Separate occurrences of RateChangeData aggregate should be sent for each step, with the StepRate aggregate and RateChangeRecurType/RecurInterval fields.
          enum:
          - Monthly
          - Daily
          - BiWeekly
          - Weekly
          - SemiMonthly
        RecurInterval:
          type: integer
          description: |-
            Recurrence interval between two successive occurrences of statement generation.

            For example, if the recurrence type value is set to 'monthly' and the recurrence interval set to '1', then there will be 1-month interval between the next statement.

            The default value is set to 1.



            **Note:** Only applicable for variable rate (Scheduled) or step rate CD with RateChangeControl as 'SxtepFreq'.
          format: int64
        RecurStartDate:
          type: string
          description: "Date when the rate change becomes effective.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Only applicable for variable rate CD (RateChangeControl - OnSchedule)."
          format: date
        NextRateChangeDt:
          type: string
          description: "Next date at which the interest rate is to be adjusted.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Only applicable for a variable rate CD (RateChangeControl - OnSchedule)."
          format: date
    addAccountRequest_DepositAcctInfo_PostAddr:
      required:
      - AddrType
      properties:
        NameIdent:
          maxLength: 36
          type: array
          description: "Name identification value to identify the names related to the account address.\n\n**Note:** Used to identify primary customer's name of an account. Provide value '0' in request to use the customer-level name (which may be the CIF primary name or the CIF alternate name). Provide value '1-99' to identify the primary customer's alternate name to use for account correspondence. The alternate name should already exist for the customer. "
          items: {}
        AddressIdent:
          maxLength: 36
          type: string
          description: |+
            Unique address identification value.

            **Note:** This field is used to identify the primary customer's address to use for an account. Provide '0' in request to use the customer-level address (which may be the CIF Primary address or a CIF Alternate address). Provide '1-99' in request to identify the primary customer's alternate address to use for account correspondence. The alternate address should already exist for the customer. The effective date (start date) of alternate address to be associated to an account, cannot be updated with AcctAdd service. Consumer should call PartyMod service to update customer's information and address details.

        AddrType:
          type: string
          description: "Type of the address. \n\n\n\n**Note:** Address identified in AddressIdent field is the primary address associated to the deposit account."
          enum:
          - Primary
    addAccountRequest_DepositAcctInfo_WithholdingData:
      type: object
      properties:
        WithholdingType:
          type: string
          description: Withholding type to identify if withholding percent is FederalTax or StateTax.
          enum:
          - FederalTax
          - StateTax
        WithholdingCode:
          type: string
          description: |-
            Code to identify the withholding.

            **Note:** Withholding codes should be created in parameters.  Parameters>Bank Information>Withholding Percents.  Only values defined in a parameter can be used in the field.
      description: Details of the withholding data used to process interest withholdings.
    addAccountRequest_DepositAcctInfo_Fee:
      required:
      - FeeType
      properties:
        FeeIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of fee.

            **Note:** Penalty code values are client-defined.
        FeeType:
          type: string
          description: Type of fee.
          enum:
          - Penalty
        FeeOption:
          type: string
          description: |+
            Processing option for fee type.

          enum:
          - Charge
    addAccountRequest_DepositAcctInfo_RenewalData_RenewalFrequency:
      type: object
      properties:
        RecurType:
          type: string
          description: "Recurrence type indicates the pattern of recurrence. \n\n\n\n"
          enum:
          - Daily
          - Monthly
        RecurInterval:
          type: integer
          description: |+
            Recurrence interval between two successive occurrences of statement generation.

            For example, if the recurrence type value is set to 'Monthly' and the recurrence interval set to '1', then there will be 1-month interval between the next statement.

            The default value is set to 1.

          format: int64
      description: |-
        Time interval details between the renewals for an account.

        **Note:** The RenewalFrequency is displayed if a new earnings schedule for an account at renewal is built.
    addAccountRequest_DepositAcctInfo_RenewalData:
      required:
      - RenewalOption
      type: object
      properties:
        RenewalOption:
          type: string
          description: "Renewal option applied to the account. \n\n\n\n**Note:** Certificate deposit (CD) is not renewed by default and client application should provide the value AutomaticRenewal' in RenewalOption field to renew the account."
          enum:
          - AutomaticRenewal
          - NoRenewalAllowed
        NextRenewalDateOption:
          type: string
          description: |-
            Options to indicate next renewal date.

            **Note:** Changes in NextRenewalDateOption are supported only if DepositAcctInfo/IntDispData/PayOnMaturityInd is 'true'.
          enum:
          - LastMaturity
          - LastEarning
        RenewalTermCode:
          type: string
          description: |-
            Code to identify the renewal term.

            **Note:** Values are client-defined.
        NextEarningDateOption:
          type: string
          description: Option to indicate next earning date.
          enum:
          - LastEarning
          - OpenDate
          - LastDateOfPeriod
        RenewalFrequency:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_RenewalData_RenewalFrequency'
        ProdIntRateId:
          maxLength: 36
          type: string
          description: |-
            Code to specify how the interest rate and interest is calculated for the account.

            **Note:** Rate to be used for renewing the certificate.Values are client-defined.
        RateVariance:
          type: number
          description: |-
            Percentage difference between interest rate and index rate to adjust the interest rate.

            **Note:** Offset for the renewable rate.
      description: |-
        Details related to the account renewal.

        **Note:** If 'NextEarningDateOption' is provided, the calling application should provide the RenewalFrequency (with 'RecurType' and 'RecurInterval'). If this aggregate is not provided in the request, the certificate deposit account is not renewed.
    addAccountRequest_DepositAcctInfo_AccessLevelData:
      type: object
      properties:
        AccessLevelType:
          type: string
          description: Type of access level data.
        AccessLevelCode:
          type: string
          description: |-
            Code to identify the access level.

            **Note:** Security level is assigned to limit the access to accounts by certain employees. Generally, a higher security level is assigned to employee, dormant and written off accounts.  Security levels need to be set up in parameters.
      description: Details of access level data.
    addAccountRequest_DepositAcctInfo_IntDispData_IntDistAcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.

            **Note:** If the earnings handling is not equal to ACH this field refers to an existing account on the core. If the earnings handling is equal to ACH, input the account number to which the funds should be transferred.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** DDA and SDA are in the same module.  Provide the value of account that is to be used.  To know if an account is CDA or DDA/SDA, check the parameters for the ProductIdent. Title on the ProductIdent indicates the type of account.
          enum:
          - DDA
          - SDA
          - CDA
        FIIdentType:
          type: string
          description: |+
            Identification type of a financial institution.

          enum:
          - RoutingNum
        FIIdent:
          maxLength: 34
          type: string
          description: |-
            Unique identification number of a financial institution.

            **Note:** *Conditionally Required field*

            Only used if earnings handling is equal ACH.
      description: |-
        Unique information to identify the account record.

        **Note:** *Conditionally Required field*



        Required to be provided if DepositAcctInfo/IntDispData/IntDisposition is 'TransferToAcct' or 'ACHXfer'.

        Not required if IntDisposition is "AddToBal" or "Check" or "CheckToOther".
    addAccountRequest_DepositAcctInfo_IntDispData_IntDistAcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_IntDispData_IntDistAcctRef_AcctKeys'
        ACHTrnCode:
          type: string
          description: |-
            Code to identify the ACH transaction.

            **Note:** *Conditionally Required field*

            Only used if earnings handling is equal ACH.
        ACHReceivingType:
          type: string
          description: |-
            Type of ACH account to indicate if an account is commercial or consumer.

            **Note:** *Conditionally Required field*

            Only used if earnings handling is equal ACH.
          enum:
          - Person
          - Organization
        ACHCompanyEntryDesc:
          maxLength: 30
          type: string
          description: |-
            Description of ACH company entry.

            **Note:** If earnings are paid to an external account, value should be provided in this field.
        SameDayInd:
          type: boolean
          description: |-
            Flag to indicate if the ACH transaction is processed on the same day.

            **Note:** Only applicable if IntDisposition is ACHXfer. This feature is configured with respect to financial institute.
      description: Details of the interest distribution account reference indicating the object where the interest is distributed.
    addAccountRequest_DepositAcctInfo_IntDispData_IntPmtFrequency:
      properties:
        RecurType:
          type: string
          description: "Type of recurrence. \n\n\n\n"
          enum:
          - Monthly
          - Daily
        RecurInterval:
          type: integer
          description: |+
            Recurrence interval between two successive occurrences of interest.

            For example, if the recurrence type value is set to 'Monthly' and the recurrence interval set to '1', then there will be 1-month interval between the next statement.

            The default value is set to 1.

          format: int64
        EarningsSchedType:
          type: string
          description: Type of earning schedule used if interest disposition is defined in multiple schedules.
          enum:
          - Repeating
          - NonRepeating
          - NonRepeatingTerm
        EarningsSchedDateCode:
          type: string
          description: Code to identify the date of earning schedule.
          enum:
          - OpenDate
          - LastEarning
          - LastDatePeriod
        EarningsDt:
          type: string
          description: "Date of earnings calculated by the system.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Date is calculated by system and not required to be provided in request."
          format: date
    addAccountRequest_DepositAcctInfo_IntDispData:
      type: object
      properties:
        IntDisposition:
          type: string
          description: "Option to indicate the interest disposition. \n\n**Note:** Handling of earnings. If ACHXfer is selected, provide value in ACH fields."
          enum:
          - TransferToAcct
          - Check
          - AddToBal
          - ACHXfer
          - CheckToOther
        IntDistAcctRef:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_IntDispData_IntDistAcctRef'
        CustPayeeId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of payee customer used if payment is done by check to another form of customer owner.

            **Note:** Only applicable if IntDisposition is CheckToOther.
        PayOnMaturityInd:
          type: boolean
          description: Flag to indicate if the interest is to be paid on maturity.
        IntPmtFrequency:
          type: array
          description: |-
            Details of the time frame for pending interest rate payment.

            **Note:** Refers to schedule of earnings.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_IntDispData_IntPmtFrequency'
      description: Details of the interest disposition for the account.
    addAccountRequest_DepositAcctInfo:
      type: object
      properties:
        Brand:
          type: string
          description: "Name of the brand.\n\n**Note:** Values are client-defined. "
        AcctDtlStatus:
          type: string
          description: |-
            Current status of an account.





            **Note:** Status of an account.

            Values are defined by the system. Account is created in 'New' (0) status only. ESF AcctMod service can be used to update the account status. ESF does not validate the AcctAdd request. An error is returned if an invalid status is provided. Default status of 'New' is not overridden while creating an account.
          enum:
          - New - 0
        AcctIdent:
          type: array
          description: |-
            Unique identifier of an account record.

            **Note:** If AcctIdent is not provided, system generates a new account number for an account.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_AcctIdent'
        ProductIdent:
          maxLength: 42
          type: string
          description: |-
            Unique identifier of a product to indicate the processing options of account.

            **Note:** Product Identifier of product type (to set up CDA account).
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.

            **Note:** *Required field*
          enum:
          - CDA
        TaxIncentiveType:
          type: string
          description: "Type of tax incentive. \n\n\n\n**Note:** If an account is an IRA account, input the number of plan. Value provided should match an existing IRA plan. Plan number to be used should be set up by the financial institution at the time of onboarding, based on understanding with integration team. Plan number provided in request, that is to be associated to new account to be created, is passed as-is from ESF to core."
          enum:
          - 0-99
        InitialAmount:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_InitialAmount'
        OpenDt:
          type: string
          description: "Date on which the account record is created.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20\n\n**Note:** Input the date on which account was opened else, current date is considered as opening date by the system."
          format: date
        Term:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_Term'
        MaturityDt:
          type: string
          description: "Date of maturity of a deposit account.\n\n\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        RelationshipMgr:
          type: array
          description: Information about the financial institution officers who have management-related responsibilities of the account.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_RelationshipMgr'
        OriginatingBranch:
          maxLength: 32
          type: string
          description: "Branch that primarily created the account with the party.\n\n**Note:** Should be an existing branch on the core.  "
        Nickname:
          maxLength: 80
          type: string
          description: Name that customer can assign to the account for easy identification.
        AddtlTitles:
          type: array
          description: |-
            Details of additional titles required for an account.

            **Note:** Provide this aggregate in the AcctAdd request only if AddtlTitles (Title, Title 2 and Title 3) are required on the account. Customers to be associated with OwnershipType 'Direct', Indirect', 'Fiduciary' and 'Additional' to the account, should be sent in PartyAcctRelInfo aggregate(s).  For secondary customers, NamePrintOption and AndoOr settings, should also be sent in PartyAcctRelInfo aggregate(s).
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_AddtlTitles'
        AccountingMethod:
          type: string
          description: 'Method to define which accounts are integrated into the general ledger. '
          enum:
          - GeneralLedger
        AccountingValue:
          maxLength: 15
          type: string
          description: |-
            Numeric value associated with the chosen accounting method.

            **Note:** GL code to be set up in defaults for each product identifier, if desired.  All GL codes will need to be set up in parameters to be used in this field.
        ClassCode:
          type: string
          description: |-
            Code to group accounts for the purpose of processing and reporting.

            **Note:** User-defined field and can be used to define a customer, and can only be used to track opt in/opt out.
        ClientDefinedData:
          type: array
          description: Details of the client-defined data whose value, data type and definition are defined by the client or user.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_ClientDefinedData'
        AcctStmtData:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_AcctStmtData'
        NoticeData:
          type: array
          description: Details of account notice processing data.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_NoticeData'
        Rate:
          type: number
          description: |-
            Current interest rate for the account.

            **Note:** Total earning rate on the certificate deposit account.
        EffectiveRate:
          type: number
          description: Interest rate earned or paid on an investment, loan or other financial product due to the result of compounding over a given time period.
        IntRateData:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_IntRateData'
        RateChangeData:
          type: array
          description: |-
            Details of frequency for interest rate adjustment.

            **Note:** Provide this aggregate in request only for CD to specify earnings method and interest rate details.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_RateChangeData'
        PostAddr:
          type: array
          description: Postal address details of the account holder.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_PostAddr'
        WithholdingData:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_WithholdingData'
        Fee:
          type: array
          description: |-
            Details of recurring fee to identify the type and amount of fee charged.

            **Note:** To override the defaults and associate a fee with new CDA account, provide the Fee aggregate with FeeIdent/FeeType in request. If fee aggregate is not provided in request,  no fee plan (fees) can be linked to the CDA account.
          items:
            $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_Fee'
        ReportGroupCode:
          type: string
          description: |-
            Client-defined code to group the accounts for reporting purposes.

            **Note:** Provide the number assigned to customer in request. This number is not incremented and can be any numeric value derived from customer information file, but can be maintained at the account level.
        DocDistributionOption:
          type: string
          description: |-
            Client defined method to indicate the document distribution method used for processing the notices and statement forms.



            **Note:** Refers to DeliveryCode. Values are client-defined. After statement or notice is produced for an account, the system uses delivery code to determine which director class of service code is generated in the statement or notice footer.
        NAICS:
          maxLength: 6
          type: string
          description: |-
            Six-digit North American Industry Classification System (NAICS) code used to indicate the type of customer based upon standard government definitions.

            **Note:** Code to categorize the account based on the primary activity of account owner. Values are defined in parameters.
        RenewalData:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_RenewalData'
        CallReportCode:
          type: string
          description: |-
            Code to identify the call report.

            **Note:** *Required field*

            The CallReportCode can be set up in defaults based on the ProductIdent, if desired.

            Values are to set up in parameters.
        AccessLevelData:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_AccessLevelData'
        IntDispData:
          $ref: '#/components/schemas/addAccountRequest_DepositAcctInfo_IntDispData'
      description: |-
        Details of the deposit account.

        **Note:** Use this aggregate to add a new certificate deposit account.
    addAccountResponse_AcctStatusRec_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md" target="_blank" title="Click to open in a new tab"> Glossary</a>.
          enum:
          - CDA
      description: Unique information to identify the account record.
    addAccountResponse_AcctStatusRec_AcctStatus:
      required:
      - AcctStatusCode
      type: object
      properties:
        AcctStatusCode:
          type: string
          description: Status code of an account.
          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the account status is changed. \n\n\n\nFormat: yyyy-MM-ddTHH:mm:ss.sss\n\nExample: 2021-01-31T23:59:59.999"
      description: Status details of the account.
    addAccountResponse_AcctStatusRec:
      required:
      - AcctKeys
      - AcctStatus
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/addAccountResponse_AcctStatusRec_AcctKeys'
        AcctStatus:
          $ref: '#/components/schemas/addAccountResponse_AcctStatusRec_AcctStatus'
      description: Details of the updated status of the account.
