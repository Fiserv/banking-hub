---
openapi: 3.0.1
info:
  title: Auto Enrollment Service
  description: |-
    Auto Enrollement Service supports operations to manage enrollment or subscription of accounts to be part of Bank Administration Institute (BAI) file format used by financial institutions to transfer financial data between the core banking system and client applications.
    This service is only supported by Signature clients that have installed the BAI File Enrollment Solution (this is not a base feature in Signature). Every client application will have a BAICode that identifies them.  In current functionality the only enrollment allowed is Arch_Extract which is  used by the Architect Online Banking Client Application.
  version: 11.0.0_SIG
servers:
- url: /
paths:
  /autoenrollmentservice/acctmgmt/autoenrollment:
    post:
      tags:
      - Add Auto Enrollment
      summary: Add Auto Enrollment.
      description: "Add Auto Enrollment API creates an auto enrollment. This API allows a client application to send one or more accounts in a single request for enrollment. There is no limitation on the number of the accounts to be sent for enrollment.<br>The request may contain the value of the customer permanent identifier (customer key) to identify that a card must be created or updated in Signature using the customer key as a reference. The accounts sent in the same request will be linked to the newly created or updated card in Signature.<br>This API supports only those Signature Clients that have installed the Bank Administration Institute (BAI) File Enrollment Solution (this is not a base feature in Signature). Every client application will have a BAICode that identifies them. In current functionality, only enrollment allowed is Arch_Extract, which the Architect Online Banking Client Application uses.<br><b>Note:<b> Financial Institutions uses Bank Administration Institute (BAI) file format to transfer financial data. Client applications enroll or subscribe accounts to be a part of this file extract."
      operationId: AutoEnrollmentAddOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoEnrollmentAddOperRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoEnrollmentAddOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoEnrollmentAddOperResponse'
      x-group-name: Auto Enrollment Service
      x-proxy-name: Add Auto Enrollment
      x-child-product-name: Operations and Servicing
      x-core: Signature
components:
  schemas:
    AutoEnrollmentAddOperRequest:
      required:
      - AutoEnrollmentInfo
      properties:
        AutoEnrollmentInfo:
          type: array
          description: "Details of the auto enrollment of an account.\n\n**Note:** It is important to provide the account details and enrollment type to enroll an account. It is required to create one AutoEnrollmentInfo for each account to enroll.\n\nThe request may contain the value of the customer permanent identifier (customer key) to identify that a card must be created or updated in Signature using the customer key as a reference.\n\nOnly one customer key (PartyId) must be sent in a single AutoEnrollmentAdd request. \n\nThe accounts sent in the same request along with the customer key must have a valid relationship to the customer(Party) and will be linked to the newly created or updated card in Signature. \n\n\n\n"
          items:
            $ref: '#/components/schemas/AutoEnrollmentAddOperRequest_AutoEnrollmentInfo'
    AutoEnrollmentAddOperResponse:
      required:
      - AutoEnrollmentStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        AutoEnrollmentStatusRec:
          type: array
          description: "Details of the auto enrollment status record used in responses to return results from an add, modify or delete operation on the object. \n\n**Note:** The response provides an itemized list of each account's enrollment outcome. There will be one AutoEnrollmentStatusRec for each account in the request."
          items:
            $ref: '#/components/schemas/AutoEnrollmentAddOperResponse_AutoEnrollmentStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggregate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    AutoEnrollmentAddOperRequest_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: "Unique identification number of an account record.\n\n**Note:** If an invalid account identifier is provided, then the account will be reported as 'Failed' in the response. \n\n\n\n\n\n"
        AcctType:
          type: string
          description: "Type of an account. \n\n\n\nFor more information on account types, refer to the Account Types section in <a href=\"../docs?path=docs/api-glossary.md\"  title=\"Click to open\"> Glossary</a>.\n\n**Note:** If any other account type is provided, then the account will be reported as 'Failed' in the response.  \n\n\n\n"
          enum:
          - DDA
          - SDA
          - CDA
          - LOAN
      description: "Unique information to identify the account record. \n\n**Note:** If the Account is already enrolled for the auto enrollment type, then the account will be reported as 'Valid' in the response. "
    AutoEnrollmentAddOperRequest_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: "Unique identification number of an party record.\n\n**Note:** Refers to the customer permanent identifier (customer key). \n\nWhen a customer permanent identifier (customer key) is sent in the request, then Signature core will create or update the EFT card using that associated customer permanent identifier (customer key) as a reference. "
      description: "Unique information to identify the party record. \n\n**Note:** Only one occurrence of PartyKeys can be sent in request and should be sent in a separate AutoEnrollmentInfo instance. That is, the AutoEnrollmentInfo instance having the PartyKeys, should not have any of occurrence of AcctKeys. \n\nIn case multiple PartyKeys aggregates are sent in request, ESF will process only the first PartyKeys instance."
    AutoEnrollmentAddOperRequest_AutoEnrollmentInfo:
      properties:
        AcctKeys:
          $ref: '#/components/schemas/AutoEnrollmentAddOperRequest_AcctKeys'
        PartyKeys:
          $ref: '#/components/schemas/AutoEnrollmentAddOperRequest_PartyKeys'
        AutoEnrollmentType:
          type: string
          description: "Type of auto enrollment. \n\n**Note:** The vlaue Arch_Extract should be provided in all AutoEnrollmentInfo aggregates (having the Accounts is enrolled) and also within the aggregate which has the PartyId.\n\n\n\nSignature supports if this service will enroll to any other auto enrollment type. So, client application must ensure that the correct value is sent in this field. \n\n"
          enum:
          - Arch_Extract
    AutoEnrollmentAddOperResponse_AutoEnrollmentKeys_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: "Unique identification number of an party record.\n\n**Note:** Refers to the customer permanent identifier (customer key). "
      description: 'Unique information to identify the party record. '
    AutoEnrollmentAddOperResponse_AutoEnrollmentKeys_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: "Unique identification number of an account record.\n\n\n\n\n\n\n\n**Note:** Refers to the account number. "
        AcctType:
          type: string
          description: "Type of an account. \n\n\n\nFor more information on account types, refer to the Account Types section in <a href=\"../docs?path=docs/api-glossary.md\"  title=\"Click to open\"> Glossary</a>."
          enum:
          - CDA
          - DDA
          - SDA
          - LOAN
      description: 'Unique account information to identify the account record. '
    AutoEnrollmentAddOperResponse_AutoEnrollmentKeys:
      required:
      - AutoEnrollmentType
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/AutoEnrollmentAddOperResponse_AutoEnrollmentKeys_PartyKeys'
        AcctKeys:
          $ref: '#/components/schemas/AutoEnrollmentAddOperResponse_AutoEnrollmentKeys_AcctKeys'
        AutoEnrollmentType:
          type: string
          description: 'Type of auto enrollment. '
          enum:
          - Arch_Extract
      description: 'Unique information to identify the auto enrollment record. '
    AutoEnrollmentAddOperResponse_AutoEnrollmentStatus:
      required:
      - AutoEnrollmentStatusCode
      type: object
      properties:
        AutoEnrollmentStatusCode:
          type: string
          description: Code to identify the current status of the auto enrollment.
          enum:
          - Valid
          - Failed
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the auto enrollment status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-01-31T23:59:59.999"
      description: 'Details of the auto enrollment status. '
    AutoEnrollmentAddOperResponse_AutoEnrollmentStatusRec:
      required:
      - AutoEnrollmentKeys
      - AutoEnrollmentStatus
      properties:
        AutoEnrollmentKeys:
          $ref: '#/components/schemas/AutoEnrollmentAddOperResponse_AutoEnrollmentKeys'
        AutoEnrollmentStatus:
          $ref: '#/components/schemas/AutoEnrollmentAddOperResponse_AutoEnrollmentStatus'
