---
openapi: 3.0.0
info:
  title: Client Field Specification Service
  description: |
    Client Defined Field Specification service supports an inquiry operation to streamline the process of maintaining the client defined fields.
  version: 11.0.0
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/ClientFieldSpecificationService/11.0.0_Secured
  description: SwaggerHub API Auto Mocking
- url: http://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/ClientFieldSpecificationService/11.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /clientFieldSpec: {}
  /clientFieldSpec/{dataApplType}: {}
  /clientFieldSpec/secured:
    post:
      summary: Retrieves Client Field Specifications Secured
      description: Retrieves the client-defined field specifications such as field label, field data type, field length etc.
      operationId: ClientFieldSpecInfoSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains authentication and client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientFieldSpecInqRqType'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientFieldSpecInqRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientFieldSpecInqRsType'
components:
  schemas:
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          type: string
        TrnId:
          maxLength: 30
          type: string
        VendorId:
          type: string
          description: An identifier, supplied by Fiserv, that represents the vendor using  this API service.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Client Application Name of the application making the service request (e.g. Architect, Commercial Center, etc.).
        Channel:
          type: string
          description: Indicates the channel used by the client application.
        ClientDateTime:
          type: string
          description: Client date and time as reported by the client application that is making the service request.
          format: date-time
        ClientTerminalSeqNum:
          maxLength: 36
          type: string
          description: Also known as Trace Number or Sequence in some systems. Used to allow the client terminal to set a unique identifier for the transaction. When used by a Network defined transaction the value of this identifier is typically set to narrow character of 12.
        OriginatorType:
          type: integer
          description: The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum lenght of 4. Originator Type codes that apply to financial institutions are:- • 6010 - Financial institution—bank, savings and loan (S and L), or credit union • 6011 - Financial institution—ATM • 6012 - Financial institution—merchandise sale • 6999 - Financial institution—home banking
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor locatio (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
        TerminalAddr2:
          maxLength: 64
          type: string
        TerminalAddr3:
          maxLength: 64
          type: string
        TerminalAddr4:
          maxLength: 64
          type: string
        TerminalCity:
          maxLength: 32
          type: string
        TerminalCounty:
          maxLength: 32
          type: string
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State Province. ISO 3166-2:US codes.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: Postal Code is ZipCode in the US.
        TerminalCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - ISO3166Numeric
          - ISO3166Alpha3
        TerminalCountryCodeValue:
          maxLength: 80
          type: string
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifies the acquirer of the authorization or financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          maxLength: 23
          type: string
          description: Merchant Number. For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: This is the date on which the transaction will be settled. Used by ISO 8583 (DE63)
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BranchIdent:
          maxLength: 22
          type: string
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          enum:
          - Manual
          - Auto
    ClientFieldSpecStatusCodeType:
      title: ClientFieldSpecStatusCodeType
      type: string
      description: |-
        Status code of a client field specification. <br> Some of the valid values are:
          - Valid
          - Deleted
      enum:
      - Deleted
      - Valid
    DataApplTypeType:
      title: DataApplTypeType
      type: string
      description: |-
        Type of Data Application. <br> Valid values are:
          - CDA
          - DDA
          - LOAN
          - Party
          - SDA
      enum:
      - ALL
      - CDA
      - CCA
      - COLL
      - CRD
      - DDA
      - LOAN
      - LOC
      - RET
      - Party
      - PartyOrg
      - PartyPer
      - LEAS
      - SDA
      - DDL
      - IRA
      - RRA
      - MLN
      - CLA
      - EQU
      - GLA
      - ILA
      - EXT
      - LIP
      - CLOC
      - MLA
      - PBA
      - PORT
      - SDB
      - MMA
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    EnumDataType:
      title: EnumDataType
      required:
      - EnumValue
      - EnumValueDesc
      type: object
      properties:
        EnumValue:
          maxLength: 80
          type: string
          description: '[FSVR]Enumeration Value.'
        EnumValueDesc:
          maxLength: 255
          type: string
          description: '[FSVR]Enumeration Description. User friendly description of the Enumeration Value'
    ClientFieldSpecInfoType:
      title: ClientFieldSpecInfoType
      type: object
      properties:
        DataGroupType:
          maxLength: 80
          type: string
          description: Type of grouping for Data Application and Data Class
        DataType:
          type: string
          description: |-
            Client-defined data type. <br> Valid values are:
              - Alpha
              - Currency
              - CurrencySymbol
              - Date
              - Numeric
              - NumericSymbol
              - Rate
              - RateSymbol
        DataLength:
          type: integer
          description: Maximum allowed length of the client-defined data entered in the Value field
          format: int64
        LastUpdateDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: 'Date and time when the client field specification was updated. <br> Format: yyyy-MM-ddTHH:mm:ss.SSS'
          example: 2021-01-31T23:59:59.999
        Desc:
          maxLength: 100
          type: string
          description: Description of the client defined data
        RequiredFlag:
          type: boolean
          description: Flag to indicate if a data value is required for the client-defined data
        SearchFlag:
          type: boolean
          description: Flag to indicate if the client-defined data can be searched
      description: Details of the client field specification
    RecCtrlInType:
      title: RecCtrlInType
      type: object
      properties:
        MaxRecLimit:
          type: integer
          description: Maximum Record Limit. This is the maximum number of records that the server should add to the result set which is available to satisfy this request.
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: Cursor. Next Record Pointer Included in the response only if additional records are available.
    ClientFieldSpecSelType:
      title: ClientFieldSpecSelType
      required:
      - DataApplType
      type: object
      properties:
        DataApplType:
          $ref: '#/components/schemas/DataApplTypeType'
      description: Selection criteria to retrieve the Client Field Specification records
    ClientFieldSpecInqRqType:
      title: ClientFieldSpecInqRqType
      required:
      - ClientFieldSpecSel
      type: object
      properties:
        RecCtrlIn:
          $ref: '#/components/schemas/RecCtrlInType'
        ClientFieldSpecSel:
          $ref: '#/components/schemas/ClientFieldSpecSelType'
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    RecCtrlOutType:
      title: RecCtrlOutType
      required:
      - SentRecCount
      type: object
      properties:
        SentRecCount:
          type: integer
          description: Total number of records that matched the selection criteria and returned in the response message
          format: int64
      description: Information retrieved for the criteria specified in the RecCtrlIn aggregate of the request message
    SvcIdentType:
      title: SvcIdentType
      type: object
      properties:
        SvcProviderName:
          maxLength: 1024
          type: string
          description: Service Provider Name is a globally unique identifier for a service provider which indicates the location of the Service Provider that gave the error.
        SvcNbr:
          maxLength: 36
          type: string
          description: Service Number.
        SvcName:
          maxLength: 32
          type: string
          description: Service Name.
    ClientFieldSpecKeysType:
      title: ClientFieldSpecKeysType
      required:
      - ClientFieldSpecId
      type: object
      properties:
        DataApplType:
          $ref: '#/components/schemas/DataApplTypeType'
        DataClassType:
          type: string
          description: |-
            Client-defined class type of the data. <br> Some of the valid values are:
              - Contact
              - Name
        ClientFieldSpecId:
          maxLength: 36
          type: string
          description: Unique identification number of client field specification record
      description: Unique information to identify the client field specification record
    ClientFieldSpecStatusType:
      title: ClientFieldSpecStatusType
      required:
      - ClientFieldSpecStatusCode
      type: object
      properties:
        ClientFieldSpecStatusCode:
          $ref: '#/components/schemas/ClientFieldSpecStatusCodeType'
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: 'Effective date and time when the client field specification status is changed. <br> Format: yyyy-MM-ddTHH:mm:ss.SSS'
          example: 2021-01-31T23:59:59.999
      description: Current status of the client field specification object
    ClientFieldSpecRecType:
      title: ClientFieldSpecRecType
      required:
      - ClientFieldSpecInfo
      - ClientFieldSpecKeys
      - ClientFieldSpecStatus
      type: object
      properties:
        ClientFieldSpecKeys:
          $ref: '#/components/schemas/ClientFieldSpecKeysType'
        ClientFieldSpecInfo:
          $ref: '#/components/schemas/ClientFieldSpecInfoType'
        ClientFieldSpecStatus:
          $ref: '#/components/schemas/ClientFieldSpecStatusType'
      description: Details of the client field specification record returned in the response for the specified search criteria
    ClientFieldSpecInqRsType:
      title: ClientFieldSpecInqRsType
      required:
      - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/RecCtrlOutType'
        ClientFieldSpecRec:
          type: array
          description: Details of the client field specification record returned in the response for the specified search criteria
          items:
            $ref: '#/components/schemas/ClientFieldSpecRecType'
