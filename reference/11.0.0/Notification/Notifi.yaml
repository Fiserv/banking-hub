openapi: 3.0.0
info:
  title: Notifications and Preferences API
  description: Registration services to onboard users and preferences allowing them to receive transactional and security notifications in their email, SMS and push channels.
  contact:
    name: Todd Lupiani
    email: todd.lupiani@fiserv.com
  version: 11.0.0
servers:
- url: //openbanking-uat-alerthub.apps.fog.onefiserv.net/
paths:
  /openbanking/api/v{version}/history/{userId}:
    get:
      tags:
      - History
      summary: Retrieves alert history of an enrolled user for the specified date range
      description: Alert History allows the admin to view a record of Notifi alerts that were delivered for an individual user. The record contains date/time, type of alert and the delivery end point the alert was sent to. The admin also has an option to resend the alert to user.
      operationId: RetrieveHistory
      parameters:
      - name: userId
        in: path
        description: Unique identification of a user enrolled to Notifi
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: start
        in: query
        description: Start date and time range to retrieve the alert records delivered to a user
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        description: End date and time range to retrieve the alert records delivered to a user
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: version
        in: path
        description: Version of requested API
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1.0"
      - name: Authorization
        in: header
        description: Authorization Header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
            application/xml:
              schema:
                $ref: '#/components/schemas/History'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "502":
          description: Server Error
        "504":
          description: Server Error
      x-group-name: Notifi
      x-proxy-name: Get History
  /openbanking/api/v{version}/tenants/{organizationId}:
    get:
      tags:
      - Tenants
      summary: Retrieve the organization tenant
      description: Retrieves the organization tenant details.
      operationId: RetrieveOrganization
      parameters:
      - name: organizationId
        in: path
        description: Identification number to identify the organization of tenant.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 1234
      - name: version
        in: path
        description: Version of API
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1.0"
      - name: Authorization
        in: header
        description: Authorization Header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Tenant'
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
            text/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "502":
          description: Server Error
        "504":
          description: Server Error
      x-group-name: Notifi
      x-proxy-name: Get Tenant
  /openbanking/api/v{version}/token:
    post:
      tags:
      - Token
      summary: Generates a taken for a scoped organization using *clientId* and *secret*
      operationId: GenerateToken
      parameters:
      - name: clientId
        in: query
        description: Unique identification of client for which a token is to be generated
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientSecret
        in: query
        description: Client secret
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: organizationId
        in: query
        description: Identification of an organization
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: path
        description: Version of API
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1.0"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Token'
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            text/json:
              schema:
                $ref: '#/components/schemas/Token'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "502":
          description: Server Error
        "504":
          description: Server Error
      x-group-name: Notifi
      x-proxy-name: Generate Token
  /openbanking/api/v{version}/users/{userId}:
    get:
      tags:
      - Users
      summary: Retrieve an enrolled user within Notifi
      operationId: RetrieveUser
      parameters:
      - name: userId
        in: path
        description: The unique identifier for this user within Notifi
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: version
        in: path
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1.0"
      - name: Authorization
        in: header
        description: Authorization Header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "502":
          description: Server Error
        "504":
          description: Server Error
      x-group-name: Notifi
      x-proxy-name: Get User
    put:
      tags:
      - Users
      summary: "Update the user enrollment.\r\n\r\nOmit any fields on the user that you wish to be ignored during update\r\n\r\nAny change to the user will be updated.\r\nAny endpoints supplied will be added or updated. Only Email and SMS endpoints can have their delivery details modified\r\nAny subscriptions supplied will be either added or updated."
      operationId: UpdateUser
      parameters:
      - name: userId
        in: path
        description: The unique identifier of the user to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: version
        in: path
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1.0"
      - name: Authorization
        in: header
        description: Authorization Header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The updated user enrollment data
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "502":
          description: Server Error
        "504":
          description: Server Error
      x-group-name: Notifi
      x-proxy-name: Update User
    delete:
      tags:
      - Users
      summary: Deletes the user enrollment.
      operationId: Delete
      parameters:
      - name: userId
        in: path
        description: The user to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: version
        in: path
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1.0"
      - name: Authorization
        in: header
        description: Authorization Header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "502":
          description: Server Error
        "504":
          description: Server Error
      x-group-name: Notifi
      x-proxy-name: Delete User
  /openbanking/api/v{version}/users/search:
    post:
      tags:
      - Users
      summary: "Search for an enrolled user within Notifi based on the specified properties\r\n\r\nSearchable properties are:\r\nBankingUserId\r\nRelationship\r\nEventUserId"
      operationId: SearchUser
      parameters:
      - name: version
        in: path
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1.0"
      - name: Authorization
        in: header
        description: Authorization Header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The user details to search by.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "502":
          description: Server Error
        "504":
          description: Server Error
      x-group-name: Notifi
      x-proxy-name: Search User
  /openbanking/api/v{version}/users:
    post:
      tags:
      - Users
      summary: Creates a new User Enrollment. Optionally, Endpoints can be added during enrollment. They will automatically be in an enabled and activated state.
      operationId: CreateUser
      parameters:
      - name: version
        in: path
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1.0"
      - name: Authorization
        in: header
        description: Authorization Header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The user to be enrolled.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: Success
          content:
            text/plain:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "502":
          description: Server Error
        "504":
          description: Server Error
      x-group-name: Notifi
      x-proxy-name: Add User
components:
  schemas:
    History:
      type: object
      properties:
        alerts:
          uniqueItems: false
          type: array
          description: List of alerts delivered to a user
          items:
            $ref: '#/components/schemas/Alert'
      description: History of alerts delivered to a user for the requested date range
    Alert:
      type: object
      properties:
        userId:
          type: integer
          description: Identification number of a user
          format: int64
        subscriptionId:
          type: integer
          description: Identification number of a subscription for which the alert is triggered
          format: int64
        tenantId:
          type: integer
          description: Identification number of a tenant to which user is associated
          format: int64
        organizationId:
          type: string
          description: Organization identification of the tenant
        payloadId:
          type: string
          description: Payload identifier that triggered the alert
        alertType:
          type: string
          description: |-
            Type of the generated alert. <br> Valid values are:
              - DEBITTRANS (Debit transaction was posted)
              - TXNGREATERTHAN (Transaction over threshold amount)
              - BELOWBALTHRESH (Account balance below threshold)
              - DEPOSITTRANS  (Credit transaction was posted)
              - DEPOSITPOSTED (Deposit was credited to an account)
        description:
          type: string
          description: Description of the alert type
        timeZone:
          type: string
          description: Time zone of a user specified by the tenant as per the country to which tenant belongs
        endpointType:
          type: string
          description: Type of the activated alert endpoint such as Push Notification, SMS, and Email
          example: Email
        emailAddress:
          type: string
          description: Email address to which the alert is delivered
          example: john.doe@example.com
        phoneNumber:
          type: string
          description: Phone number to which the alert is delivered
        device:
          $ref: '#/components/schemas/Device'
        message:
          type: string
          description: The Message that was delivered to the user. Emails will be in HTML
        deliveredDate:
          type: string
          description: The Date this alert was delivered. It will be in the TimeZone of the User.
          format: date-time
        deliveryStatus:
          type: string
          description: The status of the Delivery
      description: List of alerts delivered to a user
    Device:
      type: object
      properties:
        appId:
          type: string
          description: Identifier of an application that received the push notification
        deviceId:
          type: string
          description: Unique identification number of the device.#The identifier for the device
        deviceType:
          type: string
          description: |-
            Type of the device. <br> Valid values are:
              - GCM (Android device)
              - APNS (iOS device)
        deviceName:
          type: string
          description: Given name of this device
          example: Apple iPhone 12
    Tenant:
      type: object
      properties:
        tenantId:
          type: integer
          description: Identification number of a tenant
          format: int64
          example: 1234
        organizationId:
          type: string
          description: Organization identification for the tenant
        name:
          type: string
          description: Configured name of this tenant
        timeZone:
          type: string
          description: 'Time zone of the tenant. <br> Note: The default time zone is xxx. However, user can change the default time zone per their preference.'
        shortCode:
          type: string
          description: Code used to send the domestic SMS alerts to the users
        internationalShortCode:
          type: string
          description: Code used to send the international SMS alerts to the users
        emailFrom:
          type: string
          description: Email address that is used to send the alerts to the users. This email Id generally refers to No-reply email
        activationCodeDurationInMinutes:
          type: integer
          description: Duration in minutes for which an activation code remains usable once generated for the endpoint activation process
          format: int32
        enabled:
          type: boolean
          description: Flag to indicate if whether the tenant is enabled or disabled for the subscription of Notifi service
        alertTypes:
          uniqueItems: false
          type: array
          description: Type of alerts associated with the tenant
          items:
            $ref: '#/components/schemas/AlertType'
        endpointTypes:
          uniqueItems: false
          type: array
          description: The endpoint types this tenant has associated
          items:
            $ref: '#/components/schemas/EndpointType'
      description: Details of tenant associated with the Notifi Alerts service
    AlertType:
      type: object
      properties:
        name:
          type: string
          description: Name of the alert type
        description:
          type: string
          description: Description of the alert type
        category:
          type: string
          description: Category to which the alert type is associated
        accountLevel:
          type: boolean
          description: Flag to indicate if the alert activity is configured to the user account
        thresholdNeeded:
          type: boolean
          description: Flag to indicate if the threshold value is assigned to the number of alerts triggered for a user
        enabled:
          type: boolean
          description: Flag to indicate if the alert type is enabled
        endpointTypes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/EndpointType'
    EndpointType:
      type: object
      properties:
        name:
          type: string
          description: "Name of the endpoint type. <br>\n  Valid values are:\n  -  Email\n  -  SMS\n  -  Push          "
        enabled:
          type: boolean
          description: Flag to indicate if the endpoint type is enable
      description: An endpoint type
    Token:
      type: object
      properties:
        clientId:
          type: string
          description: The unique identifier of the Client this token is generated with
        scopedOrganizationId:
          type: string
          description: The organizationId that the client has scoped its token to
        scopedTenantId:
          type: integer
          description: The tenantId that the client has scoped its token to
          format: int64
        originatingTenantId:
          type: integer
          description: The tenantId that is diretly assoicated with the client
          format: int64
        accessToken:
          type: string
          description: The generated access token
        expiry:
          type: string
          description: The time the AccessToken expires
          format: date-time
    User:
      type: object
      properties:
        userId:
          type: integer
          description: The unique identifier of the user within Notifi
          format: int64
        tenantId:
          type: integer
          description: The tenant for which this user belongs
          format: int64
        organizationId:
          type: string
          description: The organization of the tenant
        bankingUserId:
          type: string
          description: The BankingUserId can be used to identify a user through search
        eventUserId:
          type: string
          description: The EventUserId can be used to identify a user through search
        relationship:
          type: string
          description: The Relationship can be used to identiy a user through search (Retail, Business)
        timeZone:
          type: string
          description: The timezone the user is in. All dates will be displayed in this time zone
        enabled:
          type: boolean
          description: Whether the user is enabled or disabled
        endpoints:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
        subscriptions:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
      description: The Notifi user enrollment
    Endpoint:
      type: object
      properties:
        endpointId:
          type: integer
          description: The unique identifier for this Endpoint within Notifi
          format: int64
        userId:
          type: integer
          description: The User who owns this Endpoints
          format: int64
        endpointType:
          type: string
          description: The type of endpoint
        emailAddress:
          type: string
          description: The email address associated with this endpoint. If EndpointType is Email, this must be set.
        phoneNumber:
          type: string
          description: The phone number associated with this endpoint. If EndpointType is Sms, this must be set.
        region:
          type: string
          description: The region of the phone number. If EndpointType is Sms, this must be set.
        device:
          $ref: '#/components/schemas/Device'
        enabled:
          type: boolean
          description: Whether this endpoint is enabled or disabled
        activated:
          type: boolean
          description: Whether the user has gone through the activation process
        registered:
          type: boolean
          description: Whether the user has gone through the registration process
        deleted:
          type: boolean
          description: Whether the user has deleted this endpoint
      description: An Endpoint to receive alerts
    Subscription:
      type: object
      properties:
        subscriptionId:
          type: integer
          description: The unique identifier of the subscription within Notifi
          format: int64
        userId:
          type: integer
          description: The user which owns this subscription
          format: int64
        alertType:
          type: string
          description: The alert type for which this subscription is targetting
        accountNumber:
          type: string
          description: The account number this subscription triggers. If set then AccountType must also be set. This field will be required if the AlertType is an AccountLevel alert
        accountType:
          type: string
          description: The account type this subscription triggers. If set then AccountNumber must also be set. This field will be required if the AlertType is an AccountLevel alert
        partyId:
          type: string
          description: The partyId this subscription triggers. This will be set if the alert is not an AccountLevel alert
        threshold:
          type: string
          description: The threshold for the subscription's trigger. This field will be required if the AlertType has ThresholdNeeded
        enabled:
          type: boolean
          description: Whether this subscription is enabled or disabled
        deleted:
          type: boolean
          description: Whether this subscription has been deleted
        endpoints:
          uniqueItems: false
          type: array
          description: The unique identifiers of the endpoitns associated to this subscription. Only activated endpoints can be added to a subscription, and a subscription must have at least one endpoint
          items:
            type: integer
            format: int64
      description: A subscription for a Notifi alert
