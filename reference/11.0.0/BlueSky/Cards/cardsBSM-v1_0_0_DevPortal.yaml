openapi: 3.0.0
info:
  version: 1.0.0
  title: Cards
  contact:  
    name: andy bahmueller
    email: andy.bahmueller@fiserv.com
  description: >-
    The Cards Service supports operations to add, update and retrieve cards serviced by financial institutions.

servers:
# Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/cardsBSM/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/CardsBSM/0.0.3
  
    
paths: 

  /cards/v1/{cardId}:
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value associated with the identifier associated with a single card
        examples:
          Sample:
            value: "F17AA97E-4281-4E94-B045-BC0637D91C92"
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    patch:
      tags:
        - Update Card   
      x-group-name: Cards Service
      x-proxy-name: Update Card
      x-child-product-name: ["Leve","Cards"]
      operationId: updateCard
      description: >-
          Updates a nickname associated with a card
      requestBody:
        description: Update card
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardRequest'
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UpdateCardResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
  /cards/v1/{cardId}/limits:
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value associated with the identifier associated with a single card
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Card Limits
      x-group-name: Cards Service
      x-proxy-name: List Card Limits
      x-child-product-name: ["Leve","Cards"]
      operationId: listLimits
      description: "Retrieves limits associated with a card"
      parameters:
        - name: $pageLimit
          in: query
          description: "Page limit is the maximum number of records to be returned. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $pageOffset
          in: query
          description: "Page offset is the page starting point of the result set. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "11"
        - name: $cursorLimit
          in: query
          description: "Cursor limit is the maximum number of records to be returned. Use for cursor base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $cursor
          in: query
          description: "Cursor is the record pointer starting point of the result set. Use for cursor base pagination"
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "133442222"
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ListLimitsResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
                 
  /cards/v1/{cardId}/accounts:
    parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value associated with the identifier associated with a single card
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Card Linked Accounts
      x-group-name: Cards Service
      x-proxy-name: List Card Linked Accounts
      x-child-product-name: ["Leve","Cards"]
      operationId: listAccounts
      description: "Retrieves accounts associated with a card"
      parameters:
        - name: $pageLimit
          in: query
          description: "Page limit is the maximum number of records to be returned. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $pageOffset
          in: query
          description: "Page offset is the page starting point of the result set. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "11"
        - name: $cursorLimit
          in: query
          description: "Cursor limit is the maximum number of records to be returned. Use for cursor base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $cursor
          in: query
          description: "Cursor is the record pointer starting point of the result set. Use for cursor base pagination"
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "133442222"
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ListAccountsResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
  

components:
  schemas:
    Fiserv-OrganizationId:
      type: string
      description: >-
        Organization Identifier is a unique ID that represents the financial institution 
        or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in 
        the backend system.  To ensure uniqueness across all institutions in all parts 
        of the world, use the Dun and Bradstreet number
    Fiserv-TransactionId:
      type: string
      description: >-
        Transaction Identifier. This is the transaction UUID of the current message
    Fiserv-ClientApplicationName:
      type: string
      description: >-
        Name of the application making the service request (e.g. Architect, 
        Commercial Center, etc.)
    Fiserv-Channel:
      type: string
      description: >-
        Indicates the channel used by the client application
    Fiserv-ClientDateTime:
      type: string
      description: >-
        Client date and time as reported by the client application that is 
        making the service request
    Fiserv-VendorId:
      type: string
      description: >-
        An identifier, supplied by Fiserv, that represents the vendor using this API service
  
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
            
    Message:
      title: Message
      required:
        - type
        - title
      type: object
      properties:
        type:
          type: string
          description: >-
              A URI reference [RFC3986] that identifies the problem type
        title:
          type: string 
          description: >-
              A short human-readable summary of the problem type
        detail:
          type: string
          description: >-
              A human-readable description of the specific error  
        instance:
          type: string
          description: >-
              This optional key may be present, with a unique URI for the specific error; 
              this will often point to an error log for that specific response. 
  
    Account:
      title: Accounts
      type: object
      required:
        - id
        - detailType
        - number  
        - isActive
      properties:
        id:
          type: string
          description: >-
              Generic identifier that contains no sensitive data and should be               
              utilized as the key within URI when performing RESTful operations
        
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: >-
              Actual account number as defined by the bank or credit union
        sequenceNumber:
          type: integer
          description: >- 
             Defines the order of the accounts by Account Type, eg. 1 = Primary Savings, 2 = Secondary Savings
        detailStatus:
          $ref: '#/components/schemas/AccountDetailStatus'
        transactionRestrictions:
          type: array
       
          items:
            type: string
            description: >-
                Monetary transaction restrictions
            enum:
              - All
              - Credit
              - CrossTransfer
              - Debit
              - Deposit
              - Inquiry
              - POS
              - Withdrawal
        isActive:
          type: boolean
          description: >-
              Indicates whether the account is active (true) or not (false)
        nickname:
          type: string
          description: >-
              User defined name of the account
    
    AccountDetailType:
      title: AccountDetailType
      type: string
      description: >-
          Detail type of account
      enum:
        - Brokerage
        - CertificateOfDeposit
        - Checking
        - Club
        - Commercial
        - Construction
        - Consumer
        - CreditCard
        - DemandDepositLoan
        - Escrow
        - FlexibleSpending
        - FloorPlan
        - HealthSavings
        - HomeEquity
        - HomeEquityLineOfCredit
        - Installment
        - Lease
        - LineOfCredit
        - Loan
        - MoneyMarket
        - Mortgage
        - Passbook
        - Personal 
        - PortfolioRelationship
        - Retirement
        - Savings
        - ShareDraft
        - Student        
          
   

  
    AccountDetailStatus:
      title: AccountDetailStatus
      type: string
      description: >-
        Indicates a more specific status of the account.  Values:
          
          * 'Active' - An open bank account in which transactions can be made
          * 'Bankruptcy' - Bankruptcy is a legal process through which people or other entities who cannot repay debts to creditors may seek relief from some or all of their debts. In most jurisdictions, bankruptcy is imposed by a court order, often initiated by the debtor
          * 'ChargedOff' - A charged-off is a declaration by a creditor that an amount of debt is unlikely to be collected. Also known as Written-Off
          * 'ClientDefined' - The status has been defined by the financial institution
          * 'Closed' - A closed account is any account that has been deactivated or otherwise terminated, either by the customer, custodian or counterparty. At this stage, no further credits and debits can be added.
          * 'ClosedReopenDeposit' - The account has been closed but it could be reopened with a deposit. Some banks close accounts with zero balance but allow the account to be reopened if a deposit occurs
          * 'ClosedToAdvances' - The Lender stops full or partial advances of the loan to the borrower
          * 'ClosedToday' -  Prevents any posting and/or maintenance to the account status on the day the closing transaction is performed
          * 'ClosedToPosting' - The account cannot accept debit or credit transactions
          * 'ClosedWithBalances' - The account has been closed with outstanding balances
          * 'Collection' - The account has been referred to a collection agency to collect on the bad debt
          * 'CoolingOff' - Indicates the account is within the grace period where the customer has rights to cancel a credit agreement –NEED VALIDATION
          * 'Delinquent' - A delinquent account means that the account is behind on payments
          * 'Dormant' - A dormant account is an account that has had no financial activity for a long period of time, except for the posting of interest. Financial institutions are required by state laws to transfer resources held in dormant accounts to the state's treasury after the accounts have been dormant for a certain period of time
          * 'EarlyCollection' - The account has started the process of collection.
          * 'Escheated' - When money lies dormant in a deposit account or appears to be abandoned, the bank or other organizations with which the money was deposited aren’t necessarily allowed to just keep that money for their own use. After a period of time, they’re required to turn it over to the state. This is called escheatment. Once it's turned over to the state for safekeeping, the owner of the money can still access it by making a proper claim for it
          * 'Foreclosure' - Foreclosure is a legal process in which a lender attempts to recover the balance of a loan from a borrower who has stopped making payments to the lender by forcing the sale of the asset used as the collateral for the loan
          * 'Hold' - There is a restriction on an account owner's ability to access funds in the account due to various reasons. When a bank places an account on hold, it usually does so to protect itself from potential loss, but it also may have the interest of the customer in mind
          * 'Inactive' -A bank account that has not been used for a long period of time
          * 'Matured' -  Refers to the date at which a certificate of deposit or CD reaches the last date of its term. The Deposit Maturity also marks the date when the CD is either redeemed for face value or has its maturity rolled over to a later date
          * 'Managed' - The account is manually controlled by the financial institution. The account is being monitored outside from an automated inactive/dormant schedule maybe because of suspicious activity.
          * 'New' -  New account today
          * 'NewThisMonth' - New account this month
          * 'NoCreditPost' - An account that does not accept credit   transactions
          * 'NoDebitPost' - Post no debit is a situation where all debit transactions are prevented (blocked) on an account to stop money from going out of the bank account
          * 'NonAccrual' - A nonaccrual loan is a lender's term for an unsecured loan whose payment is 90 days or more overdue. The loan is no longer generating its stated interest rate because no payment has been made by the borrower. It is, therefore, a nonperforming loan. Loans can have interest credited only when the borrower makes a payment (of a portion of the principal plus interest). The interest on a nonaccrual loan is thus recorded as earned income. Nonaccrual loans are sometimes referred to as doubtful loans, troubled loans, or sour loans
          * 'NoRenew' - An account that does not renew at maturity or on expiration
          * 'NoWithdrawal' - An account that does not accept withdrawal transactions
          * 'Pending' - An account that has not been fully onboarded on the system
          * 'Probate' - Probate is the legal process of distributing a dead person's assets. When someone dies, he or she usually leaves behind assets to distribute   and debts to pay.
          * 'Purge' - The account has been irrevocably closed. In the system of record old and unneeded data has been removed
          * 'Repossession' - Repossession occurs when the account has not received loan payments and the collateral is seize
          * 'TransferredOut' - The account has been transferred or sold to another financial institution or collection agency 
          * 'Void' - An acccount was opened in error and it has been voided for processing
      enum:
        - Active
        - Bankruptcy
        - ChargedOff
        - ClientDefined
        - Closed
        - ClosedReopenDeposit
        - ClosedToAdvances
        - ClosedToday
        - ClosedToPosting
        - ClosedWithBalances
        - Collection
        - CoolingOff
        - Delinquent
        - Dormant
        - EarlyCollection
        - Escheated
        - Foreclosure
        - Hold
        - Inactive
        - Matured
        - Managed
        - New
        - NewThisMonth
        - NoCreditPost
        - NoDebitPost
        - NonAccrual
        - NoRenew
        - NoWithdrawal
        - Pending
        - Probate
        - Purge
        - Repossession
        - TransferredOut
        - Void 
 
    Links:
      title: Links
      required:
        - self
      type: object
      properties:
        self: 
          type: string
          format: uri
        first: 
          type: string
          format: uri 
        previous: 
          type: string
          format: uri
        next: 
          type: string
          format: uri
        last: 
          type: string
          format: uri
          
    Limit:
      title: Limit
      type: object
      properties:
        type:
          type: string
          description: >-
            Type of limit
          enum: 
            - Cycle
            - Daily
            - ThreeDay
            - Transaction
        source:
          type: string
          description:  >-
            Source of transaction
          enum:
            - ATM
            - Combined
            - POS
            - POSPin
            - POSSignature
        action:
          type: string
          description: >- 
              Action associated with the limit
          enum:
            - Advance
            - Credit
            - Debit
            - Deposit
            - Inquiry
            - Purchase
            - Transfer
            - Withdrawal
        amount:
          type: number
          format: currency
          description: >-
            Amount
        count:
          type: integer
          description: >-
            Maximum transaction allowed
        isOnline:
          type: boolean
          description: >-
            Whether the limit applies to online types (true) or offline types (false)
        fromDate:
          type: string
          format: date
          description: >-
            From date 
        toDate:
          type: string
          format: date
          description: >-
            To date
          
    ListAccountsResponse:
      title: ListAccountsResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        links:
          $ref: '#/components/schemas/Links'
        accounts:
          type: array
          description:  >-
              List of transactions in the result
          items:
            $ref: '#/components/schemas/Account'
    ListLimitsResponse:
      title: ListLimitsResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        links:
          $ref: '#/components/schemas/Links'
        limits:
          type: array
          description:  >-
              List of transactions in the result
          items:
            $ref: '#/components/schemas/Limit'
          
  
  
    UpdateCardRequest:
      title: UpdateCardRequest
      type: object
      properties:
        nickname:
          type: string
          description: >-
              User defined name card nickname
    
    UpdateCardResponse:
      title: UpdateCardResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'