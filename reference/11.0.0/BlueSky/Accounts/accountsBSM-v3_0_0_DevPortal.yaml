openapi: 3.0.1
info:
  title: Accounts
  description: 'The Accounts Service supports operations to add, update and retrieve information regarding product accounts serviced by financial institutions. An account is a product serviced by a financial institution (FI) that carries a balance (credit or debit) in a particular currency. Generally account types fall into one of two major classifications deposit and loan product account.  '
  contact:
    name: andy bahmueller
    email: andy.bahmueller@fiserv.com
  version: 3.0.0
servers:
  - url: /
paths:
  /banking/bsm/v1/accounts:
    post:
      tags:
        - Add Account
      description: Adds a loan or deposit account
      operationId: addAccount
      parameters:
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccountRequest'
      responses:
        '201':
          description: Created
          headers:
            AccountAddResponse:
              style: simple
              schema:
                type: string
                description: URI containing the Id of the account that was created.  The URI can be used in subsequent GET requests for account specifics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAccountResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAccountAcceptedResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Add Account
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}':
    get:
      tags:
        - Get Account details
      description: Retrieves account details associated with a given account
      operationId: getAccount
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Get Account details
      x-child-product-name:
        - Core Banking Lite
        - Accounts
    patch:
      tags:
        - Update Account
      description: Updates account
      operationId: updateAccount
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        description: Update account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Update Account
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/balances':
    get:
      tags:
        - List Balances
      description: Retrieves balances associated with a given account
      operationId: listBalances
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBalancesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Balances
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/documentDeliveries':
    patch:
      tags:
        - Update Document Delivery
      description: Updates account document delivery preferences. Refer to Party Service for changes to the party's document delivery preferences changes
      operationId: updateDocumentDeliveries
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        description: Update document deliveries
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentDeliveryRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDocumentDeliveryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Update Document Delivery
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/fundsAvailability':
    get:
      tags:
        - Get Funds Availability
      description: Validates whether the account has enough funds available to proces a transaction
      operationId: getFundsAvailability
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
        - name: balanceType
          in: query
          description: Indicates balance type to use
          style: form
          schema:
            enum:
              - Ledger
              - Available
            type: string
        - name: amount
          in: query
          description: Transaction amount
          style: form
          schema:
            type: number
            format: currency
        - name: includeOptions
          in: query
          description: Additional options that are used when calculating the total availability of funds
          style: form
          schema:
            type: array
            items:
              enum:
                - Overdraft
                - TransferIn
                - WithdrawalMargin
              type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFundsAvailabilityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Get Funds Availability
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/transactions':
    get:
      tags:
        - List Transactions
      description: Retrieves financial transactions associated with a given account
      operationId: listTransactions
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
          example: F17AA97E-4281-4E94-B045-BC0637D91C92
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
          example: 11-222-3333
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
          example: '559981'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
          example: UserABC
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
          example: '2021-03-05T13:49:14.0000000+00:00'
        - name: $pageLimit
          in: query
          description: Page limit is the maximum number of records to be returned. Use for page base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          example: '10'
        - name: $pageOffset
          in: query
          description: Page offset is the page starting point of the result set. Use for page base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          example: '11'
        - name: $cursorLimit
          in: query
          description: Cursor limit is the maximum number of records to be returned. Use for cursor base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          example: '10'
        - name: $cursor
          in: query
          description: Cursor is the record pointer starting point of the result set. Use for cursor base pagination
          style: form
          schema:
            type: string
          example: '133442222'
        - name: minimumAmount
          in: query
          description: Minimum transaction amount for search criteria
          style: form
          schema:
            type: number
            format: currency
          example: 100
        - name: maximumAmount
          in: query
          description: Maximum transaction amount for search criteria
          style: form
          schema:
            type: number
            format: currency
          example: 10000
        - name: fromDate
          in: query
          description: Transaction posting start date search criteria
          style: form
          schema:
            type: string
            format: date
          example: '2010-02-13T00:00:00.0000000'
        - name: toDate
          in: query
          description: Transaction posting end date search criteria
          style: form
          schema:
            type: string
            format: date
          example: '2010-02-16T00:00:00.0000000'
        - name: startCheckNumber
          in: query
          description: Start check number
          style: form
          schema:
            type: string
          example: '100'
        - name: endCheckNumber
          in: query
          description: End check number
          style: form
          schema:
            type: string
          example: '150'
        - name: status
          in: query
          description: Status of transaction
          style: form
          explode: false
          schema:
            type: array
            items:
              enum:
                - Pending
                - Posted
                - Memo
              type: string
          example: Posted
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsResponse'
              examples:
                Sample:
                  $ref: '#/components/examples/Transactions'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Transactions
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/transactions/download':
    get:
      tags:
        - List Transactions download
      description: Process a request for download of financial transactions for an account
      operationId: ListTransactionDownload
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
        - name: type
          in: query
          description: Time period for the transactions
          style: form
          schema:
            enum:
              - CurrentStatement
              - PreviousStatement
              - CustomRange
            type: string
        - name: format
          in: query
          description: Return file format
          style: form
          schema:
            enum:
              - CSV
              - OFX
              - QFX
            type: string
        - name: fromDate
          in: query
          description: Beginning date for custom date range
          style: form
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          description: Ending date for custom date range
          style: form
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Ok
          content:
            text/csv:
              schema:
                type: string
            text/ofx:
              schema:
                type: string
                format: binary
            application/vmd.intu.qfx:
              schema:
                type: string
                format: binary
        '204':
          description: No Content
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Transactions download
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/overdraftProtection':
    get:
      tags:
        - List Overdraft Protection
      description: Retrieves an account's overdraft funding accounts
      operationId: listOverdraftProtection
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
        - name: $pageLimit
          in: query
          description: Page limit is the maximum number of records to be returned. Use for page base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $pageOffset
          in: query
          description: Page offset is the page starting point of the result set. Use for page base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '11'
        - name: $cursorLimit
          in: query
          description: Cursor limit is the maximum number of records to be returned. Use for cursor base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $cursor
          in: query
          description: Cursor is the record pointer starting point of the result set. Use for cursor base pagination
          style: form
          schema:
            type: string
          examples:
            Sample:
              value: '133442222'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOverdraftProtectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Overdraft Protection
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/stopItems':
    get:
      tags:
        - List Stop Items
      description: Retrieves a list of stop items associated with an account
      operationId: listStopItems
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
        - name: $pageLimit
          in: query
          description: '"Page limit is the maximum number of records to be returned. Use for  page based pagination."'
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $pageOffset
          in: query
          description: '"Page offset is the page starting point of the result set. Use for  page based pagination."'
          style: form
          schema:
            minimum: 0
            type: integer
          examples:
            Sample:
              value: '1'
        - name: $cursorLimit
          in: query
          description: '"Cursor limit is the maximum number of records to be returned. Use  for cursor base pagination."'
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $cursor
          in: query
          description: '"Cursor is the record pointer starting point of the result set. Use  for cursor based pagination."'
          style: form
          schema:
            type: string
          examples:
            Sample:
              value: '1222'
        - name: type
          in: query
          description: '"Type of Stop Item"'
          style: form
          schema:
            enum:
              - ACH
              - Check
              - RevokeAuthorization
              - SpecialInstruction
              - Transaction
            type: string
          examples:
            Sample:
              value: Check
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStopItemResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Stop Items
      x-child-product-name:
        - Core Banking Lite
        - Accounts
    post:
      tags:
        - Add Stop Item
      description: Adds a stop item to an account
      operationId: addStopItem
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStopItemRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddStopItemResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Add Stop Item
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/stopItems/{id}':
    put:
      tags:
        - Replace Stop Item
      description: Replaces a stop item associated with an account
      operationId: replaceStopItem
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: id
          in: path
          description: Stop item identifier
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/StopItemId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        description: Replace stop item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceStopItemRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplaceStopItemResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Replace Stop Item
      x-child-product-name:
        - Core Banking Lite
        - Accounts
    delete:
      tags:
        - Delete Stop Item
      description: Deletes a stop item associated with an account
      operationId: deleteStopItem
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: id
          in: path
          description: Stop item identifier
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/StopItemId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStopItemResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Delete Stop Item
      x-child-product-name:
        - Core Banking Lite
        - Accounts
    patch:
      tags:
        - Update Stop Item
      description: Updates a stop item associated with an account
      operationId: updateStopItem
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: id
          in: path
          description: Stop item identifier
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/StopItemId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStopItemRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStopItemResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Update Stop Item
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/transfers':
    get:
      tags:
        - List Transfers
      description: Retrieves transfer funds associated to a given account
      operationId: listTransfer
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
        - name: $pageLimit
          in: query
          description: Page limit is the maximum number of records to be returned. Use for page base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $pageOffset
          in: query
          description: Page offset is the page starting point of the result set. Use for page base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '11'
        - name: $cursorLimit
          in: query
          description: Cursor limit is the maximum number of records to be returned. Use for cursor base pagination
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $cursor
          in: query
          description: Cursor is the record pointer starting point of the result set. Use for cursor base pagination
          style: form
          schema:
            type: string
          examples:
            Sample:
              value: '133442222'
        - name: status
          in: query
          description: Status of transfer fund. When no provided assume transfer instructions regardless of their status are provided
          style: form
          explode: false
          schema:
            type: array
            items:
              enum:
                - Active
                - Inactive
                - Hold
              type: string
          examples:
            onestatus:
              value:
                - Hold
            multiplestatus:
              value:
                - Active
                - Hold
        - name: nextTransferFromDate
          in: query
          description: Beginning date used when searching by next transfer date
          style: form
          schema:
            type: string
            format: date
          examples:
            Sample:
              value: '2010-02-13T00:00:00.0000000'
        - name: nextTransferToDate
          in: query
          description: Ending date used when searching by next transfer date
          style: form
          schema:
            type: string
            format: date
          examples:
            Sample:
              value: '2010-02-16T00:00:00.0000000'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransfersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Transfers
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/holds':
    get:
      tags:
        - List Holds
      description: Retrieves a list of holds associated with an account
      operationId: listHolds
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
        - name: $pageLimit
          in: query
          description: '"Page limit is the maximum number of records to be returned. Use for  page based pagination."'
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $pageOffset
          in: query
          description: '"Page offset is the page starting point of the result set. Use for  page based pagination."'
          style: form
          schema:
            minimum: 0
            type: integer
          examples:
            Sample:
              value: '1'
        - name: $cursorLimit
          in: query
          description: '"Cursor limit is the maximum number of records to be returned. Use  for cursor base pagination."'
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $cursor
          in: query
          description: '"Cursor is the record pointer starting point of the result set. Use  for cursor based pagination."'
          style: form
          schema:
            type: string
          examples:
            Sample:
              value: '1222'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHoldsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Holds
      x-child-product-name:
        - Core Banking Lite
        - Accounts
    post:
      tags:
        - Add Hold
      description: Adds a hold to an account
      operationId: addHold
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHoldRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddHoldResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Add Hold
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/holds/{id}':
    put:
      tags:
        - Replace Hold
      description: Replaces a hold associated with an account
      operationId: replaceHold
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: id
          in: path
          description: Hold identifier
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/HoldId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceHoldRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplaceHoldResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Replace Hold
      x-child-product-name:
        - Core Banking Lite
        - Accounts
    delete:
      tags:
        - Delete Hold
      description: Deletes a hold associated with an account
      operationId: deleteHold
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: id
          in: path
          description: Hold identifier
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/HoldId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHoldResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Delete Hold
      x-child-product-name:
        - Core Banking Lite
        - Accounts
    patch:
      tags:
        - Update Hold
      description: Updates hold associated with an account
      operationId: updateHold
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: id
          in: path
          description: Hold identifier
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/HoldId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHoldRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHoldResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: Update Hold
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/addresses':
    get:
      tags:
        - List Addresses
      description: Retrieves a list of addresses associated with an account
      operationId: listAddresses
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
        - name: $pageLimit
          in: query
          description: '"Page limit is the maximum number of records to be returned. Use for  page based pagination."'
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $pageOffset
          in: query
          description: '"Page offset is the page starting point of the result set. Use for  page based pagination."'
          style: form
          schema:
            minimum: 0
            type: integer
          examples:
            Sample:
              value: '1'
        - name: $cursorLimit
          in: query
          description: '"Cursor limit is the maximum number of records to be returned. Use  for cursor base pagination."'
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $cursor
          in: query
          description: '"Cursor is the record pointer starting point of the result set. Use  for cursor based pagination."'
          style: form
          schema:
            type: string
          examples:
            Sample:
              value: '1222'
        - name: type
          in: query
          description: Type of address being searched for. When the value of a type is not provided in the query parameter all addresses are provided in the response
          style: form
          schema:
            enum:
              - Alternate
              - Mailing
              - Mortgage
              - Notice
              - Primary
              - Statement
              - Checks
              - DividendCheck
              - Tax
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAddressesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Addresses
      x-child-product-name:
        - Core Banking Lite
        - Accounts
  '/banking/bsm/v1/accounts/{accountId}/periodicData':
    get:
      tags:
        - List Periodic Data
      description: Retrieves a list of periodic data associated with the account
      operationId: listPeriodData
      parameters:
        - name: accountId
          in: path
          description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountId'
        - name: Fiserv-OrganizationId
          in: header
          description: 'Organization identifier is a unique ID that represents the financial institution or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in the backend system.  To ensure uniqueness across all institutions in all parts of the world, use the Duns and Bradstreet number.'
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-OrganizationId'
        - name: Fiserv-TransactionId
          in: header
          description: Transaction identifier. This is the transaction UUID of the current message
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-TransactionId'
        - name: Fiserv-UserId
          in: header
          description: User identifier is the value returned in the Party search enrollmentId field.
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-UserId'
        - name: Fiserv-ClientDateTime
          in: header
          description: Client date and time as reported by the client application that is making the service request.
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/Fiserv-ClientDateTime'
        - name: $pageLimit
          in: query
          description: '"Page limit is the maximum number of records to be returned. Use for  page based pagination."'
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $pageOffset
          in: query
          description: '"Page offset is the page starting point of the result set. Use for  page based pagination."'
          style: form
          schema:
            minimum: 0
            type: integer
          examples:
            Sample:
              value: '1'
        - name: $cursorLimit
          in: query
          description: '"Cursor limit is the maximum number of records to be returned. Use  for cursor base pagination."'
          style: form
          schema:
            maximum: 250
            minimum: 1
            type: integer
          examples:
            Sample:
              value: '10'
        - name: $cursor
          in: query
          description: '"Cursor is the record pointer starting point of the result set. Use  for cursor based pagination."'
          style: form
          schema:
            type: string
          examples:
            Sample:
              value: '1222'
        - name: period
          in: query
          description: Describe the time frame data is reported. The absence of a value indicates data of all time frames is provided
          style: form
          schema:
            enum:
              - Last
              - Next
              - YearToDate
              - PriorYear
              - MonthToDate
              - PriorMonth
              - CurrentCycle
              - PriorCycle
              - LifeToDate
            type: string
        - name: type
          in: query
          description: Describe the type of periodic data item. The absence of a value indicates all period data types are provided in the response
          style: form
          schema:
            enum:
              - Advance
              - Check
              - Credit
              - Debit
              - Deposit
              - NSF
              - Overdraft
              - Payment
              - Withdrawal
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPeriodicDataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-group-name: Accounts Service
      x-proxy-name: List Periodic Data
      x-child-product-name:
        - Core Banking Lite
        - Accounts
components:
  schemas:
    Fiserv-OrganizationId:
      type: string
      description: 'Organization identifier is a unique ID that represents the financial institution  or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in  the backend system.  To ensure uniqueness across all institutions in all parts  of the world, use the Duns and Bradstreet number '
    Fiserv-TransactionId:
      type: string
      description: Transaction identifier. This is the transaction UUID of the current message
    Fiserv-UserId:
      type: string
      description: User identifier is the value returned in the Party search enrollmentId field
    Fiserv-ClientDateTime:
      type: string
      description: Client date and time as reported by the client application that is making the service request
    Account:
      title: Accounts
      required:
        - currencyCode
        - detailStatus
        - detailType
        - isOpen
        - number
        - productId
        - status
        - type
      properties:
        type:
          enum:
            - Deposit
            - Loan
          type: string
          description: 'Classifies the type of product with which an account is associated  at a high level; Deposit, Loan.  Additional detail about the  account is at the account object level'
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: Actual account number as defined by the bank or credit union. In the case of some credit units this number may be a combination of the member number with the share type or certificate number or loan note number
        productId:
          type: string
          description: Indicates the product for the account as defined by the bank or credit union
        productDescription:
          type: string
          description: Product description
        nickname:
          type: string
          description: User defined name of the account
        status:
          enum:
            - Active
            - Inactive
          type: string
          description: Used to indicate the status of the account
        detailStatus:
          $ref: '#/components/schemas/AccountDetailStatus'
        useType:
          enum:
            - Business
            - Personal
            - Undefined
          type: string
          description: Identifies how the account is used
        externalServicerCode:
          type: string
          description: A code that identifies the external servicer for this account.
        isOpen:
          type: boolean
          description: Is the account open (true) or closed (false)
        openDate:
          type: string
          description: Date the account was opened
          format: date
          deprecated: true
        openedDate:
          type: string
          description: Date the account was opened
          format: date
        closedDate:
          type: string
          description: Date the account was closed
          format: date
        branchCode:
          type: string
          description: 'Value of the identifier of the branch  '
        currencyCode:
          type: string
          description: 'Value identifiying which currency the amounts and balances are expressed in.   Value is ISO 4217 currency code, eg USD, EUR,CHF'
        classCode:
          maximum: 99
          minimum: 0
          type: integer
          description: 'Two digit code used to group deposit and loan products that share similar capabilities, entitlements and permissions. These codes range from 0..99 and they are defined by account detail type. This means that for deposit accounts (Checking, Savings and CertificateOfDeposit) there may be up to 300 permutations of class codes. The code is used by retail banking applications to simplify implementations configurations.'
        titles:
          type: array
          items:
            type: string
          description: Title on account typically identifies ownership or responsibility for account  and manner in which ownership/responsibility is assigned
        titleCode:
          enum:
            - AfterName
            - BeforeName
            - NoPrint
            - Undefined
          type: string
          description: Instructs the location of the account title within the block of name/address
        lastTransactionDateTime:
          type: string
          description: Date of last financial transaction on the account
          format: date-time
        lastTransactionAmount:
          type: number
          description: Amount of last financial transaction posted to account
          format: currency
        rate:
          type: number
          description: The interest or earnings rate associated with the account
          format: float
        cardAttached:
          enum:
            - 'true'
            - 'false'
            - Undefined
          type: string
          description: Indicates whether there is at least 1 card associated with this account
        combinedStatement:
          enum:
            - 'true'
            - 'false'
            - Undefined
          type: string
          description: Indicates whether this account is part of a combined statement
        preferredContactMethod:
          enum:
            - Email
            - Phone
            - SMS
          type: string
          description: Preferred contact method
        balances:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Balance'
          description: 'Balance. Defines account balances a financial institution account may carry (ex ledger, available, collected, etc.)'
        routingTransitNumber:
          $ref: '#/components/schemas/RoutingTransitNumber'
        payment:
          $ref: '#/components/schemas/Payment'
        term:
          $ref: '#/components/schemas/Term'
        deposit:
          $ref: '#/components/schemas/DepositDetail'
        loan:
          $ref: '#/components/schemas/LoanDetail'
        interestPaid:
          $ref: '#/components/schemas/InterestPaid'
        interestAccrual:
          $ref: '#/components/schemas/InterestAccrual'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Features'
          description: Account features
    AccountDetailStatus:
      title: AccountDetailStatus
      enum:
        - Active
        - Bankruptcy
        - ChargedOff
        - ClientDefined
        - Closed
        - ClosedReopenDeposit
        - ClosedToAdvances
        - ClosedToday
        - ClosedToPosting
        - ClosedWithBalances
        - Collection
        - CoolingOff
        - Delinquent
        - Dormant
        - EarlyCollection
        - Escheated
        - Foreclosure
        - Hold
        - Inactive
        - Matured
        - Managed
        - New
        - NewThisMonth
        - NoCreditPost
        - NoDebitPost
        - NonAccrual
        - NoRenew
        - NoWithdrawal
        - Pending
        - Probate
        - Purge
        - Repossession
        - TransferredOut
        - Void
      type: string
      description: "Indicates a more specific status of the account.  Values:
  * 'Active' - An open bank account in which transactions can be made
  * 'Bankruptcy' - Bankruptcy is a legal process through which people or other entities who cannot repay debts to creditors may seek relief from some or all of their debts. In most jurisdictions, bankruptcy is imposed by a court order, often initiated by the debtor
  * 'ChargedOff' - A charged-off is a declaration by a creditor that an amount of debt is unlikely to be collected. Also known as Written-Off
  * 'ClientDefined' - The status has been defined by the financial institution
  * 'Closed' - A closed account is any account that has been deactivated or otherwise terminated, either by the customer, custodian or counterparty. At this stage, no further credits and debits can be added.
  * 'ClosedReopenDeposit' - The account has been closed but it could be reopened with a deposit. Some banks close accounts with zero balance but allow the account to be reopened if a deposit occurs
  * 'ClosedToAdvances' - The Lender stops full or partial advances of the loan to the borrower
  * 'ClosedToday' -  Prevents any posting and/or maintenance to the account status on the day the closing transaction is performed
  * 'ClosedToPosting' - The account cannot accept debit or credit transactions
  * 'ClosedWithBalances' - The account has been closed with outstanding balances
  * 'Collection' - The account has been referred to a collection agency to collect on the bad debt
  * 'CoolingOff' - Indicates the account is within the grace period where the customer has rights to cancel a credit agreement 
  * 'Delinquent' - A delinquent account means that the account is behind on payments
  * 'Dormant' - A dormant account is an account that has had no financial activity for a long period of time, except for the posting of interest. Financial institutions are required by state laws to transfer resources held in dormant accounts to the state's treasury after the accounts have been dormant for a certain period of time
  * 'EarlyCollection' - The account has started the process of collection.
  * 'Escheated' - When money lies dormant in a deposit account or appears to be abandoned, the bank or other organizations with which the money was deposited are not necessarily allowed to just keep that money for their own use. After a period of time, they are required to turn it over to the state. This is called escheatment. Once it is turned over to the state for safekeeping, the owner of the money can still access it by making a proper claim for it
  * 'Foreclosure' - Foreclosure is a legal process in which a lender attempts to recover the balance of a loan from a borrower who has stopped making payments to the lender by forcing the sale of the asset used as the collateral for the loan
  * 'Hold' - There is a restriction on an account owner's ability to access funds in the account due to various reasons. When a bank places an account on hold, it usually does so to protect itself from potential loss, but it also may have the interest of the customer in mind
  * 'Inactive' -A bank account that has not been used for a long period of time
  * 'Matured' -  Refers to the date at which a certificate of deposit or CD reaches the last date of its term. The Deposit Maturity also marks the date when the CD is either redeemed for face value or has its maturity rolled over to a later date
  * 'Managed' - The account is manually controlled by the financial institution. The account is being monitored outside from an automated inactive/dormant schedule maybe because of suspicious activity.
  * 'New' -  New account today
  * 'NewThisMonth' - New account this month
  * 'NoCreditPost' - An account that does not accept credit   transactions
  * 'NoDebitPost' - Post no debit is a situation where all debit transactions are prevented (blocked) on an account to stop money from going out of the bank account
  * 'NonAccrual' - A nonaccrual loan is a lender's term for an unsecured loan whose payment is 90 days or more overdue. The loan is no longer generating its stated interest rate because no payment has been made by the borrower. It is, therefore, a nonperforming loan. Loans can have interest credited only when the borrower makes a payment (of a portion of the principal plus interest). The interest on a nonaccrual loan is thus recorded as earned income. Nonaccrual loans are sometimes referred to as doubtful loans, troubled loans, or sour loans
  * 'NoRenew' - An account that does not renew at maturity or on expiration
  * 'NoWithdrawal' - An account that does not accept withdrawal transactions
  * 'Pending' - An account that has not been fully onboarded on the system
  * 'Probate' - Probate is the legal process of distributing a dead person's assets. When someone dies, he or she usually leaves behind assets to distribute   and debts to pay.
  * 'Purge' - The account has been irrevocably closed. In the system of record old and unneeded data has been removed
  * 'Repossession' - Repossession occurs when the account has not received loan payments and the collateral is seize
  * 'TransferredOut' - The account has been transferred or sold to another financial institution or collection agency 
  * 'Void' - An acccount was opened in error and it has been voided for processing"
    AccountDetailType:
      title: AccountDetailType
      enum:
        - Brokerage
        - CertificateOfDeposit
        - Checking
        - Club
        - Commercial
        - Construction
        - Consumer
        - CreditCard
        - DemandDepositLoan
        - Escrow
        - FloorPlan
        - HomeEquity
        - HomeEquityLineOfCredit
        - Installment
        - Lease
        - LineOfCredit
        - Loan
        - MoneyMarket
        - Mortgage
        - Passbook
        - Personal
        - PortfolioRelationship
        - Savings
        - ShareDraft
        - Student
      type: string
      description: 'Detail type of account. The account should be described in the terms that align to current user experiences at the Financial Institutions. For example some institutions list their loans accounts under the generic term Loan while others prefer to break down the types into Construction, Consumer, Installment etc. '
    AccountReferenceAdd:
      title: AccountReferenceAdd
      type: object
      oneOf:
        - required:
            - id
          type: object
          properties:
            id:
              $ref: '#/components/schemas/AccountId'
        - required:
            - detailType
            - number
          type: object
          properties:
            detailType:
              $ref: '#/components/schemas/AccountDetailType'
            number:
              type: string
              description: Actual account number as defined by the bank or credit union
            routingTransitNumber:
              $ref: '#/components/schemas/RoutingTransitNumber'
    AccountReferenceUpdate:
      title: AccountReferenceUpdate
      type: object
      oneOf:
        - required:
            - id
          type: object
          properties:
            id:
              $ref: '#/components/schemas/AccountId'
        - required:
            - detailType
            - number
          type: object
          properties:
            detailType:
              $ref: '#/components/schemas/AccountDetailType'
            number:
              type: string
              description: Actual account number as defined by the bank or credit union
            routingTransitNumber:
              $ref: '#/components/schemas/RoutingTransitNumber'
      nullable: true
    AccountId:
      title: AccountId
      type: string
      description: Generic account identifier that contains no sensitive data and should be utilized as the key within URI when performing RESTful operations.
      example: F17AA97E-4281-4E94-B045-BC0637D91C92
    AccountNumber:
      title: AccountNumber
      type: string
      description: Actual account number associated with the transaction
    AccountReference:
      title: AccountReference
      required:
        - detailType
        - id
        - number
      type: object
      properties:
        id:
          type: string
          description: Generic identifier that contains no sensitive data and should be  utilized as the key within URI when performing RESTful operations
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: Actual account number as defined by the bank or credit union
        routingTransitNumber:
          $ref: '#/components/schemas/RoutingTransitNumber'
      description: Account Information
    AccountTransferRef:
      title: AccountTransferRef
      required:
        - detailType
        - id
        - isDebit
        - number
      type: object
      properties:
        id:
          type: string
          description: Generic identifier that contains no sensitive data and should be  utilized as the key within URI when performing RESTful operations
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: Actual account number as defined by the bank or credit union
        routingTransitNumber:
          $ref: '#/components/schemas/RoutingTransitNumber'
        isDebit:
          type: boolean
          description: Indicates if the account related is debited (from) or credited (to)
      description: Account Information
    PeriodicData:
      title: PerioridData
      required:
        - period
        - type
      type: object
      properties:
        period:
          enum:
            - Last
            - Next
            - YearToDate
            - PriorYear
            - MonthToDate
            - PriorMonth
            - CurrentCycle
            - PriorCycle
            - LifeToDate
          type: string
          description: Describe the time frame data is reported
        type:
          enum:
            - Advance
            - Check
            - Credit
            - Debit
            - Deposit
            - NSF
            - Overdraft
            - Payment
            - Withdrawal
          type: string
          description: Describe the type of periodic data item
        date:
          type: string
          description: Date on which the described activity took place
          format: date
        amount:
          type: number
          description: Monetary amount associated with the activity
    AddAccountRequest:
      title: AddAccountRequest
      required:
        - detailType
        - productId
        - relationships
      type: object
      properties:
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: Actual account number as defined by the bank or credit union
        productId:
          type: string
          description: 'Indicates the product for the account, as defined by the bank or credit union'
        nickname:
          type: string
          description: User defined name of account
        effectiveDateTime:
          type: string
          description: Date and time the request was created
          format: date-time
        openDate:
          type: string
          description: Date the account was opened
          format: date
          deprecated: true
        openedDate:
          type: string
          description: Date the account was opened
          format: date
        branchCode:
          type: string
          description: Code associated to the branch
        currencyCode:
          type: string
          description: 'Indicates the currency applied to balances, interest, etc. Based on ISO-4217 string value; i.e. USD, EUR'
        titles:
          type: array
          items:
            type: string
          description: Title on account typically identifies ownership or responsibility for account  and manner in which ownership/responsibility is assigned
        titleCode:
          enum:
            - AfterName
            - BeforeName
            - NoPrint
            - Undefined
          type: string
          description: Instructs the location of the account title within the block of name/address
        rate:
          type: number
          description: 'Interest rate for the account being added, expressed as a percent.   For example, 1.25% would be represented as 1.25'
          format: float
        initialAmount:
          type: number
          description: Initial amount that was added to the account at the time of opening
          format: currency
        term:
          $ref: '#/components/schemas/TermAdd'
        preferredContactMethod:
          enum:
            - Email
            - Phone
            - SMS
          type: string
          description: Preferred method of contact
        openMethod:
          enum:
            - Email
            - Fax
            - InPerson
            - Internet
            - Mail
            - Mobile
            - Phone
          type: string
          description: Method by which the account was requested to be created
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressBasic'
          description: Address associated with the account (optional)
        deposit:
          $ref: '#/components/schemas/DepositAdd'
        loan:
          $ref: '#/components/schemas/LoanAdd'
        officers:
          type: array
          items:
            $ref: '#/components/schemas/Officer'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipAdd'
          description: Array of objects that describe the relationships to the account
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeaturesAdd'
          description: Account features
      description: Account Information
    AddAccountResponse:
      title: AddAccountResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        account:
          $ref: '#/components/schemas/AddAccountResponse_account'
      description: Account Information
    AddAccountAcceptedResponse:
      title: AddAccountAcceptedResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    AddressBasic:
      title: AddressBasic
      required:
        - lineOne
        - postalCode
        - type
      type: object
      properties:
        type:
          enum:
            - Alternate
            - Mailing
            - Mortgage
            - Notice
            - Primary
            - Statement
            - Checks
            - DividendCheck
            - Tax
          type: string
          description: Type of address being returned
        lineOne:
          type: string
          description: Line one of address
        lineTwo:
          type: string
          description: Line two of address
        city:
          type: string
          description: 'City, town or municipality associated with address'
        stateProvince:
          type: string
          description: State or province associated with address
        countryCode:
          maxLength: 3
          type: string
          description: ISO 3166-1 alpha-3 code that represents the country
          example: USA
        postalCode:
          type: string
          description: Postal code associated with address
        startDate:
          type: string
          description: Date on which the address is valid from
          format: date
        endDate:
          type: string
          description: Date on which the address is valid to
          format: date
        isSeasonal:
          type: boolean
          description: Indicates that the address reactives annually with every season defined by the end and start dates. Primary address can not be defined as seasonal addresses.
          default: false
    AddressCollateral:
      title: AddressCollateral
      required:
        - lineOne
        - postalCode
      type: object
      properties:
        lineOne:
          type: string
          description: Line one of address
        lineTwo:
          type: string
          description: Line two of address
        city:
          type: string
          description: 'City, town or municipality associated with address'
        stateProvince:
          type: string
          description: State or province associated with address
        countryCode:
          maxLength: 3
          type: string
          description: ISO 3166-1 alpha-3 code that represents the country
          example: USA
        postalCode:
          type: string
          description: Postal code associated with address
    AddressList:
      title: AddressList
      required:
        - id
        - lineOne
        - postalCode
        - type
      type: object
      properties:
        id:
          type: string
          description: Value that represents the identifier of the Address.  Item does not contain sensitive information
        type:
          enum:
            - Alternate
            - Mailing
            - Mortgage
            - Notice
            - Primary
            - Statement
            - Checks
            - DividendCheck
            - Tax
          type: string
          description: Type of address being returned
        lineOne:
          type: string
          description: Line one of address
        lineTwo:
          type: string
          description: Line two of address
        city:
          type: string
          description: 'City, town or municipality associated with address'
        stateProvince:
          type: string
          description: State or province associated with address
        countryCode:
          maxLength: 3
          type: string
          description: ISO 3166-1 alpha-3 code that represents the country
          example: USA
        postalCode:
          type: string
          description: Postal code associated with address
        startDate:
          type: string
          description: Date on which the address is valid from
          format: date
        endDate:
          type: string
          description: 'Date on which the address is valid to  '
          format: date
        isSeasonal:
          type: boolean
          description: Indicates that the address reactives annually with every season defined by the end and start dates. Primary address can not be defined as seasonal addresses.
          default: false
        lastUpdatedDate:
          type: string
          description: Last date on which the address was updated
          format: date
    AddHoldRequest:
      title: AddHoldRequest
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HoldType'
        amount:
          $ref: '#/components/schemas/HoldAmount'
        holdAmountType:
          $ref: '#/components/schemas/HoldAmountType'
        effectiveDate:
          $ref: '#/components/schemas/HoldEffectiveDate'
        expirationDate:
          $ref: '#/components/schemas/HoldExpirationDate'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
        reasonDescription:
          type: string
          description: 'Reason for the hold '
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        securedAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
      description: Hold Information
    AddHoldResponse:
      title: AddHoldResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        hold:
          $ref: '#/components/schemas/AddHoldResponse_hold'
      description: Hold Information
    AddStopItemRequest:
      title: AddStopItemRequest
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StopItemType'
        itemNumber:
          $ref: '#/components/schemas/StopItemNumber'
        companyId:
          $ref: '#/components/schemas/StopItemCompanyId'
        amount:
          $ref: '#/components/schemas/StopItemAmount'
        payeeName:
          $ref: '#/components/schemas/StopItemPayeeName'
        originationDate:
          $ref: '#/components/schemas/StopItemOriginationDate'
        expirationDate:
          $ref: '#/components/schemas/StopItemExpirationDate'
        isPermanent:
          $ref: '#/components/schemas/StopItemIsPermanent'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
        reasonDescription:
          $ref: '#/components/schemas/StopItemReasonDescription'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        specialOption:
          $ref: '#/components/schemas/StopItemSpecialOption'
        itemRange:
          $ref: '#/components/schemas/ItemRange'
        varianceRange:
          $ref: '#/components/schemas/VarianceRange'
      description: Stop Item Information
    AddStopItemResponse:
      title: AddStopItemResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        stopItem:
          $ref: '#/components/schemas/AddStopItemResponse_stopItem'
      description: Stop Item Information
    AuthorizedBy:
      title: AuthorizedBy
      required:
        - type
        - value
      type: object
      properties:
        type:
          enum:
            - Signature
            - Customer
            - Bank
          type: string
          description: Form of authorization
        value:
          type: string
          description: Name of the authorizing party
      description: Authorization Information
    Balance:
      title: Balance
      required:
        - amount
        - type
      type: object
      properties:
        type:
          enum:
            - AmountDue
            - Available
            - AvailableCredit
            - ChargeOff
            - Current
            - Ledger
            - Escrow
            - Fee
            - InterestDue
            - Initial
            - LateFee
            - Memo
            - PayoffAmount
            - Principal
            - Redemption
            - Sweep
          type: string
          description: "Identifies the type of balance being supplied. Values:
  * 'Amount Due' - The amount of the total payment amount required to bring the account current
  * 'Available'- The amount of money in your account that is available for immediate withdrawal
  * 'AvailableCredit' - The amount of the unused portion of the total line of credit balance authorized for this account
  * 'ChargeOff'- Amount of loan that was charged-off
  * 'Current' - The amount of money that is actually in your account at any given time including those funds that may be on hold or are still uncollected. Also known as MemoLedger
  * 'Ledger' - The amount of money in an account at the start of the business day, including all deposits and withdrawals posted the previous night, whether or not the funds have been collected
  * 'Escrow' - Balance of the money set aside with the purpose of paying property taxes and homeowners' insurance premiums
  * 'Fee' -  The amount of fee, charges, membership fee due on the account
  * 'InterestDue' - Interest due represents the amount required to pay the interest cost of the loan for the payment period
  * 'Initial' - Origination or face amount of the loan account. Also initial deposit or certificate value for time deposits
  * 'LateFee' -  Late fee refers to unpaid balance of late fees. Late fees are charges that consumers pay when they fail to make a payment on a debt such as a loan or a credit card
  * 'Memo' - This is the ledger balance minus any uncollected funds (float) minus memo-posted debits, plus memo-posted credits (activity of the day).. Also known as MemoAvailable
  * 'PayoffAmount' - The amount needed to be paid including principal amount, interest and any other charges in order to settle the loan or credit card account
  * 'Principal' - The amount of the remaining unpaid balance of a loan exclusive of interest and any other charges
  * 'Redemption' -Redemption value is the price of a term deposit account before its maturity date
  * 'Sweep' - Total available balance combined from all related accounts that are part of a cash management relationship
"
        amount:
          type: number
          description: The value representing the balance being returned
          format: currency
        asOfDate:
          type: string
          description: 'The date associated to the balance being returned   '
          format: date
    CatalogTableCode:
      title: CatalogTableCode
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: Code for the Catalog Item
        description:
          type: string
          description: 'Description of related code for Catalog Item. The element description is a required ouput element, for example it should be populated in GET responses'
      description: 'Catalog table codes consist of two elements code and description. The element code is a required input/output element. The element description is a required output element, for example it should be populated in GET responses.'
    CatalogTableCodeUpdate:
      title: CatalogTableCodeUpdate
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: Code for the Catalog Item
      description: 'Catalog table codes consist of two elements code and description. The element code is a required input/output element. The element description is a required output element, for example it should be populated in GET responses.'
      nullable: true
    Collateral:
      title: Collateral
      required:
        - type
      type: object
      properties:
        number:
          type: string
          description: Actual identifier for the collateral
        type:
          enum:
            - Basic
            - Building
            - Commodity
            - DepositAccount
            - Inventory
            - Investment
            - LifeInsurance
            - ManufacturedHome
            - Other
            - OtherProperty
            - Property
            - Vehicle
          type: string
          description: Type of collateral
        description:
          type: string
          description: Description of collateral
          example: Tesla Model S-90D
        pledgedAmount:
          type: number
          description: Collateral amount pledged against loan
          format: currency
        currencyCode:
          type: string
          description: 'Indicates the currency applied to balances, interest, etc.  Based  on ISO-4217 string value; ie USD, EUR'
        address:
          $ref: '#/components/schemas/AddressCollateral'
    Commercial:
      title: Commercial
      type: object
      properties:
        SBALoanNumber:
          type: string
          description: Loan number on file with the Small Business Administration (SBA).   Only provided for a SBA loans
        NAICS:
          type: string
          description: Code used to classify business establishments
        SBA:
          enum:
            - 'true'
            - 'false'
            - Undefined
          type: string
          description: Indicates whether the account is a Small Business Administration loan
    CourtesyOverdraft:
      title: CourtesyOverdraft
      type: object
      properties:
        type:
          enum:
            - ATM
            - POS
          type: string
          description: Transaction type to apply action to
        option:
          type: string
          description: Option to apply to the transaction
        limitAmount:
          type: number
          description: Amount that the account is allowed to be overdrawn
          format: currency
    DepositAdd:
      title: DepositAdd
      type: object
      properties:
        insured:
          enum:
            - 'true'
            - 'false'
            - Undefined
          type: string
          description: Indicates whether the account is insured
        taxFavoredType:
          enum:
            - Coverdell
            - FSA
            - HSA
            - IRA
            - Roth
            - SEP
          type: string
          description: Type of tax favored account being described
        taxFavoredPlanCode:
          $ref: '#/components/schemas/CatalogTableCode'
        planNumber:
          type: string
          description: Plan number associated with investment portfolio
        interestDispositionType:
          enum:
            - AddToBalance
            - Check
            - ExternalTransfer
            - InternalTransfer
          type: string
          description: Interest disposition method by which interest payments are made
        maturityOption:
          enum:
            - AutoRenewal
            - NoRenewal
            - Reinvest
          type: string
          description: Action to be taken at the time of maturity
        interestDispositionAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
        maturityDispositionType:
          enum:
            - Check
            - ExternalTransfer
            - Manual
            - InternalTransfer
          type: string
          description: Disposition of funds at the time of final maturity
        maturityDispositionAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
        courtesyOverdraft:
          type: array
          items:
            $ref: '#/components/schemas/CourtesyOverdraft'
          description: List of options and amounts to perform courtesy overdraft processing
      description: Contains information specific to Deposit accounts
    DepositUpdate:
      title: DepositUpdate
      type: object
      properties:
        planNumber:
          type: string
          description: Plan number associated with investment portfolio
          nullable: true
      description: Contains information specific to Deposit accounts
    DepositDetail:
      title: DepositDetail
      type: object
      properties:
        insured:
          enum:
            - 'true'
            - 'false'
            - Undefined
          type: string
          description: Indicates whether the account is insured
        taxFavoredType:
          enum:
            - Coverdell
            - FSA
            - HSA
            - IRA
            - Roth
            - SEP
          type: string
          description: Type of tax favored account being described
        taxFavoredPlanCode:
          $ref: '#/components/schemas/CatalogTableCode'
        planNumber:
          type: string
          description: Plan number associated with investment portfolio
        APYE:
          type: number
          description: Annual percentage yield earned
          format: float
        interestDispositionType:
          enum:
            - AddToBalance
            - Check
            - ExternalTransfer
            - InternalTransfer
          type: string
          description: Interest disposition method by which interest payments are made
        interestDispositionFrequency:
          enum:
            - Daily
            - Weekly
            - BiWeekly
            - SemiMonthly
            - Monthly
            - BiMonthly
            - Quarterly
            - SemiAnnual
            - Annual
            - Cycle
          type: string
          description: Interest disposition frequency
        interestDispositionAccount:
          $ref: '#/components/schemas/AccountReference'
        maturityDispositionType:
          enum:
            - Check
            - Manual
            - ExternalTransfer
            - InternalTransfer
          type: string
          description: "Disposition of funds at the time of final maturity Values:
  * 'Check' - The amount of the deposit is disposed using a check
  * 'Manual'- The amount of the deposit is disposed via a posted transaction 
  * 'ExternalTransfer' - The amount of the deposit is disposed to transfer to an external account
  * 'InternalTransfer' - The amount of the deposit is disposed to transfer to an internal account
  * 'ExternalAccount' - Deprecated
  * 'Transfer'- Deprecated"
        maturityDispositionAccount:
          $ref: '#/components/schemas/AccountReference'
      description: Contains information specific to Deposit accounts
    DetailItem:
      title: DetailItem
      required:
        - amount
        - type
      type: object
      properties:
        description:
          type: string
          description: 'Additional detail of what makes up the amount. For example for Insurance Amount we may have detail items for Life, Accident, Other, Disability or Unemployment insurance. Another example may be Fee Amount we may have detail items for NSF, Legal or Collection fees.'
        amount:
          type: number
          description: The value representing the detail amount being returned
          format: currency
    DeleteHoldResponse:
      title: DeleteHoldResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    DeleteStopItemResponse:
      title: DeleteStopItemResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    Distribution:
      title: Distribution
      required:
        - amount
        - type
      type: object
      properties:
        type:
          enum:
            - AdditionalPrincipal
            - Escrow
            - Fee
            - Interest
            - Insurance
            - LateFee
            - OtherCredit
            - OtherDebit
            - OtherEscrow
            - Principal
            - ServiceCharge
          type: string
          description: Type of transaction distribution being reported
        amount:
          type: number
          description: The amount associated with the distribution being reported
          format: currency
        detailItems:
          type: array
          items:
            $ref: '#/components/schemas/DetailItem'
          description: Array of elements that further describe the make-up of the amount
    DocumentDeliveriesUpdate:
      title: DocumentDeliveryUpdate
      required:
        - method
        - type
      type: object
      properties:
        type:
          enum:
            - Statement
          type: string
          description: Document type
        method:
          $ref: '#/components/schemas/CatalogTableCode'
      description: Document Deliveries Information
    Escrow:
      title: Escrow
      type: object
      properties:
        paymentAmount:
          type: number
          description: Scheduled amount paid to escrow account
          format: currency
        nextAnalysisDate:
          type: string
          description: Date when next escrow analysis will be performed
          format: date
        lastAnalysisDate:
          type: string
          description: Date when last escrow analysis was performed
          format: date
        lastDisbursementAmount:
          type: number
          description: Amount of last disbursement from escrow account
          format: currency
        lastDisbursementDate:
          type: string
          description: Date of last disbursement from escrow account
          format: date
        ytdInterestPaidAmount:
          type: number
          description: YTD interest paid on escrow account
          format: currency
        currentYear:
          type: string
          description: Current year of the interest paid
          format: YYYY
        priorYearInterestPaidAmount:
          type: number
          description: Previous YTD interest paid on escrow account
          format: currency
        priorYear:
          type: string
          description: Prior year of the interest paid
          format: YYYY
        details:
          type: array
          items:
            $ref: '#/components/schemas/EscrowDetails'
          description: Array of elements that further describe the make-up of the distribution amount
    EscrowDetails:
      title: EscrowDetails
      required:
        - amount
        - type
      type: object
      properties:
        type:
          enum:
            - Tax
            - Insurance
            - Other
          type: string
          description: Type of escrow detail
        amount:
          type: number
          description: Amount associated to escrow detail item
          format: currency
        date:
          type: string
          description: Date associated to escrow detail item
          format: date
    Features:
      title: Features
      required:
        - isEnabled
        - type
      type: object
      properties:
        type:
          enum:
            - RoundUp
          type: string
          description: Feature type
        isEnabled:
          type: boolean
          description: A 'true' value indicates the feature is enabled
        roundUp:
          $ref: '#/components/schemas/RoundUp'
    FeaturesUpdate:
      title: FeaturesUpdate
      required:
        - isEnabled
        - type
      type: object
      properties:
        type:
          enum:
            - RoundUp
          type: string
          description: Feature type
        isEnabled:
          type: boolean
          description: A 'true' value indicates the feature is enabled
        roundUp:
          $ref: '#/components/schemas/RoundUpUpdate'
    FeaturesAdd:
      title: FeaturesAdd
      required:
        - isEnabled
        - type
      type: object
      properties:
        type:
          enum:
            - RoundUp
          type: string
          description: Feature type
        isEnabled:
          type: boolean
          description: A 'true' value indicates the feature is enabled
        roundUp:
          $ref: '#/components/schemas/RoundUpAdd'
    FundAvailability:
      title: FundAvailability
      required:
        - isAvailable
      type: object
      properties:
        verifiedDateTime:
          type: string
          description: Date and time the fund availability took place
          format: date-time
        isAvailable:
          type: boolean
          description: Indicates whether there are funds available to proceed with the transaction based on the condition of the balance
      description: Fund Availability Information
    GetAccountResponse:
      title: GetAccountResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        account:
          $ref: '#/components/schemas/Account'
    GetFundsAvailabilityResponse:
      title: GetFundsAvailabilityResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        result:
          $ref: '#/components/schemas/FundAvailability'
    Hold:
      title: Hold
      type: object
      properties:
        id:
          $ref: '#/components/schemas/HoldId'
        type:
          $ref: '#/components/schemas/HoldType'
        amount:
          $ref: '#/components/schemas/HoldAmount'
        holdAmountType:
          $ref: '#/components/schemas/HoldAmountType'
        createdDate:
          $ref: '#/components/schemas/HoldCreatedDate'
        effectiveDate:
          $ref: '#/components/schemas/HoldEffectiveDate'
        expirationDate:
          $ref: '#/components/schemas/HoldExpirationDate'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
        reasonDescription:
          $ref: '#/components/schemas/HoldReasonDescription'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        securedAccount:
          $ref: '#/components/schemas/AccountReference'
      description: Holds details
    HoldAmount:
      title: HoldAmount
      type: number
      description: The amount of the hold
      format: currency
    HoldAmountType:
      title: HoldAmountType
      enum:
        - Ledger
        - Available
        - Fixed
        - Payoff
        - All
      type: string
      description: Identifies the way the amount hold is calculated. Fixed is common when the hold amount is provided
    HoldCreatedDate:
      title: HoldCreatedDate
      type: string
      description: Date on which the hold was created
      format: date
    HoldEffectiveDate:
      title: HoldEffectiveDate
      type: string
      description: Effective date of the hold
      format: date
    HoldExpirationDate:
      title: HoldExpirationDate
      type: string
      description: Date on which the hold will expire
      format: date
    HoldId:
      type: string
      description: Value that represents the identifier of the Hold that does not  contain sensitive data
    HoldReasonDescription:
      title: HoldReasonDescription
      type: string
      description: "Reason for the hold 
    "
    HoldType:
      title: HoldType
      enum:
        - Hold
        - Caution
        - Pledge
      type: string
      description: Type of hold
    InterestAccrual:
      title: Interest
      type: object
      properties:
        accruedThruDate:
          type: string
          description: Date through which the interest is accrued for this account
          format: date
        accruedAmount:
          type: number
          description: Amount of interest accrued but not yet paid for this account
          format: currency
        oneDayInterestAmount:
          type: number
          description: One day's worth of interest
          format: currency
      description: Interest Accrual Information
    InterestPaid:
      title: InterestPaid
      type: object
      properties:
        ytdAmount:
          type: number
          description: Current year interest paid to date
          format: currency
        currentYear:
          type: string
          description: 'Current year of interest paid '
          format: YYYY
        priorYearAmount:
          type: number
          description: Prior year interest paid to date
          format: currency
        priorYear:
          type: string
          description: Prior year of interest paid
          format: YYYY
        lastPaidAmount:
          type: number
          description: Amount of interest that was last paid
          format: currency
        lastPaidDate:
          type: string
          description: Date of when interest was last paid
          format: date
        nextPayAmount:
          type: number
          description: Amount of interest as of the next interest payment date
          format: currency
        nextPayDate:
          type: string
          description: Date of the next scheduled interest payment
          format: date
      description: Interest Paid Information
    ItemRangeUpdate:
      title: ItemRangeUpdate
      type: object
      properties:
        start:
          type: string
          description: Starting number of the check number range
        end:
          type: string
          description: Ending number of the check number range
      nullable: true
    ItemRange:
      title: ItemRange
      required:
        - end
        - start
      type: object
      properties:
        start:
          type: string
          description: Starting number of the check number range
        end:
          type: string
          description: Ending number of the check number range
      description: Item range information
    ListPeriodicDataResponse:
      title: ListPeriodicDataResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        links:
          $ref: '#/components/schemas/Links'
        periodicData:
          type: array
          items:
            $ref: '#/components/schemas/PeriodicData'
    ListAddressesResponse:
      title: ListAddressesResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        links:
          $ref: '#/components/schemas/Links'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressList'
    ListBalancesResponse:
      title: ListBalancesResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        balances:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
          description: List of balances in the result
    ListHoldsResponse:
      title: ListHoldsResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        links:
          $ref: '#/components/schemas/Links'
        holds:
          type: array
          items:
            $ref: '#/components/schemas/Hold'
    ListOverdraftProtectionResponse:
      title: ListOverdraftProtectionResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        links:
          $ref: '#/components/schemas/Links'
        overdraftFunding:
          type: array
          items:
            $ref: '#/components/schemas/OverdraftFunding'
          description: List of overdraft protection funding accounts
    ListStopItemResponse:
      title: ListStopItemResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        links:
          $ref: '#/components/schemas/Links'
        stopItems:
          type: array
          items:
            $ref: '#/components/schemas/StopItem'
    ListTransactionsResponse:
      title: ListTransactionsResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        links:
          $ref: '#/components/schemas/Links'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: List of transactions in the result
    ListTransfersResponse:
      title: ListTransfersResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
        links:
          $ref: '#/components/schemas/Links'
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
          description: List of transfers in the result
    LoanAdd:
      title: LoanAdd
      type: object
      properties:
        originalNoteDate:
          type: string
          description: Date on which the loan was originated
          format: date
        noteNumber:
          type: string
          description: Value associated with the loan on the originating system
        creditLimitAmount:
          type: number
          description: Credit limit of the loan
          format: currency
        lineExpirationDate:
          type: string
          description: Date of when the line of credit expires
          format: date
        maturityDate:
          type: string
          description: 'Date on which the account matures, expires or is scheduled to be  paid off'
          format: date
        firstDueDate:
          type: string
          description: Date on which the first payment is due
          format: date
        APR:
          type: number
          description: Annual percentage rate
          format: float
      description: Contains information specific to Loan accounts
    LoanDetail:
      title: LoanDetail
      type: object
      properties:
        originalNoteDate:
          type: string
          description: Date on which the loan was originated
          format: date
        originalAmount:
          type: number
          description: Original amount of the loan
          format: currency
        creditLimitAmount:
          type: number
          description: Credit limit of the loan
          format: currency
        maturityDate:
          type: string
          description: Date when loan matures
          format: date
        APR:
          type: number
          description: Annual percentage rate
          format: float
        isSecured:
          type: boolean
          description: Is loan secured by collateral (true) or is the loan not secured  by collateral (false)
        chargeOffAmount:
          type: number
          description: Amount of loan that was charged-off
          format: currency
        chargeOffDate:
          type: string
          description: Date of when loan was charged-off
          format: date
        paidOffDate:
          type: string
          description: Date on which the loan was paid off
          format: date
        lastAdvanceAmount:
          type: number
          description: Amount of last advance
          format: currency
        lastAdvanceDate:
          type: string
          description: Date of last advance
          format: date
        splitRate:
          $ref: '#/components/schemas/SplitRate'
        collaterals:
          type: array
          items:
            $ref: '#/components/schemas/Collateral'
          description: Collateral information associated with the account
        commercial:
          $ref: '#/components/schemas/Commercial'
        escrow:
          $ref: '#/components/schemas/Escrow'
        pastDueDetails:
          type: array
          items:
            $ref: '#/components/schemas/PastDueDetail'
          description: Past Due detail information
      description: Contains information specific to Loan accounts
    Officer:
      title: Officer
      required:
        - code
        - type
      type: object
      properties:
        type:
          enum:
            - Officer
            - SecondOfficer
            - ThirdOfficer
            - FourthOfficer
            - ReferralOfficer
          type: string
          description: Officer type being sent
        code:
          type: string
          description: Code related to the officer information being sent
    OverdraftFunding:
      title: FundingAccount
      required:
        - accountDetailType
        - accountId
        - accountNumber
      type: object
      properties:
        accountId:
          type: string
          description: Funding account identifier
        accountDetailType:
          $ref: '#/components/schemas/AccountDetailType'
        accountNumber:
          type: string
          description: Actual account number as defined by the bank or credit union
        priorityNumber:
          type: integer
          description: Number that indicates the account sequence the system uses when attempting to draw funds from accounts
        routingTransitNumber:
          $ref: '#/components/schemas/RoutingTransitNumber'
    PastDueDetail:
      title: PastDueDetail
      type: object
      properties:
        amount:
          type: number
          description: Amount associated with the past due amount
          format: currency
        daysPastDue:
          type: integer
          description: Number of days that the payment is past due
        operator:
          enum:
            - EQ
            - LTE
            - GTE
            - LT
            - GT
          type: string
          description: 'This is a qualifier for the number of past due days. The value indicates  whether the account is Equal (EQ), Lesser Than (LT), Lesser or Equal to (LTE) Greater or Equal to (GTE)'
    Payment:
      title: Payment
      type: object
      properties:
        dueDate:
          type: string
          description: Scheduled date of the oldest payment due on the loan. When the loan is current this  may be the date of the already billed payment which may not be past due yet.  This field should be confused with a projection of the  next payment  due (look at next due and next amount). Only due (billed) payments are presented in this field
          format: date
        dueAmount:
          type: number
          description: Amount of the payment required on due date.  This amount represents the oldest payment amount due on the loan. This amount is different from the Balance Amount Due (see balances). The balance Amount Due indicates the total  payment amount required to bring the loan account current. Only due (billed) payments are presented in this field
          format: currency
        minimumAmount:
          type: number
          description: Minimum payment amount to satisfy a single payment
          format: currency
        isPastDue:
          type: boolean
          description: Indicates the account is past due
        frequency:
          enum:
            - None
            - Daily
            - Weekly
            - BiWeekly
            - SemiMonthly
            - Monthly
            - BiMonthly
            - Quarterly
            - SemiAnnual
            - Annual
            - Single
          type: string
          description: Frequency of payment schedule
        lastDate:
          type: string
          description: The date of the last payment made
          format: date
        lastAmount:
          type: number
          description: The amount of the last payment made
          format: currency
        method:
          enum:
            - BillByNotice
            - Coupon
            - ExternalTransfer
            - InternalTransfer
            - OverTheCounter
            - Payroll
            - Statement
            - Unassigned
          type: string
          description: Method by which payments are made
        nextAmount:
          type: number
          description: Amount associated with the next scheduled payment
          format: currency
        nextDate:
          type: string
          description: The next date on which a scheduled payment is due to be paid. This date is never in the past. Scheduled for payment is a payment that is not either billed or paid.
          format: date
        numberRemaining:
          type: string
          description: Number of payments remaining to fully satisfy  the account. The value of 'N/A' represent the account does not have an end date
        sourceAccount:
          $ref: '#/components/schemas/AccountReference'
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    RecurringDetail:
      title: RecurringDetail
      allOf:
        - $ref: '#/components/schemas/RecurringBasic'
        - type: object
          properties:
            startDate:
              type: string
              description: Indicates the date the recurring period starts
              format: date
            endDate:
              type: string
              description: Indicates the date of the end of the recurring period
              format: date
      description: Recurring Information
    RecurringBasic:
      title: RecurringBasic
      required:
        - code
        - frequency
        - interval
      type: object
      properties:
        code:
          type: string
          description: Code that represents the recurrency model in the Catalog for transfer options
        frequency:
          enum:
            - Daily
            - Weekly
            - TwiceMonthly
            - Monthly
            - Annually
          type: string
          description: Indicates the pattern of recurrence. In combination with the interval describes the period of time lapsing between each fund transfer
        interval:
          type: integer
          description: 'Number of units between occurrences. If  ‘Daily’: Number of days between occurrences. If   ‘Weekly’: Number of weeks between occurrences. If   ''Monthly’: Number of months between occurrences. If   ‘Annually’: Number of years between occurrences. The value for TwiceMonthly is always represented with 1- one interval'
        dayOfWeek:
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          type: string
          description: '"Specifies day of week of ocurrance, for example: Monday, Tuesday,.etc."'
        dayOfMonth:
          maximum: 31
          minimum: 1
          type: integer
          description: Numeric value representing the day of the month of occurrence
        secondDayOfMonth:
          maximum: 31
          minimum: 1
          type: integer
          description: Numeric value representing the second day of the month of occurrence. This is used for TwiceMonthly recurring models
        month:
          maximum: 12
          minimum: 1
          type: integer
          description: 'Numeric value representing the month of occurence. Valid values: integers between 1 and 12 inclusive'
        weekOfMonth:
          maximum: 5
          minimum: 1
          type: integer
          description: Numeric value represents the week of the month of ocurrance. Values range from 1 thru 5.  A value 5 indicates last week of the month
        secondWeekOfMonth:
          maximum: 5
          minimum: 1
          type: integer
          description: Numeric value represents the second week of the month ocurrance. Values range from 1 thru 5.  A value 5 indicates last week of the month. This is used for TwiceMonthly recurring models
      description: Recurring indicates the time frame and frequency of the transfer fund instruction
    RelationshipAdd:
      title: Relationship
      required:
        - code
        - isPrimary
        - partyId
        - type
      type: object
      properties:
        partyId:
          type: string
          description: A unique identifier related a single customer in the system of record
        type:
          enum:
            - Direct
            - Fiduciary
            - Indirect
            - Primary
          type: string
          description: Type of relationship
        code:
          type: string
          description: Relationship code as defined on the core
        isPrimary:
          type: boolean
          description: Is this the primary relationship to the account (true).  This field must be set to true for one applicant
          default: false
        percentAllocated:
          type: number
          description: Percentage of account allocated to this relationship
          format: float
    ReplaceHoldRequest:
      title: ReplaceHoldRequest
      required:
        - type
      type: object
      properties:
        type:
          enum:
            - Hold
            - Caution
            - Pledge
          type: string
          description: Type of hold
        amount:
          type: number
          description: The amount of the hold
          format: currency
        holdAmountType:
          enum:
            - Ledger
            - Available
            - Fixed
            - Payoff
            - All
          type: string
          description: Identifies the way the amount hold is calculated. Fixed is common  when the hold amount is provided
        effectiveDate:
          type: string
          description: Effective date of the hold
          format: date
        expirationDate:
          type: string
          description: Date on which the hold will expire
          format: date
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
        reasonDescription:
          type: string
          description: 'Reason for the hold '
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        securedAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
    ReplaceHoldResponse:
      title: ReplaceHoldResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    ReplaceStopItemRequest:
      title: ReplaceStopItemRequest
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StopItemType'
        itemNumber:
          $ref: '#/components/schemas/StopItemNumber'
        companyId:
          $ref: '#/components/schemas/StopItemCompanyId'
        amount:
          $ref: '#/components/schemas/StopItemAmount'
        payeeName:
          $ref: '#/components/schemas/StopItemPayeeName'
        originationDate:
          $ref: '#/components/schemas/StopItemOriginationDate'
        expirationDate:
          $ref: '#/components/schemas/StopItemExpirationDate'
        isPermanent:
          $ref: '#/components/schemas/StopItemIsPermanent'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
        reasonDescription:
          $ref: '#/components/schemas/StopItemReasonDescription'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        specialOption:
          $ref: '#/components/schemas/StopItemSpecialOption'
        itemRange:
          $ref: '#/components/schemas/ItemRange'
        varianceRange:
          $ref: '#/components/schemas/VarianceRange'
    ReplaceStopItemResponse:
      title: ReplaceStopItemResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    RoundUp:
      title: RoundUp
      required:
        - accountDetailType
        - accountId
        - accountNumber
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        accountNumber:
          $ref: '#/components/schemas/AccountNumber'
        accountDetailType:
          $ref: '#/components/schemas/AccountDetailType'
        amount:
          type: number
          description: Round up amount
          format: currency
    RoundUpUpdate:
      title: RoundUpUpdate
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        amount:
          type: number
          description: Round up amount
          format: currency
          nullable: true
      nullable: true
    RoundUpAdd:
      title: RoundUpAdd
      required:
        - accountId
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        amount:
          type: number
          description: Round up amount
          format: currency
    RoutingTransitNumber:
      maxLength: 9
      type: string
      description: Routing number is a nine-digit code used by financial institutions to identify other financial institutions. It's also known as an RTN (routing transit number) and an ABA (American Bankers Association) routing number.
    SplitRate:
      title: SplitRate
      type: object
      properties:
        amount:
          type: number
          description: 'Principal balance cutoff where the loan''s interest rate changes '
          format: currency
        underRate:
          type: number
          description: Interest rate that is applied to the principal balance portion below to the split amount.
          format: float
    StopItem:
      title: StopItem
      required:
        - id
        - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/StopItemId'
        type:
          $ref: '#/components/schemas/StopItemType'
        itemNumber:
          $ref: '#/components/schemas/StopItemNumber'
        companyId:
          $ref: '#/components/schemas/StopItemCompanyId'
        amount:
          $ref: '#/components/schemas/StopItemAmount'
        payeeName:
          $ref: '#/components/schemas/StopItemPayeeName'
        originationDate:
          $ref: '#/components/schemas/StopItemOriginationDate'
        createdDate:
          $ref: '#/components/schemas/StopItemCreatedDate'
        expirationDate:
          $ref: '#/components/schemas/StopItemExpirationDate'
        isPermanent:
          $ref: '#/components/schemas/StopItemIsPermanent'
        isCertified:
          $ref: '#/components/schemas/StopItemIsCertified'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
        reasonDescription:
          $ref: '#/components/schemas/StopItemReasonDescription'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        specialOption:
          $ref: '#/components/schemas/StopItemSpecialOption'
        itemRange:
          $ref: '#/components/schemas/ItemRange'
        varianceRange:
          $ref: '#/components/schemas/VarianceRange'
      description: Stop Item Details
    StopItemAmount:
      type: number
      description: The amount of the stop item
      format: currency
    StopItemAmountUpdate:
      type: number
      description: The amount of the stop item
      format: currency
      nullable: true
    StopItemCompanyId:
      type: string
      description: Value representing the company ID located in an ACH batch header
    StopItemCompanyIdUpdate:
      type: string
      description: Value representing the company ID located in an ACH batch header
      nullable: true
    StopItemCreatedDate:
      type: string
      description: Date on which the stop item was created
      format: date
    StopItemExpirationDate:
      type: string
      description: Date on which the stop item will expire
      format: date
    StopItemExpirationDateUpdate:
      type: string
      description: Date on which the stop item will expire
      format: date
      nullable: true
    StopItemId:
      type: string
      description: Value that represents the identifier of the Stop Item that does not  contain sensitive data
    StopItemIsCertified:
      type: boolean
      description: Is the item being presented a certified/cashier's check (true) or is it a regular check (false)
      default: false
    StopItemIsPermanent:
      type: boolean
      description: Is the item's stop permanent (true)
      default: false
    StopItemIsPermanentUpdate:
      type: boolean
      description: 'Is the item''s stop permanent (true) '
      default: false
      nullable: true
    StopItemNumber:
      type: string
      description: Value representing the item that has been stopped.  This field can  contain the check number of a single check
    StopItemNumberUpdate:
      type: string
      description: Value representing the item that has been stopped.  This field can  contain the check number of a single check
      nullable: true
    StopItemOriginationDate:
      type: string
      description: Date the item was originated (when the check was written)
      format: date
    StopItemOriginationDateUpdate:
      type: string
      description: Date the item was originated (when the check was written)
      format: date
      nullable: true
    StopItemPayeeName:
      type: string
      description: Name of the payee for the item
    StopItemPayeeNameUpdate:
      type: string
      description: Name of the payee for the item
      nullable: true
    StopItemReasonDescription:
      type: string
      description: Description of the reason for why the item was stopped
    StopItemReasonDescriptionUpdate:
      type: string
      description: Description of the reason for why the item was stopped
      nullable: true
    StopItemSpecialOption:
      enum:
        - All
        - AllCredit
        - AllDebit
        - AllNonACH
        - AllNonACHCredit
        - AllNonACHDebit
      type: string
      description: Additional processing options associated with the stop item
    StopItemSpecialOptionUpdate:
      enum:
        - All
        - AllCredit
        - AllDebit
        - AllNonACH
        - AllNonACHCredit
        - AllNonACHDebit
      type: string
      description: Additional processing options associated with the stop item
      nullable: true
    StopItemType:
      enum:
        - ACH
        - Check
        - RevokeAuthorization
        - SpecialInstruction
        - Transaction
      type: string
      description: Type of stop items
    Term:
      title: Term
      type: object
      properties:
        endDate:
          type: string
          description: Indicates the date of the end of the term.   Can store the maturity or scheduled payoff date
          format: date
        count:
          type: integer
          description: Indicates the number of periods at the time the account was established.  THe value should be represented as a whole number.
        units:
          enum:
            - Days
            - Weeks
            - Months
            - Years
            - Indefinite
          type: string
          description: Unit of time the term is expressed in
      description: term Information
    TermAdd:
      title: Term
      type: object
      oneOf:
        - $ref: '#/components/schemas/TermEndDate'
        - $ref: '#/components/schemas/TermUnits'
    TermEndDate:
      title: TermEndDate
      required:
        - endDate
      type: object
      properties:
        endDate:
          type: string
          description: Indicates the date of the end of the term.   Can store the maturity or scheduled payoff date
          format: date
    TermUnits:
      title: TermUnits
      required:
        - count
        - units
      type: object
      properties:
        count:
          type: integer
          description: Indicates the number of periods at the time the account was established.  The value should be represented as a whole number.
        units:
          enum:
            - Days
            - Weeks
            - Months
            - Years
            - Indefinite
          type: string
          description: Unit of time the term is expressed in
    Transaction:
      title: Transaction
      required:
        - amount
        - isCustomerViewable
        - number
        - originatedDateTime
        - status
        - transactionCode
        - type
      type: object
      properties:
        number:
          type: string
          description: Universally unique transaction identifier that contains no  sensitive data and should be utilized as the key
        type:
          enum:
            - Credit
            - Debit
            - None
          type: string
          description: Type of transaction
        categoryType:
          enum:
            - Advance
            - Charge
            - Credit
            - Debit
            - Deposit
            - Disbursement
            - Dividend
            - Fee
            - Interest
            - Other
            - Payment
            - Payoff
            - Principal
            - RateChange
            - Receipt
            - Transfer
            - Unspecified
            - Withdrawal
            - Withholding
          type: string
          description: General transaction category
        categoryExceptionType:
          enum:
            - Adjustment
            - Correction
            - Reversal
            - Waived
          type: string
          description: Exception type related to category
        status:
          enum:
            - Memo
            - Pending
            - Posted
          type: string
          description: "Transaction status
  * 'Memo'- The debit or credit transactions is temporary applied to an account for which the complete posting to update the balance will be done as part of EOD (end-of-day) batch processing
  * 'Posted' - The debit or credit has been applied to the balance of the account and the transaction has been completed
  * 'Pending' - The debit or credit transaction is merely anticipated, based on activity in your account"
        sequence:
          type: integer
          description: Number that identifies the sequence of transactions for given day
        originatedDateTime:
          type: string
          description: Date and time the transaction originated
          format: date-time
        postedDateTime:
          type: string
          description: Date and time the transaction posted
          format: date-time
        descriptions:
          type: array
          items:
            type: string
          description: Transaction description as it appears on a customer's statement
        traceNumber:
          type: string
          description: Trace number
        checkNumber:
          type: string
          description: Check number associated with the transaction
        itemNumber:
          type: string
          description: 'It represents the check number, serialized deposit or any other number  associated to the transaction processing.  When the item is a check  both attributes itemNumber and CheckNumber must be provided'
        itemType:
          enum:
            - Check
            - DepositSlip
            - Coupon
            - Receipt
            - Other
          type: string
          description: Item type
        transactionCode:
          type: string
          description: Transaction code used for posting
        referenceTransactionCode:
          type: string
          description: Reference transaction code defines transaction processing rules
        amount:
          type: number
          description: Amount of transaction
          format: currency
        isCustomerViewable:
          type: boolean
          description: Is the transaction viewable by the customer
        imageIndicator:
          enum:
            - Available
            - NotAvailable
            - Undefined
          type: string
          description: Indicates if there are images available.
        distributions:
          type: array
          items:
            $ref: '#/components/schemas/Distribution'
          description: Array of elements that describe the transaction amounts
        balances:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
          description: Array of elements that describe the balance amounts being presented.  Highly recommended to provide balance position after posting
    Transfer:
      title: Transfer
      required:
        - amount
        - currencyCode
        - id
        - relatedAccount
        - status
        - type
      type: object
      properties:
        id:
          type: string
          description: "Generic identifier of the transfer fund instruction that contains no sensitive data and should be
  utilized as the key within URI when performing RESTful operations"
        type:
          enum:
            - InterestOnly
            - PrincipalOnly
            - EscrowOnly
            - InsuranceOnly
            - Regular
          type: string
          description: 'Specifies the how the transfer amount is applied to the account. For Loan account indicates how to distribute the amount of the transfer '
        description:
          type: string
          description: Description of the transfer fund
        amount:
          type: number
          description: Monetary amount of the transfer fund
          format: currency
        currencyCode:
          type: string
          description: 'Value identifiying which currency the amounts and balances are expressed in.   Value is ISO 4217 currency code, eg USD, EUR,CHF'
        status:
          enum:
            - Active
            - Inactive
            - Hold
          type: string
          description: Indicates the status of the transfer fund instruction
        relatedAccount:
          $ref: '#/components/schemas/AccountTransferRef'
        nextTransferDate:
          type: string
          description: 'Date of when the transfer fund will be posted '
          format: date
        lastTransferDateTime:
          type: string
          description: Date and time when the transfer fund was last posted
          format: date-time
        lastTransferAmount:
          type: number
          description: Amount of the transfer fund last posted
          format: currency
        recurring:
          $ref: '#/components/schemas/RecurringDetail'
    UpdateAccountRequest:
      title: UpdateAccountRequest
      type: object
      properties:
        nickname:
          type: string
          description: User defined name of the account
          nullable: true
        titles:
          type: array
          items:
            type: string
          description: Title on account typically identifies ownership or responsibility for account  and manner in which ownership/responsibility is assigned
          nullable: true
        titleCode:
          enum:
            - AfterName
            - BeforeName
            - NoPrint
            - Undefined
          type: string
          description: Instructs the location of the account title within the block of name/address
          nullable: true
        preferredContactMethod:
          enum:
            - Email
            - Phone
            - SMS
          type: string
          description: Preferred method of contact
          nullable: true
        deposit:
          $ref: '#/components/schemas/DepositUpdate'
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeaturesUpdate'
          description: 'Account features    '
          nullable: true
    UpdateAccountResponse:
      title: UpdateAccountResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    UpdateDocumentDeliveryRequest:
      title: UpdateDocumentDeliveryRequest
      properties:
        documentDeliveries:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDeliveriesUpdate'
          nullable: true
    UpdateDocumentDeliveryResponse:
      title: UpdateDocumentDeliveryResponse
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    UpdateHoldRequest:
      title: UpdateHoldRequest
      type: object
      properties:
        type:
          enum:
            - Hold
            - Caution
            - Pledge
          type: string
          description: Type of hold
        amount:
          type: number
          description: The amount of the hold
          format: currency
          nullable: true
        holdAmountType:
          enum:
            - Ledger
            - Available
            - Fixed
            - Payoff
            - All
          type: string
          description: Identifies the way the amount hold is calculated. Fixed is common when the hold amount is provided
          nullable: true
        effectiveDate:
          type: string
          description: Effective date of the hold
          format: date
          nullable: true
        expirationDate:
          type: string
          description: Date on which the hold will expire
          format: date
          nullable: true
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCodeUpdate'
        reasonDescription:
          type: string
          description: 'Reason for the hold '
          nullable: true
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
          nullable: true
        securedAccount:
          $ref: '#/components/schemas/AccountReferenceUpdate'
    UpdateHoldResponse:
      title: UpdateHoldResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    UpdateStopItemRequest:
      title: UpdateStopItemRequest
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StopItemType'
        itemNumber:
          $ref: '#/components/schemas/StopItemNumberUpdate'
        companyId:
          $ref: '#/components/schemas/StopItemCompanyIdUpdate'
        amount:
          $ref: '#/components/schemas/StopItemAmountUpdate'
        payeeName:
          $ref: '#/components/schemas/StopItemPayeeNameUpdate'
        originationDate:
          $ref: '#/components/schemas/StopItemOriginationDateUpdate'
        expirationDate:
          $ref: '#/components/schemas/StopItemExpirationDateUpdate'
        isPermanent:
          $ref: '#/components/schemas/StopItemIsPermanentUpdate'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCodeUpdate'
        reasonDescription:
          $ref: '#/components/schemas/StopItemReasonDescriptionUpdate'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
          nullable: true
        specialOption:
          $ref: '#/components/schemas/StopItemSpecialOptionUpdate'
        itemRange:
          $ref: '#/components/schemas/ItemRangeUpdate'
        varianceRange:
          $ref: '#/components/schemas/VarianceRangeUpdate'
    UpdateStopItemResponse:
      title: UpdateStopItemResponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: 'More than one error, warning or informational messages may be returned in the response.'
    VarianceRange:
      title: VarianceRange
      required:
        - fromAmount
        - toAmount
      type: object
      properties:
        fromAmount:
          type: number
          description: Lower end of the variance the amount can be
          format: currency
        toAmount:
          type: number
          description: Upper end of the variance the amount can be
          format: currency
    VarianceRangeUpdate:
      title: VarianceRangeUpdate
      type: object
      properties:
        fromAmount:
          type: number
          description: Lower end of the variance the amount can be
          format: currency
        toAmount:
          type: number
          description: Upper end of the variance the amount can be
          format: currency
      nullable: true
    Links:
      title: Links
      required:
        - self
      type: object
      properties:
        self:
          type: string
          description: Current record
          format: uri
        first:
          type: string
          description: First record available
          format: uri
        previous:
          type: string
          description: Previous record available
          format: uri
        next:
          type: string
          description: Next record available
          format: uri
        last:
          type: string
          description: Last record available
          format: uri
      description: Links Details
    Message:
      title: Message
      required:
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: 'A URI reference [RFC3986] that identifies the problem type'
        title:
          type: string
          description: A short human-readable summary of the problem type
        detail:
          type: string
          description: 'A human-readable description of the specific error  '
        instance:
          type: string
          description: 'This optional key may be present, with a unique URI for the specific error;  this will often point to an error log for that specific response.'
    AddAccountResponse_account:
      required:
        - id
        - number
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
        number:
          $ref: '#/components/schemas/AccountNumber'
    AddHoldResponse_hold:
      required:
        - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/HoldId'
    AddStopItemResponse_stopItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/StopItemId'
  examples:
    LWHeader:
      value:
        LWHeader:
          Fiserv-OrganizationId: 11-222-3333
          Fiserv-TransactionId: 2699906D-6D65-4AE3-AD68-D2ACE751C34A
          Fiserv-ClientDateTime: '2021-05-27T13:23:10.508Z'
    AccountList:
      value:
        links:
          self: accountsLW/accounts/v1?$limit=10
          first: accountsLW/accounts/v1?limit=10
          next: accountsLW/accounts/v1?$limit=10&$cursor=333344344333
        accounts:
          - id: F17AA97E-4281-4E94-B045-BC0637D91C92
            type: Deposit
            detailType: Checking
            number: '****8304'
            description: Gold Checking
            nickname: My Checking
            status: Active
            detailStatus: Active
            isOpen: 'true'
            cardAttached: 'true'
            currencyCode: USD
            title: Owner
            classCode: '3'
            branchCode: '333'
            lastTransactionDateTime: '2021-05-27T13:23:10.508Z'
            lastTransactionAmount: '10.0'
            rate: '1.3'
            balance:
              - type: AvailableCredit
                amount: '20.0'
              - type: Available
                amount: '130.0'
              - type: Current
                amount: '100.0'
              - type: Ledger
                amount: '100.0'
              - type: MemoAvailable
                amount: '110.0'
          - id: F17AA97E-4281-4E94-B045-BC0637D91C92
            type: Deposit
            detailType: Savings
            number: '****8304'
            description: Personal Savings
            nickname: My Savings
            status: Active
            detailStatus: Active
            isOpen: 'true'
            cardAttached: 'true'
            currencyCode: USD
            title: Owner
            classCode: '3'
            branchCode: '333'
            lastTransactionDateTime: '2021-05-27T13:23:10.508Z'
            lastTransactionAmount: '24.01'
            rate: '0'
            balances:
              - type: Available
                amount: '1000.0'
              - type: Current
                amount: '1500.45'
              - type: Ledger
                amount: '1500.45'
              - type: MemoAvailable
                amount: '1000.0'
          - id: F6CF8BA2-7A46-453A-8A27-399D86432676
            type: Loan
            detailType: Consumer
            number: '****6492'
            description: Consumer Loan
            nickname: My Loan
            status: Active
            detailStatus: Active
            isOpen: 'true'
            cardAttached: 'false'
            currencyCode: USD
            title: Owner
            classCode: '3'
            branchCode: '333'
            lastTransactionDateTime: '2021-05-27T14:56:29.980Z'
            lastTransactionAmount: '30.0'
            rate: '15.55'
            balances:
              - type: AmountDue
                amount: '40.0'
              - type: AvailableCredit
                amount: '8000.0'
              - type: PayoffAmount
                amount: '4444.0'
              - type: Principal
                amount: '4000.0'
            term:
              endDate: '2022-05-27'
              count: '12'
              units: Months
            payment:
              dueDate: '2021-05-27'
              dueAmount: '40.0'
              minimumAmount: '0.0'
              isPastDue: 'false'
    Beneficiaries:
      value:
        messages:
          - type: https://lwapi.fiserv.com/message-result/success
            title: Success
            detail: The request was successful
            instance: ''
        links:
          self: accountsLW/1.0.0/accounts/v1/F17AA97E-4281-4E94-B045-BC0637D91C92/beneficiaries
          first: ''
          previous: ''
          next: ''
          last: ''
        beneficiaries:
          - id: 3D5E0EB3-1877-4B57-BBAF-C569708A9B45
            type: Primary
            code: Child
            birthDate: '2020-01-01'
            firstName: Dave
            middleName: Oscar
            lastName: Smith
            taxNumberType: SSN
            taxNumber: 111-11-1111
            percentAllocated: '50'
            address:
              type: Primary
              lineOne: 123 Street
              lineTwo: ''
              city: Lake Mary
              stateProvince: FL
              countryCode: USA
              postalCode: '32746'
          - partyId: 8BDA4351-D993-4C3E-B8EA-65836951400E
            partyNumber: 79A85428
            type: Primary
            code: Children
            birthDate: '2022-01-01'
            firstName: Debbie
            middleName: Alexandra
            lastName: Smith
            taxNumberType: SSN
            taxNumber: 222-22-2222
            percentallocated: '50'
            address:
              referenceNumber: 174A5F6A
              type: Primary
              lineOne: 123 Street
              lineTwo: ''
              city: Lake Mary
              stateProvince: FL
              countryCode: USA
              postalCode: '32746'
    Transactions:
      value:
        messages:
          - type: https://lwapi.fiserv.com/message-result/success
            title: Success
            detail: The request was successful
            instance: ''
        links:
          self: accountsLW/0.9.0/accounts/v1?$pageOffset=1&$pageLimit=10
          first: accountsLW/0.9.0/accounts/v1?$pageOffset=1&$pageLimit=10
          previous: ''
          next: ''
          last: accountsLW/0.9.0/accounts/v1?$pageOffset=1&$pageLimit=10
        transactions:
          - id: F17AA97E-4281-4E94-B045-BC0637D91C98
            type: Debit
            category: Adjustment
            status: Posted
            sequence: '9596'
            originatedDateTime: '2021-05-27T13:23:10.508Z'
            postedDateTime: '2021-05-27T13:23:10.508Z'
            description: Adjustment of Money
            traceNumber: 105A
            checkNumber: 10C
            transactionCode: TC51
            amount: '75'
            isCustomerViewable: 'true'
            distribution:
              - type: Principal
                amount: '70'
              - type: ServiceCharge
                amount: '5'
            balances:
              - type: Available
                amount: '100'
              - type: Current
                amount: '100'
            image:
              - type: Photo
                front: ''
                back: ''
              - type: Signature
                front: ''
                back: ''
          - id: F17AA97E-4281-4E94-B045-BC0637D91C99
            type: Credit
            category: Deposit
            status: Memo
            sequence: '9597'
            originatedDateTime: '2021-05-27T13:23:10.508Z'
            postedDateTime: '2021-05-27T13:23:10.508Z'
            description: Deposit of Money
            traceNumber: 106A
            checkNumber: 11C
            transactionCode: TC52
            amount: '115'
            distribution:
              - type: Principal
                amount: '100'
              - type: ServiceCharge
                amount: '15'
            balances:
              - type: Available
                amount: '215'
              - type: Current
                amount: '215'
            image:
              - type: Photo
                front: ''
                back: ''
              - type: Signature
                front: ''
                back: ''
    ErrorResponse:
      value:
        messages:
          - type: https://lwapi.fiserv.com/message-result/error
            title: Error
            detail: The request failed
            instance: ''
    accountKeys:
      value:
        account1: 'detailType=checking, number=1234578, detailType=club, number=5457567'
        account2: 'detailType=club, number=5457567'
    searchCriteria:
      value:
        taxType: SSN
        taxId: 11-55-789574
