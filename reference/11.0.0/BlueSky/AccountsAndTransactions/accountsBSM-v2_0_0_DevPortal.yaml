openapi: 3.0.0
info:
  title: Accounts
  contact:  
    name: andy bahmueller
    email: andy.bahmueller@fiserv.com
  version: 2.0.0
  description: >-
    The Accounts Service supports operations to add, update and retrieve information regarding 
    product accounts serviced by financial institutions. An account is a product 
    serviced by a financial institution (FI) that carries a balance (credit or debit) 
    in a particular currency. Generally account types fall into one of two major 
    classifications deposit and loan product account.  
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/accountsBSM/2.0.0
  - description: SwaggerHub API Auto Mocking
    url: http://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/accountsBSM/2.0.0
 
paths:

  /accounts/v2:
    parameters:
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    post:
      tags:
        - Add Account  
      x-group-name: Accounts Service
      x-proxy-name: Add Account
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: AddAccount
      description: "Adds a loan or deposit account"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccountRequest'
      responses: 
        "201":
          description: Created
          headers:
            AccountAddResponse:
              schema:
                type: string
                description: >-
                  URI containing the Id of the account that was created.  The URI
                  can be used in subsequent GET requests for account specifics
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/AddAccountResponse'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAccountAcceptedResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'

  /accounts/v2/{accountId}:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value associated with the identifier associated with a single account
        examples:
          Sample:
            value: "F17AA97E-4281-4E94-B045-BC0637D91C92"
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - Get Account details
      x-group-name: Accounts Service
      x-proxy-name: Get Account details
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: getAccount
      description: "Retrieves account details associated with a given account"
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/GetAccountResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Update Account nickname
      x-group-name: Accounts Service
      x-proxy-name: Update Account nickname
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: updateAccount
      description: >-
          Updates a nickname associated with an account
      requestBody:
        description: Update account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UpdateAccountResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
                                  
  /accounts/v2/{accountId}/balances:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value associated with the identifier associated with a single account.
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Balances 
      x-group-name: Accounts Service
      x-proxy-name: List Balances 
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: listBalances
      description: "Retrieves balances associated with a given account"
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ListBalancesResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
  
  /accounts/v2/{accountId}/fundsAvailability:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value associated with the identifier associated with a single account.
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - Get Funds Availability
      x-group-name: Accounts Service
      x-proxy-name: Get Funds Availability 
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: getFundsAvailability
      description: "Validates whether the account has enough funds available to proces a transaction"
      parameters:
        - name: balanceType
          in: query
          description: >-
              Indicates balance type to use
          required: false
          schema:
            type: string
            enum:
              - Ledger
              - Available
        - name: amount
          in: query
          description: >-
              Transaction amount
          required: false
          schema:
            type: number
            format: currency
        - name: includeOptions
          in: query
          description: >-
              Additional options that are used when calculating the total availability of funds
          required: false
          schema:
            type: array
            items: 
              type: string
              enum:
                - Overdraft
                - TransferIn
                - WithdrawalMargin
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/GetFundsAvailabilityResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
  
  /accounts/v2/{accountId}/documentDeliveries:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value that is used to either as the identifier of a customer/owner/user 
            associated with accounts or the identifier associated with a single account.
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    patch:
      tags:
        - Update Document Delivery
      x-group-name: Accounts Service
      x-proxy-name: Update Document Delivery
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: updateDocumentDeliveries
      description: >-
            Updates account document delivery preferences. Refer to Party Service for changes to the party's document delivery preferences changes
      requestBody:
        description: Update document deliveries
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentDeliveryRequest'
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UpdateDocumentDeliveryResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'

          
  /accounts/v2/{accountId}/transactions:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value that is used to either as the identifier of a customer/owner/user 
            associated with accounts or the identifier associated with a single account.
        examples:
          Sample:
            value: "F17AA97E-4281-4E94-B045-BC0637D91C92"
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Transactions
      x-group-name: Accounts Service
      x-proxy-name: List Transactions
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: listTransactions
      description: "Retrieves financial transactions associated with a given account"
      parameters:
        - name: $pageLimit
          in: query
          description: "Page limit is the maximum number of records to be returned. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $pageOffset
          in: query
          description: "Page offset is the page starting point of the result set. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "11"
        - name: $cursorLimit
          in: query
          description: "Cursor limit is the maximum number of records to be returned. Use for cursor base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $cursor
          in: query
          description: "Cursor is the record pointer starting point of the result set. Use for cursor base pagination"
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "133442222"
        - name: minimumAmount
          in: query
          description: >-
              Minimum transaction amount for search criteria
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "1.00"
        - name: maximumAmount
          in: query
          description: >-
              Maximum transaction amount for search criteria
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "1000.00"
        - name: fromDate
          in: query
          description: >-
              Transaction start date search criteria
          required: false
          schema:
            type: string
            format: date
          examples:
            Sample:
              value: "2010-02-13"
        - name: toDate
          in: query
          description: >-
              Transaction end date search criteria
          required: false
          schema:
            type: string
            format: date
          examples:
            Sample:
              value: "2010-02-16"
        - name: startCheckNumber
          in: query
          description: >-
              Start check number
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "100"
        - name: endCheckNumber
          in: query
          description: >-
              End check number
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "150"
        - name: status
          in: query
          description: >-
              Status of transaction
          required: false
          schema:
            type: array
            items: 
              type: string
              enum:
                - Pending
                - Posted
                - Memo
          style: form
          explode: false
          examples:
            onestatus:
              value: [Pending]
            multiplestatus:
              value: [Posted,Memo]
      responses:  
        "200":
          description: Ok
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ListTransactionsResponse'
              #examples:
                #Sample:
                  #$ref: '#/components/examples/Transactions'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
  /accounts/v2/{accountId}/transactions/download:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value that is used to either as the identifier of a customer/owner/user 
            associated with accounts or the identifier associated with a single account.
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Transactions download 
      x-group-name: Accounts Service
      x-proxy-name: List Transactions download 
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: ListTransactionDownload
      description: "Process a request for download of financial transactions for an account"
      parameters:
        - name: type
          in: query
          description: >-
              Time period for the transactions
          required: false
          schema:
            type: string
            enum:
              - CurrentStatement
              - PreviousStatement
              - CustomRange
        - name: format
          in: query
          description: >-
              Return file format
          required: false
          schema:
            type: string
            enum:
              - CSV
              - OFX
              - QFX
        - name: fromDate
          in: query
          description: >-
              Beginning date for custom date range
          required: false
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          description: >-
              Ending date for custom date range
          required: false
          schema:
            type: string
            format: date
      responses: 
        "200":
          description: Ok
          content:
            text/csv:
              schema:
                type: string
            text/ofx:
              schema:
                type: string
                format: binary
            application/vmd.intu.qfx:
              schema:
                type: string
                format: binary
        "204":
          description: Ok - No content
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
                 
  /accounts/v2/{accountId}/overdraftProtection:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value associated with the identifier associated with a single account
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Overdraft Protection 
      x-group-name: Accounts Service
      x-proxy-name: List Overdraft Protection
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: listOverdraftProtection
      description: "Retrieves an account's overdraft funding accounts"
      parameters:
        - name: $pageLimit
          in: query
          description: "Page limit is the maximum number of records to be returned. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $pageOffset
          in: query
          description: "Page offset is the page starting point of the result set. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "11"
        - name: $cursorLimit
          in: query
          description: "Cursor limit is the maximum number of records to be returned. Use for cursor base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $cursor
          in: query
          description: "Cursor is the record pointer starting point of the result set. Use for cursor base pagination"
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "133442222"
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ListOverdraftProtectionResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'

                 
  /accounts/v2/{accountId}/stopItem:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Stop Items
      x-group-name: Accounts Service
      x-proxy-name: List Stop Items
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: listStopItems
      description: >-
          Retrieves a list of stop items associated with an account
      parameters:
        - name: $pageLimit
          in: query
          description: >-
            "Page limit is the maximum number of records to be returned. Use for 
            page based pagination."
          required: false
          schema: 
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $pageOffset
          in: query
          description: >-
            "Page offset is the page starting point of the result set. Use for 
            page based pagination."
          required: false
          schema:
            type: integer
            minimum: 0
          examples:
            Sample:
              value: "1"
        - name: $cursorLimit
          in: query
          description: >-
            "Cursor limit is the maximum number of records to be returned. Use 
            for cursor base pagination."
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $cursor
          in: query
          description: >- 
            "Cursor is the record pointer starting point of the result set. Use 
            for cursor based pagination."
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "1222"
        - name: type
          in: query
          description: >-
            "Type of Stop Item"
          required: false
          schema:
            type: string
            enum:
              - ACH
              - Check
              - RevokeAuthorization
              - SpecialInstruction
              - Transaction   
          examples:
            Sample:
              value: "Check"
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ListStopItemResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Add Stop Item
      x-group-name: Accounts Service
      x-proxy-name: Add Stop Item
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: addStopItemV2
      description: >-
          Adds a stop item to an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStopItemRequest'
      responses: 
        "201":
          description: Created
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/AddStopItemResponse'
     
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
  
  /accounts/v2/{accountId}/stopItem/{id}:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StopItemId'
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId' 
    delete:
      tags:
        - Delete Stop Item 
      x-group-name: Accounts Service
      x-proxy-name: Delete Stop Item 
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: deleteStopItem
      description: >-
          Deletes a stop item associated with an account
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStopItemResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Replace Stop Item
      x-group-name: Accounts Service
      x-proxy-name: Replace Stop Item 
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: replaceStopItemV2
      description: >-
          Replaces a stop item associated with an account
      requestBody:
        description: Replace stop item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceStopItemRequest'
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ReplaceStopItemResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Update Stop Item 
      x-group-name: Accounts Service
      x-proxy-name: Update Stop Item 
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: updateStopItem
      description: >-
          Updates a stop item associated with an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStopItemRequest'
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UpdateStopItemResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
 
  
  /accounts/v2/{accountId}/transfers:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
        description: >-
            Generic value that is used to either as the identifier of a customer/owner/user 
            associated with accounts or the identifier associated with a single account.
        examples:
          Sample:
            value: "F17AA97E-4281-4E94-B045-BC0637D91C92"
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Transfers
      x-group-name: Accounts Service
      x-proxy-name: List Transfers
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: listTransfer
      description: >- 
          Retrieves transfer funds associated to a given account
      parameters:
        - name: $pageLimit
          in: query
          description: "Page limit is the maximum number of records to be returned. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $pageOffset
          in: query
          description: "Page offset is the page starting point of the result set. Use for page base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "11"
        - name: $cursorLimit
          in: query
          description: "Cursor limit is the maximum number of records to be returned. Use for cursor base pagination"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $cursor
          in: query
          description: "Cursor is the record pointer starting point of the result set. Use for cursor base pagination"
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "133442222"
        - name: status
          in: query
          description: >-
              Status of transfer fund
          required: false
          schema:
            type: array
            items: 
              type: string
              enum:
                - Active
                - Inactive
                - Hold
          style: form
          explode: false
          examples:
            onestatus:
              value: [Hold]
            multiplestatus:
              value: [Active,Hold]
        - name: nextTransferFromDate
          in: query
          description: >-
              Beginning date used when searching by next transfer date
          required: false
          schema:
            type: string
            format: date
          examples:
            Sample:
              value: "2010-02-13"
        - name: nextTransferToDate
          in: query
          description: >-
              Ending date used when searching by next transfer date
          required: false
          schema:
            type: string
            format: date
          examples:
            Sample:
              value: "2010-02-16"
      
     
      responses:  
        "200":
          description: Ok
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ListTransfersResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'



  /accounts/v2/{accountId}/hold:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId'
    get:
      tags:
        - List Holds
      x-group-name: Accounts Service
      x-proxy-name: List Holds
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: listHolds
      description: >-
          Retrieves a list of holds associated with an account
      parameters:
        - name: $pageLimit
          in: query
          description: >-
            "Page limit is the maximum number of records to be returned. Use for 
            page based pagination."
          required: false
          schema: 
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $pageOffset
          in: query
          description: >-
            "Page offset is the page starting point of the result set. Use for 
            page based pagination."
          required: false
          schema:
            type: integer
            minimum: 0
          examples:
            Sample:
              value: "1"
        - name: $cursorLimit
          in: query
          description: >-
            "Cursor limit is the maximum number of records to be returned. Use 
            for cursor base pagination."
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 250
          examples:
            Sample:
              value: "10"
        - name: $cursor
          in: query
          description: >-
            "Cursor is the record pointer starting point of the result set. Use 
            for cursor based pagination."
          required: false
          schema:
            type: string
          examples:
            Sample:
              value: "1222"
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ListHoldsResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Add Hold
      x-group-name: Accounts Service
      x-proxy-name: Add Hold
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: addHold
      description: >-
          Adds a hold to an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHoldRequest'
      responses: 
        "201":
          description: Created
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/AddHoldResponse'
   
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
  
  /accounts/v2/{accountId}/hold/{id}:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoldId'
      - name: Fiserv-OrganizationId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-OrganizationId'
      - name: Fiserv-TransactionId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-TransactionId'
      - name: Fiserv-ClientApplicationName
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientApplicationName'
      - name: Fiserv-Channel
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-Channel'
      - name: Fiserv-ClientDateTime
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-ClientDateTime'
      - name: Fiserv-VendorId
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Fiserv-VendorId' 
    delete:
      tags:
        - Delete Hold
      x-group-name: Accounts Service
      x-proxy-name: Delete Hold
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: deleteHold
      description: >-
          Deletes a hold associated with an account
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHoldResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Replace Hold
      x-group-name: Accounts Service
      x-proxy-name: Replace Hold
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: replaceHold
      description: >-
          Replaces a hold associated with an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceHoldRequest'
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ReplaceHoldResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Update Hold
      x-group-name: Accounts Service
      x-proxy-name: Update Hold
      x-child-product-name: ["Leve","Accounts and Transactions"]
      operationId: updateHold
      description: >-
          Updates hold associated with an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHoldRequest'
      responses: 
        "200":
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UpdateHoldResponse'
        default: 
          description: "Unexpected error"
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/ErrorResponse'


components:
  schemas:
    Fiserv-OrganizationId:
      type: string
      description: >-
        Organization Identifier is a unique ID that represents the financial institution 
        or holding vendor.  This ID does not necessarily match the Org ID or Bank ID in 
        the backend system.  To ensure uniqueness across all institutions in all parts 
        of the world, use the Dun and Bradstreet number
    Fiserv-TransactionId:
      type: string
      description: >-
        Transaction Identifier. This is the transaction UUID of the current message
    Fiserv-ClientApplicationName:
      type: string
      description: >-
        Name of the application making the service request (e.g. Architect, 
        Commercial Center, etc.)
    Fiserv-Channel:
      type: string
      description: >-
        Indicates the channel used by the client application
    Fiserv-ClientDateTime:
      type: string
      description: >-
        Client date and time as reported by the client application that is 
        making the service request
    Fiserv-VendorId:
      type: string
      description: >-
        An identifier, supplied by Fiserv, that represents the vendor using this API service
   
  
    Account:
      title: Accounts
      required: 
        - type
        - detailType
        - number  
        - productIdentification
        - status
        - detailStatus
        - currencyCode
        - isOpen
      properties:
        type:
          type: string
          enum:
            - Deposit
            - Loan
          description: >-
              Classifies the type of product with which an account is associated 
              at a high level; Deposit, Loan.  Additional detail about the 
              account is at the account object level
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: >-
              Actual account number as defined by the bank or credit union. In the case of some credit units this number may be a combination of the member number with the share type or certificate number or loan note number
        productIdentification:
          type: string
          description: >-
            Indicates the product for the account as defined by the bank or credit union
        productDescription:
          type: string
          description: >-
              Product description
        nickname:
          type: string
          description: >-
              User defined name of the account
        status:
          type: string
          description: >-
              Used to indicate the status of the account
          enum:
            - Active
            - Inactive
        detailStatus:
          $ref: '#/components/schemas/AccountDetailStatus'
        useType:
          type: string
          description: >-
            Identifies how the account is used
          enum:
            - Business
            - Personal
            - Undefined
        externalServicerCode:
          type: string
          description: >-
              A code that identifies the external servicer for this account.
        isOpen:
          type: boolean
          description: >-
              Is the account open (true) or closed (false)
        openDate:
          type: string
          format: date
          description: >-
              Date the account was opened
        branchCode:
          type: string
          description: >-
             Value of the identifier of the branch  
        currencyCode:
          type: string
          description: >-
              Value identifiying which currency the amounts and balances are expressed in.  Value is ISO 4217 currency code, eg USD, EUR,CHF
        classCode:
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Used to group accounts. The Class Code controls the method of  processing and reporting accounts. For Checking accounts this classification consist of codes that group accounts as Regular, Money Market, NOW, etc. For Loan accounts this classification consist of codes that group accounts as Commercial, Construction, Home Equity, Mortgage, Installment, etc.
        title:
          type: string
          description: >-
              Title on account typically identifies ownership or responsibility for account and manner in which ownership/responsibility is assigned
        titleCode:
          type: string
          description: >-
              Instructs  the  location of the account title  within the block of name/address
          enum:
            - AfterName
            - BeforeName
            - NoPrint
        lastTransactionDateTime:
          type: string
          format: date-time
          description: >-
              Date of last financial transaction on the account
        lastTransactionAmount:
          type: number
          format: currency
          description: >-
              Amount of last financial transaction posted to account
        rate:
          type: number
          format: float
          description: >-
              The interest or earnings rate associated with the account
        isCardAttached:
          type: boolean
          default: false
          description: >-
              Is there at least 1 card associated with this account (true)
        isCombinedStatement:
          type: boolean 
          description: >-
            Is this account part of a combined statement (true)
        balances:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Balance'
          description: >-
            Balance. Defines account balances a financial institution account may carry (ex ledger, available, collected, etc.)
        organization:
          $ref: '#/components/schemas/Organization'
        payment:
          $ref: '#/components/schemas/Payment'
        term:
          $ref: '#/components/schemas/Term' 
        preferredContactMethod:
          type: string
          description: >-
            Preferred contact method
          enum:
            - Email
            - Phone
            - SMS
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: >-
              Defines specific elements that describe a address information 
        phones:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
          description: >-
              Defines specific elements that Describe a telephone number
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
          description: >-
              Defines specific elements that describe an email
        deposit:
          $ref: '#/components/schemas/DepositDetail'
        loan:
          $ref: '#/components/schemas/LoanDetail'
        interestPaid:
          $ref: '#/components/schemas/InterestPaid'
        interestAccrual:
          $ref: '#/components/schemas/InterestAccrual'
          
    AccountDetail:
      type: object
      required:
        - detailType
        - number
      properties:
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: >-
              Actual account number as defined by the bank or credit union
        organization:
          $ref: '#/components/schemas/Organization'
          
    AccountDetailStatus:
      title: AccountDetailStatus
      type: string
      description: >-
        Indicates a more specific status of the account.  Values:
          
          * 'Active' - An open bank account in which transactions can be made
          * 'Bankruptcy' - Bankruptcy is a legal process through which people or other entities who cannot repay debts to creditors may seek relief from some or all of their debts. In most jurisdictions, bankruptcy is imposed by a court order, often initiated by the debtor
          * 'ChargedOff' - A charged-off is a declaration by a creditor that an amount of debt is unlikely to be collected. Also known as Written-Off
          * 'ClientDefined' - The status has been defined by the financial institution
          * 'Closed' - A closed account is any account that has been deactivated or otherwise terminated, either by the customer, custodian or counterparty. At this stage, no further credits and debits can be added.
          * 'ClosedReopenDeposit' - The account has been closed but it could be reopened with a deposit. Some banks close accounts with zero balance but allow the account to be reopened if a deposit occurs
          * 'ClosedToAdvances' - The Lender stops full or partial advances of the loan to the borrower
          * 'ClosedToday' -  Prevents any posting and/or maintenance to the account status on the day the closing transaction is performed
          * 'ClosedToPosting' - The account cannot accept debit or credit transactions
          * 'ClosedWithBalances' - The account has been closed with outstanding balances
          * 'Collection' - The account has been referred to a collection agency to collect on the bad debt
          * 'CoolingOff' - Indicates the account is within the grace period where the customer has rights to cancel a credit agreement –NEED VALIDATION
          * 'Delinquent' - A delinquent account means that the account is behind on payments
          * 'Dormant' - A dormant account is an account that has had no financial activity for a long period of time, except for the posting of interest. Financial institutions are required by state laws to transfer resources held in dormant accounts to the state's treasury after the accounts have been dormant for a certain period of time
          * 'EarlyCollection' - The account has started the process of collection.
          * 'Escheated' - When money lies dormant in a deposit account or appears to be abandoned, the bank or other organizations with which the money was deposited aren’t necessarily allowed to just keep that money for their own use. After a period of time, they’re required to turn it over to the state. This is called escheatment. Once it's turned over to the state for safekeeping, the owner of the money can still access it by making a proper claim for it
          * 'Foreclosure' - Foreclosure is a legal process in which a lender attempts to recover the balance of a loan from a borrower who has stopped making payments to the lender by forcing the sale of the asset used as the collateral for the loan
          * 'Hold' - There is a restriction on an account owner's ability to access funds in the account due to various reasons. When a bank places an account on hold, it usually does so to protect itself from potential loss, but it also may have the interest of the customer in mind
          * 'Inactive' -A bank account that has not been used for a long period of time
          * 'Matured' -  Refers to the date at which a certificate of deposit or CD reaches the last date of its term. The Deposit Maturity also marks the date when the CD is either redeemed for face value or has its maturity rolled over to a later date
          * 'Managed' - The account is manually controlled by the financial institution. The account is being monitored outside from an automated inactive/dormant schedule maybe because of suspicious activity.
          * 'New' -  New account today
          * 'NewThisMonth' - New account this month
          * 'NoCreditPost' - An account that does not accept credit   transactions
          * 'NoDebitPost' - Post no debit is a situation where all debit transactions are prevented (blocked) on an account to stop money from going out of the bank account
          * 'NonAccrual' - A nonaccrual loan is a lender's term for an unsecured loan whose payment is 90 days or more overdue. The loan is no longer generating its stated interest rate because no payment has been made by the borrower. It is, therefore, a nonperforming loan. Loans can have interest credited only when the borrower makes a payment (of a portion of the principal plus interest). The interest on a nonaccrual loan is thus recorded as earned income. Nonaccrual loans are sometimes referred to as doubtful loans, troubled loans, or sour loans
          * 'NoRenew' - An account that does not renew at maturity or on expiration
          * 'NoWithdrawal' - An account that does not accept withdrawal transactions
          * 'Pending' - An account that has not been fully onboarded on the system
          * 'Probate' - Probate is the legal process of distributing a dead person's assets. When someone dies, he or she usually leaves behind assets to distribute   and debts to pay.
          * 'Purge' - The account has been irrevocably closed. In the system of record old and unneeded data has been removed
          * 'Repossession' - Repossession occurs when the account has not received loan payments and the collateral is seize
          * 'TransferredOut' - The account has been transferred or sold to another financial institution or collection agency 
          * 'Void' - An acccount was opened in error and it has been voided for processing
      enum:
        - Active
        - Bankruptcy
        - ChargedOff
        - ClientDefined
        - Closed
        - ClosedReopenDeposit
        - ClosedToAdvances
        - ClosedToday
        - ClosedToPosting
        - ClosedWithBalances
        - Collection
        - CoolingOff
        - Delinquent
        - Dormant
        - EarlyCollection
        - Escheated
        - Foreclosure
        - Hold
        - Inactive
        - Matured
        - Managed
        - New
        - NewThisMonth
        - NoCreditPost
        - NoDebitPost
        - NonAccrual
        - NoRenew
        - NoWithdrawal
        - Pending
        - Probate
        - Purge
        - Repossession
        - TransferredOut
        - Void
    AccountDetailType:
      title: AccountDetailType
      type: string
      description: >-
          Detail type of account. The account should be described in the terms that align to current user experiences at the Financial Institutions. For example some institutions list their loans accounts under the generic term Loan while others prefer to break down the types into Construction, Consumer, Installment etc. 
      enum:
        - Brokerage
        - CertificateOfDeposit
        - Checking
        - Club
        - Commercial
        - Construction
        - Consumer
        - CreditCard
        - DemandDepositLoan
        - Escrow
        - FlexibleSpending
        - FloorPlan
        - HealthSavings
        - HomeEquity
        - HomeEquityLineOfCredit
        - Installment
        - Lease
        - LineOfCredit
        - Loan
        - MoneyMarket
        - Mortgage
        - Passbook
        - Personal 
        - PortfolioRelationship
        - Retirement
        - Savings
        - ShareDraft
        - Student
    AccountReferenceAdd:
      title: AccountReferenceAdd
      type: object
      oneOf:
        - $ref: '#/components/schemas/AccountIdentifier'
        - $ref: '#/components/schemas/AccountDetail'
        
    AccountId:
      title: AccountId
      type: string
      description: >-
          Generic identifier that contains no sensitive data and should be 
          utilized as the key within URI when performing RESTful operations
    AccountIdentifier:
      title: AccountIdentifier
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
          
    AccountNumber:
      title: AccountNumber
      type: string
      description: >-
          Actual account number associated with the transaction 
  
    AccountReference:
      title: AccountReference
      type: object
      required:
        - id
        - detailType
        - number
      properties:
        id:
          type: string
          description: >-
              Generic identifier that contains no sensitive data and should be 
              utilized as the key within URI when performing RESTful operations
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: >-
              Actual account number as defined by the bank or credit union
        organization:
          $ref: '#/components/schemas/Organization'     
 
    AccountTransferRef:
      title: AccountTransferRef
      type: object
      required:
        - number
        - detailType
        - isDebit
      properties:
        id:
          type: string
          description: >-
              Generic identifier that contains no sensitive data and should be 
              utilized as the key within URI when performing RESTful operations
     
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: >-
              Actual account number as defined by the bank or credit union
        organization:
          $ref: '#/components/schemas/Organization'
        isDebit:
          type: boolean
          description: >-
              Indicates if the account related is debited (from) or credited (to)
          
    AddAccountRequest:
      title: AddAccountRequest
      type: object
      required:
        - detailType
        - productIdentification
        - relationships
      properties:
        detailType:
          $ref: '#/components/schemas/AccountDetailType'
        number:
          type: string
          description: >-
              Actual account number as defined by the bank or credit union
        productIdentification:
          type: string
          description: >-
              Indicates the product for the account, as defined by the bank or
              credit union
        nickname:
          type: string
          description: >-
              User defined name of account
        effectiveDateTime:
          type: string
          format: date-time
          description: >-
              Date and time the request was created
        openDate:
          type: string
          format: date
          description: >-
              Date the account was opened
        branchCode:
          type: string
          description: >-
              Code associated to the branch
        currencyCode:
          type: string
          description: >-
              Indicates the currency applied to balances, interest, etc. Based on
              ISO-4217 string value; i.e. USD, EUR
        rate:
          type: number
          format: float
          description: >-
              Interest rate for the account being added, expressed as a percent.  
              For example, 1.25% would be represented as 1.25
        initialAmount:
          type: number
          format: currency
          description: >-
              Initial amount that was added to the account at the time of opening
        term:
          $ref: '#/components/schemas/TermAdd'
        preferredContactMethod:
          type: string
          description: >-
              Preferred method of contact
          enum:
            - Email
            - Phone
            - SMS
        openMethod:
          type: string
          description: >-
              Method by which the account was requested to be created
          enum: 
            - Email
            - Fax
            - InPerson
            - Internet
            - Mail
            - Mobile
            - Phone
        addresses:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/AddressExisting'
              - $ref: '#/components/schemas/AddressAdd'
          description: >-
              Address associated with the account (optional)
    
        phones:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
          description: >-
              Phone number associated with the account (optional)
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
          description: >-
            Defines specific elements that describe an email (optional)
        deposit:
            $ref: '#/components/schemas/DepositAdd'
        loan: 
            $ref: '#/components/schemas/LoanAdd'
        officers:
          type: array
          items:
            $ref: '#/components/schemas/Officer'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipAdd'
          description: >-
              Array of objects that describe the relationships to the account
      
    AddAccountResponse:
      title: AddAccountResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
     
        account:
          type: object
          required:
            - id
            - number
          properties:
            id:
              $ref: '#/components/schemas/AccountId'
            number:
              $ref: '#/components/schemas/AccountNumber'
   
   
    AddAccountAcceptedResponse:
      title: AddAccountAcceptedResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
    
 
    AddressReference:
      title: AddressReference
      type: object
      required:
        - type
        - number
      properties:
        type:
          type: string
          enum:
            - Account
            - Address
            - Party
            - Card
          description: >-
              Type of address reference
        number:
          type: string
          description: >-
              Reference number that uniquely identifies the associated object as specified 
              by the Type field. Can be a composite key
          
    Address:
      title: Address
      allOf:  
        - $ref: '#/components/schemas/AddressBasic'
        - type: object
          properties:
            lastUpdatedDate:
              type: string
              format: date
              description: >-
                  Last date on which the address was updated
            reference:
              $ref: '#/components/schemas/AddressReference'
    
    AddressAdd:
       allOf:  
        - $ref: '#/components/schemas/AddressBasic'
        - type: object
    AddressBasic:
      title: AddressBasic
      type: object
      required:
        - type
        - lineOne
        - postalCode
      properties:
        type:
          type: string
          description: >-
              Type of address being returned
          enum:
            - Alternate
            - Mailing
            - Mortgage
            - Notice
            - Primary
            - Statement
        lineOne:
          type: string
          description: >-
              Line one of address
        lineTwo:
          type: string
          description: >-
              Line two of address
        city:
          type: string
          description: >-
              City, town or municipality associated with address
        stateProvince:
          type: string
          description: >-
              State or province associated with address
        country:
          type: string
          description: >-
              Name of country associated with address
          example: "Sweden"
        postalCode:
          type: string
          description: >-
              Postal code associated with address
        startDate:
          type: string
          format: date
          description: >-
              Date on which the address is valid from
        endDate:
          type: string
          format: date
          description: >-
              Date on which the address is valid to
      
    AddressExisting:
      title: AddressExisting
      type: object
      required:
        - reference
        - type
      properties:
        type:
          type: string
          description: >-
              Type of address being returned
          enum:
            - Alternate
            - Mailing
            - Mortgage
            - Notice
            - Primary
            - Statement
        reference:
            $ref: '#/components/schemas/AddressReference'
  
    AddHoldRequest:
      title: AddHoldRequest
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - Hold
            - Caution
            - Pledge
          description: >-
              Type of hold
        amount: 
          type: number
          format: currency
          description: >-
              The amount of the hold
        holdAmountType:
          type: string
          description: >-
            Identifies the way the amount hold is calculated. Fixed is common when the hold amount is provided
          enum:
            - Ledger
            - Available
            - Fixed
            - Payoff
            - All
        effectiveDate:
          type: string
          format: date
          description: >-
              Effective date of the hold
        expirationDate:
          type: string
          format: date
          description: >-
              Date on which the hold will expire
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Reason for the hold 
        reasonDescription:
          type: string
          description: >-
            Reason for the hold 
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
       
        securedAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
          #description: >- 
          #    Loan account that is being secured by the hold
    
    AddHoldResponse:
      title: AddHoldResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        hold:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: >-
                  Value that represents the identifier of the Hold.  Item does not
                  contain sensitive information
    AddStopItemRequest:
      title: AddStopItemRequest
      type: object
      required:
        - type
        - reasonCode
      properties:
        type:
          $ref: '#/components/schemas/StopItemType'
        itemNumber:
          $ref: '#/components/schemas/StopItemNumber'
        companyId:
          $ref: '#/components/schemas/StopItemCompanyId'
        amount:
          $ref: '#/components/schemas/StopItemAmount'
        payeeName:
          $ref: '#/components/schemas/StopItemPayeeName'
        originationDate:
          $ref: '#/components/schemas/StopItemOriginationDate'
        expirationDate:
          $ref: '#/components/schemas/StopItemExpirationDate'
        isPermanent:
          $ref: '#/components/schemas/StopItemIsPermanent'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Stop reason code
        reasonDescription:
          $ref: '#/components/schemas/StopItemReasonDescription'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        specialOption:
          $ref: '#/components/schemas/StopItemSpecialOption'
        itemRange:
          $ref: '#/components/schemas/ItemRange'
        varianceRange:
          $ref: '#/components/schemas/VarianceRange'
       
    AddStopItemResponse:
      title: AddStopItemResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        stopItem:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/StopItemId'
              
    AuthorizedBy:
      title: AuthorizedBy
      type: object
      required:
        - type
        - value
      properties:
        type: 
          type: string
          description: >-
              Form of authorization
          enum:
            - Signature
            - Customer
            - Bank
        value:
          type: string
          description: >-
               Name of the authorizing party
    Balance:
      title: Balance
      type: object
      required:
        - type
        - amount
      properties:
        type:
          type: string
          enum:
            - AmountDue
            - Available
            - AvailableCredit
            - Current
            - Ledger
            - Escrow
            - Fee
            - InterestDue
            - Initial
            - LateFee
            - Memo
            - PayoffAmount
            - Principal
            - Redemption
            - Sweep
          description: > 
            Identifies the type of balance being supplied.
            Values:
              * 'Amount Due' - The amount of the total payment amount required to bring the account current
              * 'Available'- The amount of money in your account that is available for immediate withdrawal
              * 'AvailableCredit' - The amount of the unused portion of the total line of credit balance authorized for this account
              * 'Current' - The amount of money that is actually in your account at any given time including those funds that may be on hold or are still uncollected. Also known as MemoLedger
              * 'Ledger' - The amount of money in an account at the start of the business day, including all deposits and withdrawals posted the previous night, whether or not the funds have been collected
              * 'Escrow' - Balance of the money set aside with the purpose of paying property taxes and homeowners' insurance premiums
              * 'Fee' -  The amount of fee, charges, membership fee due on the account
              * 'InterestDue' - Interest due represents the amount required to pay the interest cost of the loan for the payment period
              * 'Initial' - Origination or face amount of the loan account. Also initial deposit or certificate value for time deposits
              * 'LateFee' -  Late fee refers to unpaid balance of late fees. Late fees are charges that consumers pay when they fail to make a payment on a debt such as a loan or a credit card
              * 'Memo' - This is the ledger balance minus any uncollected funds (float) minus memo-posted debits, plus memo-posted credits (activity of the day).. Also known as MemoAvailable
              * 'PayoffAmount' - The amount needed to be paid including principal amount, interest and any other charges in order to settle the loan or credit card account
              * 'Principal' - The amount of the remaining unpaid balance of a loan exclusive of interest and any other charges
              * 'Redemption' -Redemption value is the price of a term deposit account before its maturity date
              * 'Sweep' - Total available balance combined from all related accounts that are part of a cash management relationship
              
        amount:
          type: number
          format: currency
          description: >-
              The value representing the balance being returned
    CatalogTableCode:
      title: CatalogTableCode 
      description: >-
        Catalog API may be used to retrieve all code/description values associated to the element
      properties:
        code:
          type: string
          description: Code as appear in catalog
        description:
          type: string
          description: Description of related code as appears in catalog 
    Collateral:
      title: Collateral
      type: object
      required:
        - type
      properties:
        number: 
          type: string
          description: >-
              Actual identifier for the collateral
        type:
          type: string
          description: >-
              Type of collateral
          enum:
            - Basic
            - Building
            - Commodity
            - DepositAccount
            - Inventory
            - Investment
            - LifeInsurance
            - ManufacturedHome
            - Other
            - OtherProperty
            - Property
            - Vehicle
        description:
          type: string
          description: >-
              Description of collateral
          example: "Tesla Model S-90D"
        pledgedAmount:
          type: number
          format: currency
          description: >-
              Collateral amount pledged against loan
        currencyCode:
          type: string
          description: >-
              Indicates the currency applied to balances, interest, etc.  Based 
              on ISO-4217 string value; ie USD, EUR
    Commercial:
      title: Commercial
      type: object
      properties:
        SBALoanNumber:
          type: string
          description: >-
              Loan number on file with the Small Business Administration (SBA).  
              Only provided for a SBA loans
        NAICS:
          type: string
          description: >-
              Code used to classify business establishments
        isSBA:
          type: boolean
          description: >-
              Is this a Small Business Administration (SBA) loan?  
    CourtesyOverdraft:
      title: CourtesyOverdraft
      type: object
      properties:
        type:
          type: string
          description: >-
            Transaction type to apply action to
          enum:
            - ATM
            - POS
        option:
          type: string
          description: >-
            Option to apply to the transaction
        limitAmount:
          type: number
          format: currency
          description: >-
            Amount that the account is allowed to be overdrawn
    DepositAdd:
      title: DepositAdd
      type: object
      properties:
        insured:
          type: string
          description: >-
              Indicates whether the account is insured
          enum:
            - Yes
            - No
            - Undefined
        taxFavoredType:
          type: string
          description: >-
              Type of tax favored account being described
          enum:
            - Coverdell
            - FSA
            - HSA
            - IRA
            - ISA
            - JuniorISA
            - Roth
            - SEP
        taxFavoredPlanCode:  
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >-
          #    Plan code as defined by the bank or credit union
        interestDispositionType:
          type: string
          description: >- 
              Interest disposition method by which interest payments are made
          enum:
            - AddToBalance
            - Check
            - ExternalTransfer
            - InternalTransfer
        maturityOption:
          type: string
          description: >-
              Action to be taken at the time of maturity
          enum:
            - AutoRenewal
            - NoRenewal
            - Reinvest
        interestDispositionAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
        maturityDispositionType:
          type: string
          description: >-
              Disposition of funds at the time of final maturity
          enum:
            - Check
            - ExternalTransfer
            - Manual
            - InternalTransfer
        maturityDispositionAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
        courtesyOverdraft:
          type: array
          description: >-
              List of options and amounts to perform courtesy overdraft processing
          items:
            $ref: '#/components/schemas/CourtesyOverdraft'
    DepositDetail:
      title: DepositDetail
      type: object
      properties:
        insured:
          type: string
          description: >-
              Indicates whether the account is insured
          enum:
            - Yes
            - No
            - Undefined
        taxFavoredType:
          type: string
          description: >-
              Type of tax favored account being described
          enum:
            - Coverdell
            - FSA
            - HSA
            - IRA
            - ISA
            - JuniorISA
            - Roth
            - SEP
        planNumber:
          type: string
          description: >-
              Plan number associated with investment portfolio
        APYE:
          type: number
          format: float
          description: >-
              Annual percentage yield earned
        interestDispositionType:
          type: string
          description: >- 
              Interest disposition method by which interest payments are made
          enum:
            - AddToBalance
            - Check
            - ExternalTransfer
            - InternalTransfer
        interestDispositionFrequency:
          type: string
          description: >-
              Interest disposition frequency
          enum:
            - Daily
            - Weekly
            - BiWeekly
            - SemiMonthly
            - Monthly
            - BiMonthly
            - Quarterly
            - SemiAnnual
            - Annual
            - Cycle
        interestDispositionAccount:
            $ref: '#/components/schemas/AccountReference'
        maturityDispositionType:
          type: string
          enum:
            - Check
            - Manual
            - ExternalTransfer
            - InternalTransfer
          description: >-
            Disposition of funds at the time of final maturity
            Values:
              * 'Check' - The amount of the deposit is disposed using a check
              * 'Manual'- The amount of the deposit is disposed via a posted transaction 
              * 'ExternalTransfer' - The amount of the deposit is disposed to transfer to an external account
              * 'InternalTransfer' - The amount of the deposit is disposed to transfer to an internal account
              * 'ExternalAccount' - Deprecated
              * 'Transfer'- Deprecated
        maturityDispositionAccount:
          $ref: '#/components/schemas/AccountReference'
    DetailItem:
      title: DetailItem
      type: object
      required:
        - type
        - amount
      properties:
        description:
          type: string
          description: >-
            Additional detail of what makes up the amount. For example for Insurance Amount we may have detail items for Life, Disability or Unemployment insurance. Another example may be Fee Amount we may have detail items for NSF, Legal or Collection fees.
        amount:
          type: number
          format: currency
          description: >-
              The value representing the detail amount being returned
  
   
  
    DeleteHoldResponse:
      title: DeleteHoldResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
  
  
    DeleteStopItemResponse:
      title: DeleteStopItemResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
     
   
    Distribution:
      title: Distribution
      type: object
      required:
        - type
        - amount
      properties:
        type:
          type: string
          enum:
           - AdditionalPrincipal
           - Escrow
           - Fee
           - Interest
           - Insurance
           - LateFee
           - OtherCredit
           - OtherDebit
           - OtherEscrow
           - Principal
           - ServiceCharge
          description: >-
            Type of transaction distribution being reported
        amount:
          type: number
          format: currency
          description: >-
              The amount associated with the distribution being reported
        detailItems:
          type: array
          items:
            $ref: '#/components/schemas/DetailItem'
          description: >-
             Array of elements that further describe the make-up of the amount
    
    DocumentDeliveriesUpdate:
      title: DocumentDeliveryUpdate
      type: object
      required:
        - type
        - method
      properties:
        type:
          type: string
          description: >-
              Document type
          enum:
            - Statement
        method:
            $ref: '#/components/schemas/CatalogTableCode'
    
    Email:
      title: Emails
      type: object
      required:
        - type
        - address
        - contactAllowed
      properties:
        type:
          type: string
          description: >-
              Type of email address being returned
          enum:
            - Business
            - Personal
            - Work
        address:
          type: string
          format: email
          description: >-
              Email address being returned
        isPreferred:
          type: boolean
          description: >-
              Is this email address the preferred form of contact?
        contactAllowed:
          type: string
          enum:
            - Yes
            - No
            - Undefined 
          description: >-
              Indicates whether the email address can be  used for contact
    Escrow:
      title: Escrow
      type: object
      properties:
        paymentAmount:
          type: number
          format: currency
          description: >-
              Scheduled amount paid to escrow account
        nextAnalysisDate:
          type: string
          format: date
          description: >-
              Date when next escrow analysis will be performed
        lastAnalysisDate:
          type: string
          format: date
          description: >-
              Date when last escrow analysis was performed
        lastDisbursementAmount:
          type: number
          format: currency
          description: >-
              Amount of last disbursement from escrow account
        lastDisbursementDate:
          type: string
          format: date
          description: >-
              Date of last disbursement from escrow account
        ytdInterestEarnedAmount:
          type: number
          format: currency
          description: >-
              YTD interest earnings on escrow account
        pytdInterestEarnedAmount:
          type: number
          format: currency
          description: >-
              Previous YTD interest earnings on escrow account
        details:
          type: array
          items:
             $ref: '#/components/schemas/EscrowDetails'
          description: >-
             Array of elements that further describe the make-up of the distribution amount
 
    EscrowDetails:
      title: EscrowDetails
      type: object
      required:
        - type
        - amount
      properties:
        type:
          type: string
          enum:
            - Tax
            - Insurance
            - Other
          description: >-
            Type of escrow detail
        amount:
          type: number
          format: currency
          description: >-
              Amount associated to escrow detail item
        date:
          type: string
          format: date
          description: >-
              Date associated to escrow detail item
   
   
    FundAvailability:
      title: FundAvailability
      type: object
      required:
        - isAvailable
      properties:
        verifiedDateTime:
          type: string
          format: date-time
          description: >-
              Date and time the fund availability took place
        isAvailable:
          type: boolean
          description: >- 
              Indicates whether there are funds available to proceed with the transaction based on the condition of the balance
    GetAccountResponse:
      title: GetAccountResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
      
        account:
          $ref: '#/components/schemas/Account' 
          
    GetFundsAvailabilityResponse:
      title: GetFundsAvailabilityResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
      
        result:
          $ref: '#/components/schemas/FundAvailability' 
          
    Hold:
      title: Hold
      type: object
      properties:
        id:
          type: string
          description: >-
              Value that represents the identifier of the hold that does not contain sensitive data
        type:
          type: string
          enum:
            - Hold
            - Caution
            - Pledge
          description: >-
              Type of hold
        amount: 
          type: number
          format: currency
          description: >-
              The amount of the hold
        holdAmountType:
          type: string
          description: >-
            Identifies the way the amount hold is calculated. Fixed is common when the hold amount is provided
          enum:
            - Ledger
            - Available
            - Fixed
            - Payoff
            - All
        createdDate:
          type: string
          format: date
          description: >-
                Date on which the hold was created
        effectiveDate:
          type: string
          format: date
          description: >-
              Effective date of the hold
        expirationDate:
          type: string
          format: date
          description: >-
              Date on which the hold will expire
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Reason for the hold 
        reasonDescription:
          type: string
          description: >-
            Reason for the hold 
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy' 
        securedAccount:
          $ref: '#/components/schemas/AccountReference'
          #description: >- 
          #    Loan account that is being secured by the hold
   
    HoldId:
      type: string
      description: >-
        Value that represents the identifier of the Hold that does not 
        contain sensitive data
        
    InterestAccrual:
      title: Interest
      type: object
      properties:
        ytdAmount:
          type: number
          format: currency
          description: >-
              Current year interest accrual to date
        currentYear:
          type: string
          format: YYYY
          description: >-
              Current accrual year
        pytdAmount:
          type: number
          format: currency
          description: >-
              Prior year interest accrual to date
        priorYear:
          type: string
          format: YYYY
          description: >-
            Prior accrual year
        accruedThruDate:
          type: string
          format: date
          description: >-
              Date through which the interest is accrued for this account
        accruedAmount:
          type: number
          format: currency
          description: >-
              Amount of interest accrued but not yet paid for this account
        oneDayInterestAmount:
          type: number
          format: currency
          description: >-
              One day's worth of interest
       
    InterestPaid:
      title: InterestPaid
      type: object
      properties:
        ytdAmount:
          type: number
          format: currency
          description: >-
              Current year interest paid to date
        currentYear:
          type: string
          format: YYYY
          description: >-
            Current accrual year
        pytdAmount:
          type: number
          format: currency
          description: >-
              Prior year interest paid to date
        priorYear:
          type: string
          format: YYYY
          description: >-
            Prior accrual year
        lastPaidAmount:
          type: number
          format: currency
          description: >-
              Amount of interest that was last paid
        lastPaidDate:
          type: string
          format: date
          description: >-
              Date of when interest was last paid
        nextPayAmount:
          type: number
          format: currency
          description: >-
              Amount of interest as of the next interest payment date
        nextPayDate:
          type: string
          format: date
          description: >-
              Date of the next scheduled interest payment
    ItemRange:
      title: ItemRange
      type: object
      required:
        - start
        - end
      properties:
        start:
          type: string
          description: >-
              Starting number of the check number range
        end:
          type: string
          description: >-
              Ending number of the check number range
      
    ListBalancesResponse:
      title: ListBalancesResponse
      type: object
      properties:  
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        balances:
          type: array
          description:  >-
              List of balances in the result
          items:
            $ref: '#/components/schemas/Balance' 
  
    ListHoldsResponse:
      title: ListHoldsResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        links:
          $ref: '#/components/schemas/Links'
        holds:
          type: array
          items:
            $ref: '#/components/schemas/Hold'
            
    ListOverdraftProtectionResponse:
      title: ListOverdraftProtectionResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        links:
          $ref: '#/components/schemas/Links'
        overdraftFunding:
          type: array
          description:  >-
              List of overdraft protection funding accounts
          items:
            $ref: '#/components/schemas/OverdraftFunding'
             
    ListStopItemResponse:
      title: ListStopItemResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        links:
          $ref: '#/components/schemas/Links'
        stopItems:
          type: array
          items:
            $ref: '#/components/schemas/StopItem'
            
    ListTransactionsResponse:
      title: ListTransactionsResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        links:
          $ref: '#/components/schemas/Links'
        transactions:
          type: array
          description:  >-
              List of transactions in the result
          items:
            $ref: '#/components/schemas/TransactionList'
    
    ListTransfersResponse:
      title: ListTransfersResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
        links:
          $ref: '#/components/schemas/Links'
        transfers:
          type: array
          description:  >-
              List of transfers in the result
          items:
            $ref: '#/components/schemas/Transfer'
    LoanAdd:
      title: LoanAdd
      type: object
      properties:
        originalNoteDate:
          type: string
          format: date
          description: >-
              Date on which the loan was originated
        noteNumber:
          type: string
          description: >-
              Value associated with the loan on the originating system
        creditLimitAmount:
          type: number
          format: currency
          description: >-
              Credit limit of the loan
        lineExpirationDate:
          type: string
          format: date
          description: >-
              Date of when the line of credit expires
        maturityDate:
          type: string
          format: date
          description: >-
            Date on which the account matures, expires or is scheduled to be 
            paid off
        firstDueDate:
          type: string
          format: date
          description: >-
            Date on which the first payment is due
        APR:
          type: number
          format: float
          description: >-
              Annual percentage rate
        
    LoanDetail:
      title: LoanDetail
      type: object
      properties:
        originalNoteDate:
          type: string
          format: date
          description: >-
              Date on which the loan was originated
        originalAmount:
          type: number
          format: currency
          description: >-
              Original amount of the loan
        creditLimitAmount:
          type: number
          format: currency
          description: >-
              Credit limit of the loan
        maturityDate:
          type: string
          format: date
          description: >-
              Date when loan matures
        APR:
          type: number
          format: float
          description: >-
              Annual percentage rate
        isSecured:
          type: boolean
          description: >-
              Is loan secured by collateral (True) or is the loan not secured 
              by collateral (false)
        chargeOffAmount:
          type: number
          format: currency
          description: >-
              Amount of loan that was charged-off
        chargeOffDate:
          type: string
          format: date
          description: >-
              Date of when loan was charged-off
        paidOffDate:
          type: string
          format: date
          description: >-
              Date on which the loan was paid off
        lastAdvanceAmount:
          type: number
          format: currency
          description: >-
              Amount of last advance
        lastAdvanceDate:
          type: string
          format: date
          description: >-
              Date of last advance
        splitRate:
          $ref: '#/components/schemas/SplitRate'
        collaterals:
          type: array
          description: >-
              Collateral information associated with the account
          items:
            $ref: '#/components/schemas/Collateral'
        commercial:
          $ref: '#/components/schemas/Commercial'
        escrow:
          $ref: '#/components/schemas/Escrow'
        pastDueDetails:
          type: array
          description: >-
              Past Due detail information
          items:
            $ref: '#/components/schemas/PastDueDetail'
    Officer:
      title: Officer
      type: object
      required:
        - type
        - code
      properties:
        type:
          type: string
          description: >-
              Officer type being sent
          enum:
            - Officer
            - SecondOfficer
            - ThirdOfficer
            - FourthOfficer
            - ReferralOfficer
        code:
          type: string
          description: >-
              Code related to the officer information being sent
    Organization:
      title: Organization
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          description: >-
              Type of organization value being described
          enum:
            - ABA
            - DUNS           
            - Fiserv
        value:
          type: string
          description: >-
              Value that identifies the financial institution
              

    OverdraftFunding:
      title: FundingAccount
      type: object
      required:
        - accountId
        - accountNumber
        - accountDetailType
      properties:
        accountId:
          type: string
          description: >-
              Funding account identifier
        accountDetailType:
          $ref: '#/components/schemas/AccountDetailType'
        accountNumber:
          type: string
          description: >-
            Actual account number as defined by the bank or credit union
        priorityNumber:
          type: integer
          description: >-
            Number that indicates the account sequence the system uses when attempting to draw funds from accounts
        organization:
          $ref: '#/components/schemas/Organization'
  
    PastDueDetail:
      title: PastDueDetail
      type: object
      properties:
        amount: 
          type: number
          format: currency
          description: >-
              Amount associated with the past due amount
        daysPastDue:
          type: number
          format: integer
          description: >-
              Number of days that the payment is past due
        operator:
          type: string
          description: >-
              This is a qualifier for the number of past due days. The value indicates 
              whether the account is Equal (EQ), Lesser Than (LT), Lesser or Equal to (LTE) Greater or Equal to (GTE)
          enum:
            - EQ
            - LTE
            - GTE
            - LT
            - GT
    Payment:
      title: Payment
      type: object
      properties:
        dueDate:
          type: string
          format: date
          description: >-
              Scheduled date of the oldest payment due on the loan. When the loan is current this may be the date of the already billed payment which may not be past due yet. This field should be confused with a projection of the  next payment due (look at next due and next amount). Only due (billed) payments are presented in this field
        dueAmount:
          type: number
          format: currency
          description: >-
               Amount of the payment required on due date.  This amount represents the oldest payment amount due on the loan. This amount is different from the Balance Amount Due (see balances). The balance Amount Due indicates the total  payment amount required to bring the loan account current. Only due (billed) payments are presented in this field
        minimumAmount:
          type: number
          format: currency 
          description: >-
              Minimum payment amount to satisfy a single payment
        isPastDue:
          type: boolean
          description: >-
             Indicates the account is past due
        frequency:
          type: string
          description: >-
              Frequency of payment schedule
          enum:
            - None
            - Daily 
            - Weekly
            - BiWeekly
            - SemiMonthly
            - Monthly
            - BiMonthly
            - Quarterly
            - SemiAnnual
            - Annual
            - Single
        lastDate:
          type: string
          format: date
          description: >-
              The date of the last payment made
        lastAmount:
          type: number
          format: currency
          description: >-
              The amount of the last payment made
        method:
            type: string
            description: >-
                Method by which payments are made
            enum:
              - BillByNotice
              - Coupon
              - ExternalTransfer
              - InternalTransfer
              - OverTheCounter
              - Payroll
              - Statement
              - Unassigned
        nextAmount:
          type: number
          format: currency 
          description: >-
              Amount associated with the next scheduled payment
        nextDate:
          type: string
          format: date
          description: >-
              The next date on which a scheduled payment is due to be paid. This date is never in the past. Scheduled for payment is a payment that is not either billed or paid.
        numberRemaining:
          type: string
          description: >-
              Number of payments remaining to fully satisfy 
              the account. The value of 'N/A' represent the account does not have an end date
        sourceAccount:
            $ref: '#/components/schemas/AccountReference'
  
    Phone:
      title: Phones
      type: object
      required:
        - type
        - number
        - contactAllowed
      properties:
        type:
          type: string
          description: >-
              Type of phone number being returned
          enum:
            - Fax
            - Home
            - Mobile
            - Other
            - Pager
            - Work
        countryCode:
          type: string
          description: >-
              Country code of phone number.  Numeric values only
        number:
          type: string
          description: >-
              Phone number being returned.  Numeric values only
        extension:
          type: string
          description: >-
              Extension number associated with phone number
        isPreferred:
          type: boolean
          description: >-
              Is this phone number the preferred form of contact?
        contactAllowed:
          type: string
          enum:
            - Yes
            - No
            - Undefined 
          description: >-
              Indicates whether the phone number can be used for contact
   
  
 
   
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'
    
    RecurringDetail:
      title: RecurringDetail
      allOf:  
        - $ref: '#/components/schemas/RecurringBasic'
        - type: object
          properties:
            startDate:
              type: string
              format: date
              description: >-
                Indicates the date the recurring period starts
            endDate:
              type: string
              format: date
              description: >-
                Indicates the date of the end of the recurring period              
    RecurringBasic:
      title: Recurring
      type: object
      description: >-
          Recurring indicates the time frame and frequency of the transfer fund instruction
      required:
        - frequency
        - code
        - interval
      properties:
        code:
          type: string
          description:
              "Code that represents the recurrency model in the Catalog for transfer options"
        description:
          type: string
          description:
              "Description of the recurrency model defined in the Catalog for transfer options"
        frequency:
          type: string
          description: >-
            Indicates the pattern of recurrence. In combination with the interval describes the period of time lapsing between each fund transfer
          enum:
            - Daily
            - Weekly
            - TwiceMonthly
            - Monthly
            - Annually
        interval:
          type: integer
          description: 
              "Number of units between occurrences. If  ‘Daily’: Number of days between occurrences. If   ‘Weekly’: Number of weeks between occurrences. If   'Monthly’: Number of months between occurrences. If   ‘Annually’: Number of years between occurrences. The value for TwiceMonthly is always represented with 1- one interval"
        dayOfWeek:
          type: string
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          description: >-
              "Specifies day of week of ocurrance, for example: Monday, Tuesday,.etc."
        dayOfMonth:
          type: integer
          minimum: 1
          maximum: 31
          description: >-
              Numeric value representing the day of the month of occurrence
          
        secondDayOfMonth:
          type: integer
          minimum: 1
          maximum: 31
          description: >-
              Numeric value representing the second day of the month of occurrence. This is used for TwiceMonthly recurring models
        month:
          type: integer
          minimum: 1
          maximum: 12
          description: 
              "Numeric value representing the month of occurence. Valid values: integers between 1 and 12 inclusive"
        weekOfMonth:
          type: integer
          minimum: 1
          maximum: 5
          description: 
              "Numeric value represents the week of the month of ocurrance. Values range from 1 thru 5. Value 5 indicates last week of the month"
          
        secondWeekOfMonth:
          type: integer
          minimum: 1
          maximum: 5
          description: 
              "Numeric value represents the second week of the month ocurrance. Values range from 1 thru 5. Value 5 indicates last week of the month. This is used for TwiceMonthly recurring models"
          
    RelationshipAdd:
      title: Relationship  
      type: object
      required:
        - partyId
        - type
        - code
        - isPrimary
      properties:
        partyId:
          type: string
          description: >-
               A unique identifier related a single customer in the system of record
        type:
          type: string
          description: >-
              Type of relationship
          enum:
            - Direct
            - Fiduciary
            - Indirect
            - Primary
        code:
          type: string
          description: >-
              Relationship code as defined on the core
        isPrimary:
          type: boolean
          default: false
          description: >-
              Is this the primary relationship to the account (true).  This field
              must be set to true for one applicant
        percentAllocated:
          type: number
          format: float
          description: >-
              Percentage of account allocated to this relationship
    ReplaceHoldRequest:
      title: ReplaceHoldRequest
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - Hold
            - Caution
            - Pledge
          description: >-
              Type of hold
        amount: 
          type: number
          format: currency
          description: >-
              The amount of the hold
        holdAmountType:
          type: string
          description: >-
            Identifies the way the amount hold is calculated. Fixed is common 
            when the hold amount is provided
          enum:
            - Ledger
            - Available
            - Fixed
            - Payoff
            - All
        effectiveDate:
          type: string
          format: date
          description: >-
              Effective date of the hold
        expirationDate:
          type: string
          format: date
          description: >-
              Date on which the hold will expire
       
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Reason for the hold 
        reasonDescription:
          type: string
          description: >-
            Reason for the hold 
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        securedAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
          #description: >- 
          #    Loan account that is being secured by the hold
          
    ReplaceHoldResponse:
      title: ReplaceHoldResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'   
            
          
    ReplaceStopItemRequest:
      title: ReplaceStopItemRequest
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StopItemType'
        itemNumber:
          $ref: '#/components/schemas/StopItemNumber'
        companyId:
          $ref: '#/components/schemas/StopItemCompanyId'
        amount:
          $ref: '#/components/schemas/StopItemAmount'
        payeeName:
          $ref: '#/components/schemas/StopItemPayeeName'
        originationDate:
          $ref: '#/components/schemas/StopItemOriginationDate'
        expirationDate:
          $ref: '#/components/schemas/StopItemExpirationDate'
        isPermanent:
          $ref: '#/components/schemas/StopItemIsPermanent'
        reasonCode:
            $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Stop item reason code
        reasonDescription:
          $ref: '#/components/schemas/StopItemReasonDescription'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        specialOption:
          $ref: '#/components/schemas/StopItemSpecialOption'
      
        itemRange:
          $ref: '#/components/schemas/ItemRange'
        varianceRange:
          $ref: '#/components/schemas/VarianceRange'
      
    ReplaceStopItemResponse:
      title: ReplaceStopItemResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'   

    SplitRate:
      title: SplitRate
      type: object
      properties:
        amount:
          type: number
          format: currency
          description: >-
             Principal balance cutoff where the loan's interest rate changes 
        underRate:
          type: number
          format: float
          description: >-
              Interest rate that is applied to the principal balance portion below to the split amount.
        overRate:
          type: number
          format: float
          description: >-
              Interest rate that is applied to the principal balance portion above split amount.
   
    StopItem:
      title: StopItem
      type: object
      required:
        - id
        - reasonCode
        - type
      properties:
        id:
          $ref: '#/components/schemas/StopItemId'
        type:
          $ref: '#/components/schemas/StopItemType'
        itemNumber:
          $ref: '#/components/schemas/StopItemNumber'
        companyId:
          $ref: '#/components/schemas/StopItemCompanyId'
        amount:
          $ref: '#/components/schemas/StopItemAmount'
        payeeName: 
          $ref: '#/components/schemas/StopItemPayeeName'
        originationDate:
          $ref: '#/components/schemas/StopItemOriginationDate'
        createdDate:
          $ref: '#/components/schemas/StopItemCreatedDate'
        expirationDate:
          $ref: '#/components/schemas/StopItemExpirationDate'
        isPermanent:
          $ref: '#/components/schemas/StopItemIsPermanent'
        isCertified:
          $ref: '#/components/schemas/StopItemIsCertified'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Stop Reason Code
        reasonDescription:
          $ref: '#/components/schemas/StopItemReasonDescription'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        specialOption:
          $ref: '#/components/schemas/StopItemSpecialOption'
   
        itemRange:
          $ref: '#/components/schemas/ItemRange'
        varianceRange:
          $ref: '#/components/schemas/VarianceRange'
      
    StopItemAmount:
      type: number
      format: currency
      description: >-
          The amount of the stop item

    StopItemCompanyId:
      type: string
      description: >-
          Value representing the company ID located in an ACH batch header
          
    StopItemCreatedDate:
      type: string
      format: date
      description: >-
        Date on which the stop item was created
    StopItemExpirationDate:
      type: string
      format: date
      description: >-
        Date on which the stop item will expire
  
    StopItemId:
      type: string
      description: >-
        Value that represents the identifier of the Stop Item that does not 
        contain sensitive data
    StopItemIsCertified:
      type: boolean
      default: false
      description: >-
        Is the item being presented a certified/cashier's check (true) or is it
        a regular check (false)
    StopItemIsPermanent:
      type: boolean
      default: false
      description: >-
        Is the item's stop permanent (true)
    StopItemNumber:
      type: string
      description: >-
          Value representing the item that has been stopped.  This field can 
          contain the check number of a single check
    StopItemOriginationDate:
      type: string
      format: date
      description: >-
          Date the item was originated (when the check was written)
    StopItemPayeeName:
      type: string
      description: >-
          Name of the payee for the item
    StopItemReasonDescription:
      type: string
      description: >-
        Description of the reason for why the item was stopped
    StopItemSpecialOption:
      type: string
      description: >-
          Additional processing options associated with the stop item
      enum:
        - All
        - AllCredit
        - AllDebit
        - AllNonACH
        - AllNonACHCredit
        - AllNonACHDebit
    StopItemType:
      type: string
      description: >-
          Type of stop items
      enum:
        - ACH
        - Check
        - RevokeAuthorization
        - SpecialInstruction
        - Transaction   
        
 
    Term:
      title: Term
      type: object
      properties:
        endDate:
          type: string
          format: date
          description: >-
              Indicates the date of the end of the term.  
              Can store the maturity or scheduled payoff date
        count:
          type: integer
          description: >-
              Indicates the number of periods at the time the account was
              established.  THe value should be represented as a whole number.
        units:
          type: string
          description: >-
              Unit of time the term is expressed in
          enum:
            - Days
            - Weeks
            - Months
            - Years
            - Indefinite
    
    TermAdd:
      title: Term
      type: object
      oneOf:
        - $ref: '#/components/schemas/TermEndDate'
        - $ref: '#/components/schemas/TermUnits'     
     
    TermEndDate:
      title: TermEndDate
      type: object
      required:
        - endDate
      properties:
        endDate:
          type: string
          format: date
          description: >-
              Indicates the date of the end of the term.  
              Can store the maturity or scheduled payoff date
    TermUnits:
      title: TermUnits
      type: object
      required:
        - count
        - units
      properties:
        count:
          type: integer
          description: >-
              Indicates the number of periods at the time the account was
              established.  THe value should be represented as a whole number.
        units:
          type: string
          description: >-
              Unit of time the term is expressed in
          enum:
            - Days
            - Weeks
            - Months
            - Years
            - Indefinite
    
    TransactionList:
      title: TransactionList
      allOf:  
        - $ref: '#/components/schemas/Transaction'
        - type: object
          
    Transaction:
      title: Transaction
      type: object
      required:
        - number
        - type
        - status
        - originatedDateTime
        - transactionCode
        - amount
        - isCustomerViewable
      properties:
        number:
          type: string
          description: >-
              Universally unique transaction identifier that contains no 
              sensitive data and should be utilized as the key
        type:
          type: string
          enum:
            - Credit
            - Debit
            - None
          description: >-
              Type of transaction
        categoryType:
          type: string
          enum:
            - Advance
            - Charge 
            - Credit
            - Debit
            - Deposit
            - Disbursement
            - Dividend
            - Fee 
            - Interest
            - Other
            - Payment
            - Payoff
            - Principal
            - RateChange
            - Receipt
            - Transfer
            - Unspecified
            - Withdrawal
            - Withholding
          description: >-
              General transaction category
        categoryExceptionType:
          type: string
          description: >-
              Exception type related to category
          enum:
            - Adjustment
            - Correction
            - Reversal
            - Waived
        status:
          type: string
          enum:
            - Memo
            - Pending
            - Posted
          description: >-
              Transaction status
                * 'Memo'- The debit or credit transactions is temporary applied to an account for which the complete posting to update the balance will be done as part of EOD (end-of-day) batch processing
                * 'Posted' - The debit or credit has been applied to the balance of the account and the transaction has been completed
                * 'Pending' - The debit or credit transaction is merely anticipated, based on activity in your account
        sequence:
          type: integer
          description: >-
              Number that identifies the sequence of transactions for given day
        originatedDateTime:
          type: string
          format: date-time
          description: >-
              Date and time the transaction originated
        postedDateTime:
          type: string
          format: date-time
          description: >-
              Date and time the transaction posted
        description:
          type: string
          description: >-
              Transaction description as it appears on a customer's statement
        traceNumber:
          type: string
          description: >-
              Trace number
        checkNumber:
          type: string
          description: >-
              Check number associated with the transaction
        itemNumber:
          type: string
          description: >-
              It represents the check number, serialized deposit or any other number 
              associated to the transaction processing.  When the item is a check 
              both attributes itemNumber and CheckNumber must be provided
        itemType:
          type: string
          enum:
            - Check
            - DepositSlip
            - Coupon
            - Receipt
            - Other
            - Undefined
          description: >-
              Item type
        transactionCode:
          type: string
          description: >-
              Transaction code used for posting
        referenceTransactionCode:
          type: string
          description: >-
              Reference transaction code defines transaction processing rules
        amount:
          type: number
          format: currency
          description: >-
              Amount of transaction
        isCustomerViewable:
          type: boolean
          description: >-
              Is the transaction viewable by the customer
        imageIndicator:
          type: string
          enum:
            - Available 
            - NotAvailable
            - Undefined
          description: >-
              Indicates if there are images available.
        distributions:
          type: array
          items:
            $ref: '#/components/schemas/Distribution'
          description: >-
              Array of elements that describe the transaction amounts
        balances:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
          description: >-
              Array of elements that describe the balance amounts being presented. 
              Highly recommended to provide balance position after posting
    Transfer:
      title: Transfer
      type: object
      required:
        - id
        - amount
        - currencyCode
        - relatedAccount
        - status
        - type
        - detailType
      properties:  
        id:
          type: string
          description: >-
            Generic identifier of the transfer fund instruction that contains no sensitive data and should be
              utilized as the key within URI when performing RESTful operations
        type:
          type: string
          enum:
            - Payment
            - Standard
          description: >-
            Specifies if the transfer is used for loan payment or refers to standard fund transfer
        detailType:
          type: string
          enum:
            - InterestOnly
            - PrincipalOnly
            - EscrowOnly
            - InsuranceOnly
            - LateChargeOnly
            - Regular
            - Payoff
            - AmountDue
          description: >-
            Specifies the how the transfer amount is applied to the account.  
        description:
          type: string
          description: >-
              Description of the transfer fund
        amount:
          type: number
          format: currency
          description: >-
              Monetary amount of the transfer fund
        currencyCode:
          type: string
          description: >-
              Value identifiying which currency the amounts and balances are expressed in.  Value is ISO 4217 currency code, eg USD, EUR,CHF
        status:
          type: string
          description: >-
            Indicates the status of the transfer fund instruction
          enum:
            - Active
            - Inactive
            - Hold
        relatedAccount:
           $ref: '#/components/schemas/AccountTransferRef'
        nextTransferDate:
          type: string
          format: date
          description: >-
              Date and of when the transfer fund will be posted 
        lastTransferDateTime:
          type: string
          format: date-time
          description: >-
              Date and time when the transfer fund was last posted
        lastTransferAmount:
          type: number
          format: currency
          description: >-
              Amount of the transfer fund last posted
        recurring:
            $ref: '#/components/schemas/RecurringDetail'
      
    UpdateAccountRequest:
      title: UpdateAccountRequest
      type: object
      properties:
        
        nickname:
          type: string
          description: >-
              User defined name of the account
    
    UpdateAccountResponse:
      title: UpdateAccountResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'   
            
    UpdateDocumentDeliveryRequest:
      title: UpdateDocumentDeliveryRequest
      properties: 
        documentDeliveries:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDeliveriesUpdate'
    UpdateDocumentDeliveryResponse:
      title: UpdateDocumentDeliveryResponse
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message' 
    UpdateHoldRequest:
      title: UpdateHoldRequest
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - Hold
            - Caution
            - Pledge
          description: >-
              Type of hold
        amount: 
          type: number
          format: currency
          description: >-
              The amount of the hold
        holdAmountType:
          type: string
          description: >-
            Identifies the way the amount hold is calculated. Fixed is common when the hold amount is provided
          enum:
            - Ledger
            - Available
            - Fixed
            - Payoff
            - All
        effectiveDate:
          type: string
          format: date
          description: >-
              Effective date of the hold
        expirationDate:
          type: string
          format: date
          description: >-
              Date on which the hold will expire
     
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Reason for the hold 
        reasonDescription:
          type: string
          description: >-
            Reason for the hold 
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
      
        securedAccount:
          $ref: '#/components/schemas/AccountReferenceAdd'
          #description: >- 
          #    Loan account that is being secured by the hold

  
        
          
    UpdateHoldResponse:
      title: UpdateHoldResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'   
            
    UpdateStopItemRequest:
      title: UpdateStopItemRequest
      type: object
      properties:
        type:
          $ref: '#/components/schemas/StopItemType'
        itemNumber:
          $ref: '#/components/schemas/StopItemNumber'
        companyId:
          $ref: '#/components/schemas/StopItemCompanyId'
        amount:
          $ref: '#/components/schemas/StopItemAmount'
        payeeName:
          $ref: '#/components/schemas/StopItemPayeeName'
        originationDate:
          $ref: '#/components/schemas/StopItemOriginationDate'
        expirationDate:
          $ref: '#/components/schemas/StopItemExpirationDate'
        isPermanent:
          $ref: '#/components/schemas/StopItemIsPermanent'
        reasonCode:
          $ref: '#/components/schemas/CatalogTableCode'
          #description: >- 
          #    Stop Reason Code
        reasonDescription:
          $ref: '#/components/schemas/StopItemReasonDescription'
        authorizedBy:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedBy'
        specialOption:
          $ref: '#/components/schemas/StopItemSpecialOption'
        itemRange:
          $ref: '#/components/schemas/ItemRange'
        varianceRange:
          $ref: '#/components/schemas/VarianceRange'
    
  
    UpdateStopItemResponse:
      title: UpdateStopItemResponse
      type: object
      properties:
        messages: 
          type: array
          description: >-
              More than one error, warning or informational messages may be
              returned in the response.
          items:
            $ref: '#/components/schemas/Message'   
  
    VarianceRange:
      title: VarianceRange
      type: object
      required:
        - fromAmount
        - toAmount
      properties:
        fromAmount:
          type: number
          format: currency
          description: >-
              Lower end of the variance the amount can be
        toAmount:
          type: number
          format: currency
          description: >-
              Upper end of the variance the amount can be


    Links:
      title: Links
      required:
        - self
      type: object
      properties:
        self: 
          type: string
          format: uri
        first: 
          type: string
          format: uri 
        previous: 
          type: string
          format: uri
        next: 
          type: string
          format: uri
        last: 
          type: string
          format: uri
        
        
    Message:
      title: Message
      required:
        - type
        - title
      type: object
      properties:
        type:
          type: string
          description: >-
              A URI reference [RFC3986] that identifies the problem type
        title:
          type: string 
          description: >-
              A short human-readable summary of the problem type
        detail:
          type: string
          description: >-
              A human-readable description of the specific error  
        instance:
          type: string
          description: >-
              This optional key may be present, with a unique URI for the specific error; 
              this will often point to an error log for that specific response.
  examples:
    LWHeader:
      value:
        LWHeader:
          Fiserv-OrganizationId: '11-222-3333'
          Fiserv-TransactionId: '2699906D-6D65-4AE3-AD68-D2ACE751C34A' 
          Fiserv-ClientApplicationName: 'Portico'
          Fiserv-Channel: 'Mobile'
          Fiserv-ClientDateTime: '2021-05-27T13:23:10.508Z'
          Fiserv-VendorId: 'F26EFA5E-5708-46A9-81C5-624559ADBD0C'
    AccountList:
      value: 
        links:
          self: accountsLW/accounts/v1?$limit=10
          first: accountsLW/accounts/v1?limit=10
          next: accountsLW/accounts/v1?$limit=10&$cursor=333344344333
        accounts:
          - id: F17AA97E-4281-4E94-B045-BC0637D91C92
            type: Deposit
            detailType: Checking
            number: '****8304'
            description: Gold Checking
            nickname: My Checking
            status: Active
            detailStatus: Active
            isOpen: true
            isCardAttached: true
            currencyCode: USD
            title: Owner
            classCode: NOW
            branchCode: 333
            lastTransactionDateTime: '2021-05-27T13:23:10.508Z'
            lastTransactionAmount: 10.00
            rate: 1.3
            balance:
              - type: AvailableCredit
                amount: 20.00
              - type: Available
                amount: 130.00
              - type: Current
                amount: 100.00
              - type: Ledger
                amount: 100.00
              - type: MemoAvailable
                amount: 110.00
            organization:
              type: DUNS
              value: 11-222-3333
          - id: F17AA97E-4281-4E94-B045-BC0637D91C92
            type: Deposit
            detailType: Savings
            number: '****8304'
            description: Personal Savings
            nickname: My Savings
            status: Active
            detailStatus: Active
            isOpen: true
            isCardAttached: true
            currencyCode: USD
            title: Owner
            classCode: Class13
            branchCode: 333
            lastTransactionDateTime: '2021-05-27T13:23:10.508Z'
            lastTransactionAmount: 24.01
            rate: 0
            balance:
              - type: Available
                amount: 1000.00
              - type: Current
                amount: 1500.45
              - type: Ledger
                amount: 1500.45
              - type: MemoAvailable
                amount: 1000.00
            organization:
              type: DUNS
              value: 11-222-3333
            
          - id: F6CF8BA2-7A46-453A-8A27-399D86432676
            type: Loan
            detailType: Consumer
            number: '****6492'
            description: Consumer Loan
            nickname: My Loan
            status: Active
            detailStatus: Active
            isOpen: true
            isCardAttached: false
            currencyCode: USD
            title: Owner
            classCode: Class13
            branchCode: 333
            lastTransactionDateTime: '2021-05-27T14:56:29.980Z'
            lastTransactionAmount: 30.00
            rate: 15.55
            balance:
              - type: AmountDue
                amount: 40.00
              - type: AvailableCredit
                amount: 8000.00
              - type: PayoffAmount
                amount: 4444.00
              - type: Principal
                amount: 4000.00
            organization:
              type: DUNS
              value: 11-222-3333
            term:
              endDate: '2022-05-27'
              count: 12
              units: Months
            payment:
              dueDate: '2021-05-27'
              dueAmount: 40.00
              minimumAmount: 0.00
              isPastDue: false
    Beneficiaries:
      value: 
        messages:
          - type: 'https://lwapi.fiserv.com/message-result/success'
            title: Success
            detail: The request was successful
            instance: ''
        links:
          self: accountsLW/1.0.0/accounts/v1/F17AA97E-4281-4E94-B045-BC0637D91C92/beneficiaries
          first: ''
          previous: ''
          next: ''
          last: ''
        beneficiaries:
          - id: 3D5E0EB3-1877-4B57-BBAF-C569708A9B45
            type: Primary
            code: Child
            birthDate: '2020-01-01'
            firstName: Dave
            middleName: Oscar
            lastName: Smith
            taxNumberType: SSN
            taxNumber: 111-11-1111
            percentAllocated: 50
            address:
              type: Primary
              lineOne: 123 Street
              lineTwo: ''
              city: Lake Mary
              stateProvince: FL
              country: USA
              postalCode: '32746'
            email:
              type: Child
              address: myemail@home.com
              isPreferred: false
              isContactAllowed: false
            phone:
              type: Home
              countryCode: 1
              number: 4077883201
              extension: ''
              isPreferred: true
              isContactAllowed: true
          - partyId: 8BDA4351-D993-4C3E-B8EA-65836951400E
            partyNumber: 79A85428
            type: Primary
            code: Children
            birthDate: '2022-01-01'
            firstName:  Debbie
            middleName: Alexandra
            lastName: Smith
            taxNumberType: SSN
            taxNumber: 222-22-2222
            percentallocated: 50
            address:
              referenceNumber: 174A5F6A
              type: Primary
              lineOne: 123 Street
              lineTwo: ''
              city: Lake Mary
              stateProvince: FL
              country: USA
              postalCode: '32746'
            email:
              type: Personal
              address: myemail@home.com
              isPreferred: false
              isContactAllowed: false
            phone:
              type: Home
              countryCode: 1
              number: 4077883201
              extension: ''
              isPreferred: true
              isContactAllowed: true
    Transactions:
      value: 
        messages:
          - type: 'https://lwapi.fiserv.com/message-result/success'
            title: Success
            detail: The request was successful
            instance: ''
        links:
          self: accountsLW/0.9.0/accounts/v1?$pageOffset=1&$pageLimit=10
          first: accountsLW/0.9.0/accounts/v1?$pageOffset=1&$pageLimit=10
          previous: ''
          next: ''
          last: accountsLW/0.9.0/accounts/v1?$pageOffset=1&$pageLimit=10
        transactions:
          - id: F17AA97E-4281-4E94-B045-BC0637D91C98
            type: Debit
            category: Adjustment
            status: Posted
            sequence: '9596'
            originatedDateTime: '2021-05-27T13:23:10.508Z'
            postedDateTime: '2021-05-27T13:23:10.508Z'
            description: Adjustment of Money
            traceNumber: 105A
            checkNumber: 10C
            transactionCode: TC51
            amount: 75
            isCustomerViewable: 1
            distribution:
              - type: Principal
                amount: 70
              - type: ServiceCharge
                amount: 5
            balance:
              - type: Available
                amount: 100
              - type: Current
                amount: 100
            image:
              - type: Photo
                front: ''
                back: ''
              - type: Signature
                front: ''
                back: ''
          - id: F17AA97E-4281-4E94-B045-BC0637D91C99
            type: Credit
            category: Deposit
            status: Memo
            sequence: '9597'
            originatedDateTime: '2021-05-27T13:23:10.508Z'
            postedDateTime: '2021-05-27T13:23:10.508Z'
            description: Deposit of Money
            traceNumber: 106A
            checkNumber: 11C
            transactionCode: TC52
            amount: 115
            distribution:
              - type: Principal
                amount: 100
              - type: ServiceCharge
                amount: 15
            balance:
              - type: Available
                amount: 215
              - type: Current
                amount: 215
            image:
              - type: Photo
                front: ''
                back: ''
              - type: Signature
                front: ''
                back: ''
    ErrorResponse:
      value:
        messages:
          - type: 'https://lwapi.fiserv.com/message-result/error'
            title: Error
            detail: The request failed
            instance: ''
    accountKeys:
      value:
        account1: "detailType=checking, number=1234578, detailType=club, number=5457567"
        account2: "detailType=club, number=5457567"
      # value:
      #   number: "987562"
      #   detailType: "Club"
    searchCriteria:
      value:
        taxType: "SSN"
        taxId: "11-55-789574"
