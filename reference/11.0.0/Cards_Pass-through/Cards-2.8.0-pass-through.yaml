---
openapi: 3.0.0
info:
  title: Cards
  description: Card API provides the ability to manage a card, digitally display card details, activate cards online through various channels, search for transactions, and search for basic cardholder information using details other than a card number. All times expressed in UTC standard time.
  version: TechWriting_1.0
servers:
- url: https://card.api.fiservapps.com/cs/cards
  description: Production url
- url: https://card-sandbox.api.fiservapps.com/cs/cards
  description: Sandbox url
security:
- BearerAuth: []
tags:
- name: Activation
  description: Activate a card instantly, and retrieve current activation status for Debit and Credit cards.
- name: Add
  description: Generate a template to add card, and add card
- name: Audit
  description: Search for audit details on a card.
- name: Demographics
  description: Search or set demographic information about cardholders.
- name: Details
  description: Retrieves basic cardholder information using full card number or other details such as email address, last name and phone.
- name: Digital Card Display
  description: Display card activation date and CVV, enabling immediate use after issuance.
- name: Limits
  description: Set, search and update card limits for any specified Primary Account Number (PAN).
- name: Order
  description: Search, update or cancel an order for a card.
- name: PIN
  description: Set a pin and reset pin attempts.
- name: Related Account
  description: Retrieve or update account associations for a card.
- name: Replacement
  description: Order replacements for cards.
- name: Transaction
  description: Search for transactions on a card, retrieving summary or detailed information.
- name: Update Status
  description: Update the status of a card, including deactivating the card.
paths:
  /cardtokenservice/mss/cards/all/v2/cards/authDetails:
    post:
      tags:
      - Digital Card Display
      summary: Retrieve card expiration date and CV2.
      operationId: getCardAuthDetailsV2
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: getCardAuthDetailsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDetailsRequestV2'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDetailsResponseV2'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search400:
                  $ref: '#/components/examples/AuthDetailsV2Search400'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search401:
                  $ref: '#/components/examples/AuthDetailsV2Search401'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search403:
                  $ref: '#/components/examples/AuthDetailsV2Search403'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search404:
                  $ref: '#/components/examples/AuthDetailsV2Search404'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search405:
                  $ref: '#/components/examples/AuthDetailsV2Search405'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search406:
                  $ref: '#/components/examples/AuthDetailsV2Search406'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search415:
                  $ref: '#/components/examples/AuthDetailsV2Search415'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search422:
                  $ref: '#/components/examples/AuthDetailsV2Search422'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
              examples:
                AuthDetailsV2Search429:
                  $ref: '#/components/examples/AuthDetailsV2Search429'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request. Please try again. If the problem persists please contact Support
                      messageid: 25557-84290371-1
      x-group-name: Digital Card Display
      x-proxy-name: Get Details
      x-child-product-name: Debit Cards
      x-core: EPOC
  /v1/cards/token:
    post:
      tags:
      - PIN
      summary: Obtain a JWT which is valid for 15 minutes. This token is required to set a pin.
      operationId: getCardToken
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenRequest'
      responses:
        "200":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request. Please try again. If the problem persists please contact Support
                      messageid: 25557-84290371-1
      x-group-name: PIN
      x-proxy-name: Get Token
      x-child-product-name: Debit Cards
      x-core: EPOC
  /v1/cards/pin:
    post:
      tags:
      - PIN
      summary: Sets a PIN for a given card. You must include a token obtained from the cards/token endpoint in the request to set a PIN. The JWT token must be used within 15 minutes.
      operationId: setPin
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request. Please try again. If the problem persists please contact Support
                      messageid: 25557-84290371-1
      x-group-name: PIN
      x-proxy-name: Set PIN
      x-child-product-name: Debit Cards
      x-core: EPOC
components:
  schemas:
    AccountSearchRequest:
      title: AccountSearchRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
    AccountSearchRequestV2:
      title: AccountSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    AccountSearchResponse:
      title: AccountSearchResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder.
          example: 400010xxxxxx4000
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        associations:
          type: array
          items:
            $ref: '#/components/schemas/Associations'
    AccountSearchResponseV2:
      title: AccountSearchResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: 400020xxxxxx4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        associations:
          type: array
          items:
            $ref: '#/components/schemas/AccountSearchDetailsV2'
    Associations:
      title: AccountSearchDetails
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: Identifies the account type of the account number.
          example: CHECKING
          enum:
          - CHECKING
          - SAVINGS
          - CREDIT_CARD
          - MONEY_MARKET
          - NOW
          - IRA
          - CREDIT_LINE
          - INSTALLMENT_LOAN
          - MORTGAGE_LOAN
        accountDescription:
          type: string
          description: Description of the account.
          example: Main
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
        primaryAccount:
          type: string
          description: Identifies if the account is primary or not. At least one primary account is required for each cardholder record. You can establish a primary account for each of the following account types — Checking, Savings, Credit Card, NOW, Money Market, and Credit Line.
          example: "true"
          enum:
          - "true"
          - "false"
          - NOT_APPLICABLE
        restrictedTransactions:
          type: string
          description: "Indicates if the account is restricted to transactions that change the account to a positive balance. P\nValues are -  \nNO_RESTRICTIONS — All transactions allowed  \nBALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO — Transactions allowed include balance inquiries, deposits and transfers to the account.\n"
          example: NO_RESTRICTIONS
          enum:
          - NO_RESTRICTIONS
          - BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO
          - NOT_APPLICABLE
        transactionsAllowed:
          $ref: '#/components/schemas/TransactionsAllowed'
    AccountSearchDetailsV2:
      title: AccountSearchDetails
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Identifies the account type of the account number.\nValues are - \n- CHECKING - Account that allows you to deposit and withdraw funds.\n- SAVINGS - Account that allows you to earn interest on the money you deposit.\n- CREDIT_CARD - Type of payment card that allows you to borrow money to make purchases.\n- MONEY_MARKET - Account that typically pays a higher interest rate than a traditional savings account, in exchange for requiring a higher minimum balance.\n- NOW - Type of interest-bearing bank account that allow the account holder to write checks or make withdrawals on demand.\n- IRA -Type of investment account that allows you to save for retirement while potentially receiving tax benefits.\n- CREDIT_LINE -Type of loan that allows you to borrow money up to a certain limit, but you only pay interest on the amount you borrow.\n- INSTALLMENT_LOAN -  Type of loan that is repaid in regular, fixed payments over a set period of time, usually with interest.\n- MORTGAGE_LOAN - Type of loan that is used to finance the purchase of a home or other real estate.\n"
          example: CHECKING
          enum:
          - CHECKING
          - SAVINGS
          - CREDIT_CARD
          - MONEY_MARKET
          - NOW
          - IRA
          - CREDIT_LINE
          - INSTALLMENT_LOAN
          - MORTGAGE_LOAN
        accountDescription:
          type: string
          description: Description of the account.
          example: Main
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
        primaryAccount:
          type: string
          description: "Identifies if the account is Primary or not. \nAt least one primary account is required for each cardholder record.  \nYou can establish a primary account for each of the following account types — CHECKING, SAVINGS, CREDIT_CARD, NOW, MONEY_MARKET, and CREDIT_LINE. \n"
          example: "true"
          default: "false"
          enum:
          - "true"
          - "false"
          - NOT_APPLICABLE
        restrictedTransactions:
          type: string
          description: |
            Indicates if the account is restricted to transactions that change the account to a positive balance.
            Values are -
            - NO_RESTRICTIONS - All transactions allowed.
            - BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO - Transactions allowed include balance inquiries, deposits and transfers to the account.
          example: NO_RESTRICTIONS
          enum:
          - NO_RESTRICTIONS
          - BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO
          - NOT_APPLICABLE
        transactionsAllowed:
          $ref: '#/components/schemas/TransactionsAllowedSearchV2'
    TransactionsAllowed:
      title: TransactionsAllowed
      type: object
      properties:
        balanceInquiries:
          type: boolean
          description: Transactions allowed for balance inquiries.
          example: true
        deposits:
          type: boolean
          description: Transactions allowed for deposits.
          example: true
        paymentFrom:
          type: boolean
          description: Transactions allowed for outgoing payment.
          example: true
        paymentTo:
          type: boolean
          description: Transactions allowed for incoming payment.
          example: true
        posPurchasesReturns:
          type: boolean
          description: Transactions allowed for POS purchases returns.
          example: true
        transferFrom:
          type: boolean
          description: Transactions allowed for Transfer From.
          example: true
        transferTo:
          type: boolean
          description: Transactions allowed for Transfer To.
          example: true
        withdrawalsCashAdvance:
          type: boolean
          description: Transactions allowed for Withdrawals and Cash Advance.
          example: true
      description: Allowed transactions a cardholder can perform for the selected account.
    TransactionsAllowedSearchV2:
      title: TransactionsAllowed
      type: object
      properties:
        balanceInquiries:
          type: boolean
          description: Transactions allowed for balance inquiries.
          example: true
        deposits:
          type: boolean
          description: Transactions allowed for deposits.
          example: true
        paymentFrom:
          type: boolean
          description: Transactions allowed for outgoing payment.
          example: true
        paymentTo:
          type: boolean
          description: Transactions allowed for incoming payment.
          example: true
        posPurchasesReturns:
          type: boolean
          description: Transactions allowed for POS purchases returns.
          example: true
        transferFrom:
          type: boolean
          description: Transactions allowed for Transfer From.
          example: true
        transferTo:
          type: boolean
          description: Transactions allowed for Transfer To.
          example: true
        withdrawalsCashAdvance:
          type: boolean
          description: Transactions allowed for Withdrawals and Cash Advance.
          example: true
      description: Allowed transactions a cardholder can perform for the selected account.
    TransactionsAllowedV2:
      title: TransactionsAllowed
      type: object
      properties:
        balanceInquiries:
          type: boolean
          description: Transactions allowed for balance inquiries.
          example: true
        deposits:
          type: boolean
          description: Transactions allowed for deposits.
          example: true
        paymentFrom:
          type: boolean
          description: Transactions allowed for outgoing payment.
          example: true
        paymentTo:
          type: boolean
          description: Transactions allowed for incoming payment.
          example: true
        posPurchasesReturns:
          type: boolean
          description: Transactions allowed for POS purchases returns.
          example: true
        transferFrom:
          type: boolean
          description: Transactions allowed for Transfer From.
          example: true
        transferTo:
          type: boolean
          description: Transactions allowed for Transfer To.
          example: true
        withdrawalsCashAdvance:
          type: boolean
          description: Transactions allowed for Withdrawals and Cash Advance.
          example: true
      description: Allowed transactions a cardholder can perform for the selected account.
    TransactionsAllowedUpdateV2:
      title: TransactionsAllowed
      type: object
      properties:
        balanceInquiries:
          type: boolean
          description: Transactions allowed for balance inquiries.
          example: true
        deposits:
          type: boolean
          description: Transactions allowed for deposits.
          example: true
        paymentFrom:
          type: boolean
          description: Transactions allowed for outgoing payment.
          example: true
        paymentTo:
          type: boolean
          description: Transactions allowed for incoming payment.
          example: true
        posPurchasesReturns:
          type: boolean
          description: Transactions allowed for POS purchases returns.
          example: true
        transferFrom:
          type: boolean
          description: Transactions allowed for Transfer From.
          example: true
        transferTo:
          type: boolean
          description: Transactions allowed for Transfer To.
          example: true
        withdrawalsCashAdvance:
          type: boolean
          description: Transactions allowed for Withdrawals and Cash Advance.
          example: true
      description: Allowed transactions a cardholder can perform for the selected account.
    AccountAddRequest:
      title: AccountAddRequest
      required:
      - association
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        association:
          $ref: '#/components/schemas/Association'
    AccountsRequestV2:
      title: AccountAddRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        associations:
          type: array
          items:
            $ref: '#/components/schemas/AssociationV2'
    AccountUpdateRequest:
      title: AccountUpdateRequest
      required:
      - association
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        association:
          $ref: '#/components/schemas/Association'
    AccountUpdateRequestV2:
      title: AccountUpdateRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        association:
          type: array
          items:
            $ref: '#/components/schemas/AssociationUpdateV2'
    IvrPanValidationRequest:
      title: IvrPanValidationRequest
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder It's typically 16 digits.Between 13 and 19 digits for card number identifier.
          format: numeric
          example: "8877665500000016"
        memberNumber:
          maxLength: 2
          type: string
          description: Member number of the cardholder.
          format: numeric
          example: "0"
        tollFreeNumber:
          type: string
          description: Client's IVR Toll Free Number (TFN).
          format: numeric
          example: "9736005878"
        validateBoth:
          type: boolean
          description: Indicates that both CVV and PIN have to be validated or only CVV have to be validated.
          example: true
    IvrPanValidationResponse:
      type: object
      properties:
        systemRecordIdentifier:
          type: string
          description: System generated ID used for validation of CVV and PIN.
        attemptsRemaining:
          type: string
          description: Total number valid attempts remaining to validate PIN/CVV.
        dekBest12:
          type: string
          description: Used to generate a PIN block for PIN verification or PIN change.
        kekDek:
          type: string
          description: Used to generate a PIN block for PIN verification or PIN change
        kekKpe:
          type: string
          description: Used to generate a PIN block for PIN verification or PIN change
        uskMfkKpe:
          type: string
          description: Used to generate a PIN block for PIN verification or PIN change
    IvrCvvValidationRequest:
      title: IvrCvvValidationRequest
      type: object
      properties:
        systemRecordIdentifier:
          type: string
          description: Sytem Record Identifier to be entered which is generated while validating PAN.
          example: e/ZdFKrmfeVKn0qFgOo0AzdSnIQG59kvZuicy1BsDuE0oLvAp0+PeozqA1G0rm/E
        cvv:
          maxLength: 3
          minLength: 3
          type: string
          description: CVV is three digit value which is present at back of  the card. As per ISO8583, field 35 ( track 2 data) have CVV.It    will enetered in plain text format.
          example: "123"
    IvrCvvValidationResponse:
      type: object
      properties:
        systemRecordIdentifier:
          type: string
          description: It is system generated ID with combination of Card Number, Exp date and other data to used throughout IVR call for validation of CVV and PIN.
        attemptsRemaining:
          type: number
          description: Total number valid attempts remaining to validate PIN/CVV.
          example: 5
    IvrPinValidationRequest:
      title: IvrPinValidationRequest
      type: object
      properties:
        systemRecordIdentifier:
          type: string
          description: Sytem Record Identifier to be entered which is generated while validating PAN.
          example: e/ZdFKrmfeVKn0qFgOo0AzdSnIQG59kvZuicy1BsDuE0oLvAp0+PeozqA1G0rm/E
        PIN:
          type: string
          description: Encrypted PIN to be entered in PIN for validation. It will be 16 byte length in alphanumeric format
          example: 55AA85FAE88D264E
    IvrPinValidationResponse:
      type: object
      properties:
        systemRecordIdentifier:
          type: string
          description: It is system generated ID with combination of Card Number, Exp date and other data to used throughout IVR call for validation of CVV and PIN.
        attemptsRemaining:
          type: number
          description: Total number valid attempts remaining to validate PIN/CVV.
          example: 5
    CompromisedCardRequest:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder to view compromised card for the entered card number .
          example: "4000200030004000"
        networkAlert:
          type: string
          description: Use the network alert number that Mastercard, Visa or the cardholder sends to view compromised cards.
        fromDate:
          type: string
          description: Narrow the search criteria by entering the file receive date for the compromised card.
          format: date
        toDate:
          type: string
          description: The date the system receives the network alert file from the source.
          format: date
        pageLimit:
          maximum: 250
          minimum: 1
          type: integer
          description: The number of entries returned per page.
          example: 50
          default: 250
        pageOffset:
          minimum: 1
          type: integer
          description: 'The page to be returned. Note: The starting record of the response will be the pagelimit multiplied by the pageoffset.'
          example: 1
          default: 1
    CompromisedCardResponse:
      type: object
      properties:
        compromisedCards:
          type: array
          items:
            $ref: '#/components/schemas/CompromisedCardList'
    CompromisedCardList:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: The card number for the primary cardholder.
          example: "4000200030004000"
        clientId:
          type: string
          description: 8-digit identifier of the institution;can be the institution’s routing and transit (R&T)number or a number assigned by Fiserv.
        networkAlert:
          maxLength: 20
          type: string
          description: The number of network alerts the search returns.
          format: Alphanumeric
          example: CompCard1234
        networkAlertDate:
          type: string
          description: The date the system receives the network alert file from the source.
          format: date
        severityLevel:
          type: string
          description: The severity level displays a value of A, B, C, D, 1, 2, 3, 4, 5 or 6 that represents the value that Card Services assigns to the alert to designate the severity of the compromise.
          example: A
        compromiseSource:
          type: string
          description: Displays a text description of the compromise occurrence, the entity breach or the source of the card data (for example, law enforcement recovery).
          example: FALCOMPCARD TEST 1
        sourceAlertDescription:
          type: string
          description: A description of the source alert.
          example: NO ACTION TAKEN
    CompromisedCardDetailRequest:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder to view compromised card for the entered card number .
          example: "4000200030004000"
    CompromisedCardDetailResponse:
      type: object
      properties:
        debitOnly:
          $ref: '#/components/schemas/CompromisedcardDebitDetails'
        creditOnly:
          $ref: '#/components/schemas/CompromisedcardCreditDetails'
    CompromisedcardDebitDetails:
      type: object
      properties:
        eftRiskAlertNumber:
          type: string
          description: Displays to EPOC users the number assigned to the FI when Card Services receives the MasterCard alerts as the sponsor and forwarded the alerts to Fiserv clients. This field will be blank if there is no valid number in this field for this record.
        dateLastMaintainance:
          type: string
          description: The date that action is taken against the card.
          example: 2021-07-20T00:00:00.000+0000
    CompromisedcardCreditDetails:
      type: object
      properties:
        system:
          maxLength: 4
          type: string
          description: The system that correlates with the account or cardholder.
          example: "0000"
        principal:
          maxLength: 4
          type: string
          description: The principal that correlates with the account or cardholder.
          example: "0000"
        agent:
          maxLength: 4
          type: string
          description: The agent that correlates with the account or cardholder.
          example: "0000"
        cardStatus:
          type: string
          description: The status of the card.
          example: L–Lost/Stolen
        accountStatus:
          type: string
          description: The status of the account.
          example: A–Authorization prohibited
        previousAction:
          type: string
          description: This is a previous action taken against the card. The field displays NO ACTION TAKEN whether an action has been taken on the account or not.
          example: NO ACTION TAKEN
        dateLastMaintainance:
          type: string
          description: The date the action was taken against the card.
          example: 2021-07-20T00:00:00.000+0000
        expiryDate:
          type: string
          description: The date the card expires.
          example: 2025-07-20T00:00:00.000+0000
        cardStatusReasonCode:
          type: string
          description: The card status reason code.
          example: 88–Fraud
        compromisedDate:
          type: string
          description: The lost or stolen date for the card.
        fraudActivity:
          type: string
          description: Fraud activity associated with the card
          example: None Suspected
        fraudActivityMemo:
          type: string
          description: User-defined information to describe the action performed on the card for fraud activity.You can enter up to 220 characters.
        account:
          type: string
          description: The cardholder's account number.
          example: "1451550129"
        transferredAccount:
          type: string
          description: Account transferred indicator. Indicates whether the account has been transferred.
          example: "Yes"
        transferredCard:
          type: string
          description: Card transferred indicator. Indicates whether the card has been transferred.
          example: "Yes"
    Association:
      title: Association
      type: object
      properties:
        accountNumber:
          maxLength: 20
          minLength: 1
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: Identifies the account type of the account number.
          example: CHECKING
          enum:
          - CHECKING
          - SAVINGS
          - CREDIT_CARD
          - MONEY_MARKET
          - NOW
          - IRA
          - CREDIT_LINE
          - INSTALLMENT_LOAN
          - MORTGAGE_LOAN
        accountDescription:
          type: string
          description: Description of the account.
          example: Main
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
        primaryAccount:
          type: string
          description: Identifies if the account is Primary or not. At least one primary account is required for each cardholder record. You can establish a primary account for each of the following account types — Checking, Savings, Credit Card, NOW, Money Market, and Credit Line.
          example: "true"
          enum:
          - "true"
          - "false"
          - NOT_APPLICABLE
        restrictedTransactions:
          type: string
          description: "Indicates if the account is restricted to transactions that change the account to a positive balance.  \nPossible values are -  \n- NO_RESTRICTIONS — All transactions allowed  \n- BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO — Transactions allowed include balance inquiries, deposits and transfers to the account'\n"
          example: NO_RESTRICTIONS
          enum:
          - NO_RESTRICTIONS
          - BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO
          - NOT_APPLICABLE
        transactionsAllowed:
          $ref: '#/components/schemas/TransactionsAllowed'
    AssociationV2:
      title: Association
      required:
      - accountNumber
      - accountStatus
      - accountType
      type: object
      properties:
        accountNumber:
          maxLength: 20
          minLength: 1
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Identifies the account type of the account number.\nValues are - \n- CHECKING - Account that allows you to deposit and withdraw funds.\n- SAVINGS - Account that allows you to earn interest on the money you deposit.\n- CREDIT_CARD - Type of payment card that allows you to borrow money to make purchases.\n- MONEY_MARKET - Account that typically pays a higher interest rate than a traditional savings account, in exchange for requiring a higher minimum balance.\n- NOW - Type of interest-bearing bank account that allow the account holder to write checks or make withdrawals on demand.\n- IRA -Type of investment account that allows you to save for retirement while potentially receiving tax benefits.\n- CREDIT_LINE -Type of loan that allows you to borrow money up to a certain limit, but you only pay interest on the amount you borrow.\n- INSTALLMENT_LOAN -  Type of loan that is repaid in regular, fixed payments over a set period of time, usually with interest.\n- MORTGAGE_LOAN - Type of loan that is used to finance the purchase of a home or other real estate.\n"
          example: CHECKING
          enum:
          - CHECKING
          - SAVINGS
          - CREDIT_CARD
          - MONEY_MARKET
          - NOW
          - IRA
          - CREDIT_LINE
          - INSTALLMENT_LOAN
          - MORTGAGE_LOAN
        accountDescription:
          maxLength: 10
          type: string
          description: When this field is left blank it is defaulted to last 10 digits of the account number.
          example: Main
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
        primaryAccount:
          type: string
          description: "Identifies if the account is Primary or not.\nAt least one primary account is required for each cardholder record.\nYou can establish a primary account for each of the following account types - CHECKING, SAVINGS, CREDIT_CARD, NOW, MONEY_MARKET, and CREDIT_LINE. \n"
          example: "true"
          default: "false"
          enum:
          - "true"
          - "false"
          - NOT_APPLICABLE
        restrictedTransactions:
          type: string
          description: "Indicates if the account is restricted to transactions that change the account to a positive balance.\nValues are - \n- NO_RESTRICTIONS - All transactions allowed.   \n- BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO - Transactions allowed include balance inquiries, deposits and transfers to the account.\n"
          example: NO_RESTRICTIONS
          default: NO_RESTRICTIONS
          enum:
          - NO_RESTRICTIONS
          - BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO
          - NOT_APPLICABLE
        transactionsAllowed:
          $ref: '#/components/schemas/TransactionsAllowedV2'
    AssociationUpdateV2:
      title: Association
      type: object
      properties:
        accountNumber:
          maxLength: 20
          minLength: 1
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Identifies the account type of the account number.\nValues are - \n- CHECKING - Account that allows you to deposit and withdraw funds.\n- SAVINGS - Account that allows you to earn interest on the money you deposit.\n- CREDIT_CARD - Type of payment card that allows you to borrow money to make purchases.\n- MONEY_MARKET - Account that typically pays a higher interest rate than a traditional savings account, in exchange for requiring a higher minimum balance.\n- NOW - Type of interest-bearing bank account that allow the account holder to write checks or make withdrawals on demand.\n- IRA -Type of investment account that allows you to save for retirement while potentially receiving tax benefits.\n- CREDIT_LINE -Type of loan that allows you to borrow money up to a certain limit, but you only pay interest on the amount you borrow.\n- INSTALLMENT_LOAN -  Type of loan that is repaid in regular, fixed payments over a set period of time, usually with interest.\n- MORTGAGE_LOAN - Type of loan that is used to finance the purchase of a home or other real estate.\nexample: CHECKING\n"
          enum:
          - CHECKING
          - SAVINGS
          - CREDIT_CARD
          - MONEY_MARKET
          - NOW
          - IRA
          - CREDIT_LINE
          - INSTALLMENT_LOAN
          - MORTGAGE_LOAN
        accountDescription:
          maxLength: 10
          type: string
          description: Description of the account
          example: Main
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
        primaryAccount:
          type: string
          description: "Identifies if the account is Primary or not. \nAt least one primary account is required for each cardholder record.\nYou can establish a primary account for each of the following account types — CHECKING, SAVINGS, CREDIT_CARD, NOW, MONEY_MARKET, and CREDIT_LINE. \n"
          example: "true"
          enum:
          - "true"
          - "false"
          - NOT_APPLICABLE
        restrictedTransactions:
          type: string
          description: "Indicates if the account is restricted to transactions that change the account to a positive balance.\nValues are -\n- NO_RESTRICTIONS - All transactions allowed.  \n- BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO - Transactions allowed include balance inquiries, deposits and transfers to the account.\n"
          example: NO_RESTRICTIONS
          enum:
          - NO_RESTRICTIONS
          - BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO
          - NOT_APPLICABLE
        transactionsAllowed:
          $ref: '#/components/schemas/TransactionsAllowedUpdateV2'
      description: "AccountNumber and accountType are required validation field in order to update any one of the following fields in the account association.\nFields that can be updated are - \n- accountDescription\n- accountStatus\n- primaryAccount\n- restrictedTransactions\n- balanceInquiries\n- deposits\n- paymentFrom\n- paymentTo\n- posPurchasesReturns\n- transferFrom\n- transferTo\n- withdrawalsCashAdvance\n"
    AccountDeleteRequest:
      title: AccountDeleteRequest
      required:
      - accountNumber
      - accountType
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        accountNumber:
          maxLength: 20
          minLength: 1
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: Identifies the account type of the account number.
          example: CHECKING
          enum:
          - CHECKING
          - SAVINGS
          - CREDIT_CARD
          - MONEY_MARKET
          - NOW
          - IRA
          - CREDIT_LINE
          - INSTALLMENT_LOAN
          - MORTGAGE_LOAN
    AccountDeleteRequestV2:
      title: AccountDeleteRequest
      required:
      - accountNumber
      - accountType
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          example: "0"
        accountNumber:
          maxLength: 20
          minLength: 1
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Identifies the account type of the account number.\nValues are - \n- CHECKING - Account that allows you to deposit and withdraw funds.\n- SAVINGS - Account that allows you to earn interest on the money you deposit.\n- CREDIT_CARD - Type of payment card that allows you to borrow money to make purchases.\n- MONEY_MARKET - Account that typically pays a higher interest rate than a traditional savings account, in exchange for requiring a higher minimum balance.\n- NOW - Type of interest-bearing bank account that allow the account holder to write checks or make withdrawals on demand.\n- IRA -Type of investment account that allows you to save for retirement while potentially receiving tax benefits.\n- CREDIT_LINE -Type of loan that allows you to borrow money up to a certain limit, but you only pay interest on the amount you borrow.\n- INSTALLMENT_LOAN -  Type of loan that is repaid in regular, fixed payments over a set period of time, usually with interest.\n- MORTGAGE_LOAN - Type of loan that is used to finance the purchase of a home or other real estate.\nexample: CHECKING\n"
          enum:
          - CHECKING
          - SAVINGS
          - CREDIT_CARD
          - MONEY_MARKET
          - NOW
          - IRA
          - CREDIT_LINE
          - INSTALLMENT_LOAN
          - MORTGAGE_LOAN
    AuditSearchRequest:
      title: AuditSearchRequest
      required:
      - cardNumber
      - fromDateTime
      - toDateTime
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          maxLength: 1
          type: string
          description: Member number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
        fromDateTime:
          type: string
          description: Refines the search based on the start date and time.
          format: date-time
        toDateTime:
          type: string
          description: Refines the search based on the end date and time. Cannot be more than six month duration from 'fromDateTime'.
          format: date-time
    AuditSearchResponse:
      title: AuditSearchResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder.
          example: 400010xxxxxx4000
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        auditLogSearch:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogSearch'
    AuditLogSearch:
      title: AuditLogSearch
      type: object
      properties:
        auditLogDateTime:
          type: string
          description: Date and time of the audit log record.
          format: date-time
        auditLogSource:
          type: string
          description: Source of the audit log record.
          example: ATM
        auditLogAction:
          type: string
          description: Action performed on the cardholder record.
          example: UPDATE
          enum:
          - ADD
          - UPDATE
          - DELETE
        recordType:
          type: string
          description: "The modified record name, followed by the internal file type.\nValues are -     \n- Card Details (MLAI)  \n- Card Details (DAF)  \n- Card Details (MLCM)  \n- Activation/PIN IVR (MLAC)  \n- Card/PIN Orders (MLCO)  \n- Names (MLNA)  \n- RuleManager (EXM)\n"
          example: Card Details (DAF).
        auditLogId:
          type: string
          description: User ID of person who completed the action.
          example: Alex
    AuditDetailsRequest:
      title: AuditDetailsRequest
      required:
      - auditLogAction
      - auditLogDateTime
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          maxLength: 1
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
        auditLogDateTime:
          type: string
          description: Date and time of the audit log record.
          format: date-time
        auditLogAction:
          type: string
          description: Cause of the audit log record.
          example: UPDATE
          enum:
          - ADD
          - UPDATE
          - DELETE
    AuditDetailsResponse:
      title: AuditDetailsResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder.
          example: 400010xxxxxx4000
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        auditRecordDetails:
          type: array
          items:
            $ref: '#/components/schemas/AuditRecordDetails'
    AuditRecordDetails:
      title: AuditRecordDetails
      type: object
      properties:
        fieldName:
          type: string
          description: Name of the field modified as a result of the selected update action.
          example: Account Type
        before:
          type: string
          description: The value of the field before the action.
          example: Checking
        after:
          type: string
          description: The value of the field after the action.
          example: Savings
    CustomDailylimits:
      type: object
      properties:
        nonExpiring:
          maxLength: 3
          type: string
          description: Indicates if limits tend to expire.
          example: "Yes"
        expirationDate:
          type: string
          description: Expiration date applicable to daily limits
          format: date
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "2000"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "200"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "3000"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "400"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "500"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "100"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: Signature POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: Signature POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: "Combined total, Online and offline withdrawal limits at ATM and POS.  \nDaily Limit Combined number of transaction attempts allowed at the ATM and POS.  \nVelocity Support (Maximum number of transactions allowed during the lifespan of the PAN) \n"
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Total daily amount available for deposit
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer funding | P2P Limits | offline processing. Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing.
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
    CustomDailylimitsV2:
      type: object
      properties:
        limitType:
          type: string
          description: Indicates that the limits are card class values.
          example: CARD_CLASS
          enum:
          - CARD_CLASS
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "500"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: "Combined total, Online and offline withdrawal limits at ATM and POS.  \nDaily Limit Combined number of transaction attempts allowed at the ATM and POS.  \nVelocity Support (Maximum number of transactions allowed during the lifespan of the PAN)  \n"
          example: "2500"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "300"
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "600"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "5"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "10"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "500"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "1500"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Amount of same day deposit available for use.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount per MT funding transaction. Money transfer funding | P2P Limits | offline processing.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "500"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "2500"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: POS daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: POS Daily limit for purchase transaction requiring a signature.
          example: "0"
    cardDailyLimitsRequestV2:
      type: object
      properties:
        nonExpiring:
          type: boolean
          description: Indicates if limits tend to expire.
          example: false
        limitExpirationDate:
          type: string
          description: Expiration date applicable to daily limits
          format: date
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: "Combined total, Online and offline withdrawal limits at ATM and POS.  \nDaily Limit Combined number of transaction attempts allowed at the ATM and POS.  \nVelocity Support (Maximum number of transactions allowed during the lifespan of the PAN)  \n"
          example: "0"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "200"
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "2000"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "100"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "500"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Amount of same day deposit available for use.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount per MT funding transaction. Money transfer funding | P2P Limits | offline processing.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "400"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "3000"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: POS daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: POS Daily limit for purchase transaction requiring a signature.
          example: "0"
      description: |
        Please provide at least one field in the input in the request to update.

        TotalAmount should be greater than OfflineAmount for the following fields in the dailyLimits.
        - aggregateOfflineAmount
        - aggregateTotalAmount
        - atmOfflineAmount
        - atmTotalAmount
        - cashAdvanceOfflineAmount
        - cashAdvanceTotalAmount
        - cashEquivOfflineAmount
        - cashEquivTotalAmount
        - customerNPOfflineAmount
        - mtCreditDlyCntOffline
        - mtCreditDlyCntTotal
        - mtCreditDlyOfflineAmount
        - mtCreditDlyTotalAmount
        - mtCreditPerTranOfflineAmount
        - mtCreditPerTranTotalAmount
        - mtFundingAmtPerTranOfflineAmount
        - mtFundingAmtPerTranTotalAmount
        - mtFundingDlyCntOffline
        - mtFundingDlyCntTotal
        - mtFundingDlyOfflineAmount
        - mtFundingDlyOfflineAmount
        - mtFundingDlyTotalAmount
        - posOfflineAmount
        - posTotalAmount
        - signatureDebitPOSOfflineAmount
        - signatureDebitPOSTotalAmount
    CardDailylimitsResponseV2:
      type: object
      properties:
        nonExpiring:
          type: boolean
          description: Indicates if limits tend to expire.
          example: false
        limitExpirationDate:
          type: string
          description: Expiration date applicable to daily limits
          format: date
        limitType:
          type: string
          description: Indicates if the limits are card class values or overridden.
          example: OVERRIDE
          enum:
          - OVERRIDE
          - CARD_CLASS
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "500"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: "Combined total, Online and offline withdrawal limits at ATM and POS.  \nDaily Limit Combined number of transaction attempts allowed at the ATM and POS.  \nVelocity Support (Maximum number of transactions allowed during the lifespan of the PAN)  \n"
          example: "2500"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "300"
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "600"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "2"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "10"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "500"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "1500"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Amount of same day deposit available for use.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount per MT funding transaction. Money transfer funding | P2P Limits | offline processing.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "500"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "2500"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: POS daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDateTime:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date-time
    UpdateCardDailylimitsResponseV2:
      type: object
      properties:
        nonExpiring:
          type: boolean
          description: Indicates if limits tend to expire.
          example: false
        limitExpirationDate:
          type: string
          description: Expiration date applicable to daily limits
          format: date
        limitType:
          type: string
          description: Indicates if the limits are card class values or overridden.
          example: OVERRIDE
          enum:
          - OVERRIDE
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: "Combined total, Online and offline withdrawal limits at ATM and POS.  \nDaily Limit Combined number of transaction attempts allowed at the ATM and POS.  \nVelocity Support (Maximum number of transactions allowed during the lifespan of the PAN)  \n"
          example: "0"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "200"
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "2000"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "100"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "500"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Amount of same day deposit available for use.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount per MT funding transaction. Money transfer funding | P2P Limits | offline processing.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "400"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "3000"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: POS daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: POS Daily limit for purchase transaction requiring a signature.
          example: "0"
    CardOpenToBuyLimitsResponseV2:
      type: object
      properties:
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds offline for a specific account.
          example: "0"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for an account.
          example: "0"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
    CardVelocityLimitsResponseV2:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time.
          example: "0"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type.
          example: 00:00
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time.
          example: "0"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type.
          example: 00:00
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time.
          example: "0"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type.
          example: 00:00
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time.
          example: "0"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type.
          example: 00:00
    AddPriorCardInfoResponse:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: |
            Populated only when the current card number is replacing one that is no longer used. Some examples are when card numbers are reissued due to fraud and an issuer reissues card numbers under a new BIN.
          example: 400010XXXXXX4000
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-transactional token associated with the prior card number
          example: WUPIL5DQTZGM4000
        priorMemberNumber:
          type: string
          description: |
            Member number associated with the prior card number. If available from the cardholder record, the member number displays, else field is blank.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: |
            Expiration date of the prior card number.
          format: MM/YY
          example: 10/23
    DebitPriorCardInfo:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: |
            Populated only when the current card number is replacing one that is no longer used. Some examples are when card numbers are reissued due to fraud and an issuer reissues card numbers under a new BIN.
          example: "4000100020004000"
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-transactional token associated with the prior card number.
          example: WUPIL5DQTZGM4000
        priorMemberNumber:
          type: string
          description: |
            Member number associated with the prior card number. If available from the cardholder record, the member number displays, else field is blank.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: |
            Expiration date of the prior card number.
          format: MM/YY
          example: 10/23
    DebitPriorCardInfoV2:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: |
            Populated only when the current card number is replacing one that is no longer used. Some examples are when card numbers are reissued due to fraud and an issuer reissues card numbers under a new BIN.
          example: "4000100020004000"
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-transactional token associated with the prior card number.
          example: WUPIL5DQTZGM4000
        priorMemberNumber:
          type: string
          description: |
            Member number associated with the prior card number. If available from the cardholder record, the member number displays, else field is blank.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: |
            Expiration date of the prior card number.
          format: MM/YY
          example: 10/23
    DebitPriorCardInfoTemplateResponse:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: |
            Populated only when the current card number is replacing one that is no longer used. Some examples are when card numbers are reissued due to fraud and an issuer reissues card numbers under a new BIN.
          example: 400010xxxxxx4000
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-transactional token associated with the prior card number
          example: WUPIL5DQTZGM4000
        priorMemberNumber:
          type: string
          description: |
            Member number associated with the prior card number. If available from the cardholder record, the member number displays, else field is blank.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: |
            Expiration date of the prior card number.
          format: MM/YY
          example: 10/23
    DebitPriorCardInfoTemplateResponseV2:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: |
            Populated only when the current card number is replacing one that is no longer used. Some examples are when card numbers are reissued due to fraud and an issuer reissues card numbers under a new BIN.
          example: 400020XXXXXX4000
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-transactional token associated with the prior card number
          example: piUVBJKZGfks4000
        priorMemberNumber:
          type: string
          description: |
            Member number associated with the prior card number. If available from the cardholder record, the member number displays, else field is blank.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: |
            Expiration date of the prior card number.
          format: MM/YY
          example: 10/23
    DemographicSearchRequest:
      title: demographicSearchRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits. Required for debit and credit.
          example: "4000100020003000"
        memberNumber:
          type: string
          description: The member number associated with the card. Required for debit.
          example: "0"
    DemographicSearchRequestV2:
      title: demographicSearchRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
    DemographicSearchRequestV3:
      title: demographicSearchRequestV3
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    DemographicSearchRequestV4:
      title: demographicSearchRequestV4
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    AdditionalInfoSearchRequestV1:
      title: additionalInfoSearchRequestV1
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    AtmPreferencesSearchRequestV1:
      title: atmPreferencesSearchRequestV1
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    DemographicSearchResponse:
      type: object
      properties:
        cardholderDemographics:
          $ref: '#/components/schemas/CardholderDemographics'
    DemographicSearchResponseV2:
      type: object
      properties:
        cardholderDemographics:
          type: array
          items:
            $ref: '#/components/schemas/CardholderDemographicsV2'
    DemographicSearchResponseV3:
      type: object
      properties:
        cardholderDemographics:
          type: array
          items:
            $ref: '#/components/schemas/CardholderDemographicsV3'
    DemographicSearchResponseV4:
      type: object
      properties:
        cardholderDemographics:
          type: array
          items:
            $ref: '#/components/schemas/CardholderDemographicsV4'
    AdditionalInfoSearchResponseV1:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
          example: AAA00
        debitAdditionalInfo:
          $ref: '#/components/schemas/CardholderDebitAdditionalInfoV1'
        creditAdditionalInfo:
          $ref: '#/components/schemas/CardholderCreditAdditionalInfoV1'
    AtmPreferencesSearchResponseV1:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, it is defaulted to 0. Applies to debit cards only.
          format: numeric
          example: "0"
        atmPreferences:
          type: array
          items:
            $ref: '#/components/schemas/AtmPreferencesV3'
    CardsAdditionalInfoUpdateRequest:
      title: CardsAdditionalInfoUpdateRequest
      required:
      - additionalInfo
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder. Required for debit and credit cards.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, it is defaulted to 0. Applies to debit cards only.
          format: numeric
          example: "0"
        additionalInfo:
          $ref: '#/components/schemas/UpdateAdditionalInfo'
    CardsAdditionalInfoUpdateRequestV2:
      title: CardsAdditionalInfoUpdateRequestV2
      required:
      - additionalInfo
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        debitAdditionalInfo:
          $ref: '#/components/schemas/UpdateDebitAdditionalInfoV2'
        creditAdditionalInfo:
          $ref: '#/components/schemas/UpdateCreditAdditionalInfoV2'
    CardsAdditionalInfoUpdateRequestV3:
      title: CardsAdditionalInfoUpdateRequestV3
      required:
      - additionalInfo
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        debitAdditionalInfo:
          $ref: '#/components/schemas/UpdateDebitAdditionalInfoV3'
        creditAdditionalInfo:
          $ref: '#/components/schemas/UpdateCreditAdditionalInfoV3'
    CardsContactUpdateRequest:
      title: CardsContactUpdateRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder. Required for debit and credit cards.
          example: "4000200030004000"
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTcpa'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContactV2'
        preferences:
          $ref: '#/components/schemas/CardholderDemographicsV2Preferences'
    CardsContactUpdateRequestV3:
      title: CardsContactUpdateRequestV3
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTcpaV3'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContactV3'
        preferences:
          $ref: '#/components/schemas/CardholderDemographicsV3Preferences'
    CardholderDemographics:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: 400010xxxxxx3000
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        externalCustomerId:
          type: string
          description: Customer identifier assigned by external client. The externalCustomerId is masked. Applies to credit cards.
          example: xxxxx6789
        additionalInfo:
          $ref: '#/components/schemas/AdditionalInfo'
        address:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsCardsAddress'
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/Tcpa'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContact'
        atmPreferences:
          type: array
          items:
            $ref: '#/components/schemas/AtmPreferences'
    CardholderDemographicsV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder.
          example: 400020XXXXXX4000
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        externalCustomerId:
          type: string
          description: Customer identifier assigned by external client. The externalCustomerId is masked. Applies to credit cards.
          example: xxxxx6789
        additionalInfo:
          $ref: '#/components/schemas/AdditionalInfo'
        address:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsCardsAddress'
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/Tcpa'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContactV2'
        preferences:
          $ref: '#/components/schemas/CardholderDemographicsV2Preferences'
        atmPreferences:
          type: array
          items:
            $ref: '#/components/schemas/AtmPreferences'
    CardholderDemographicsV3:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/TcpaV3'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContactV3'
        preferences:
          $ref: '#/components/schemas/CardholderDemographicsV3Preferences'
        debitAdditionalInfo:
          $ref: '#/components/schemas/DebitAdditionalInfoV3'
        debitCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsDebitCardsAddressV3'
        atmPreferences:
          type: array
          items:
            $ref: '#/components/schemas/AtmPreferencesV3'
        creditAdditionalInfo:
          $ref: '#/components/schemas/CreditAdditionalInfoV3'
        creditCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsCreditCardsAddressV3'
    CardholderDemographicsV4:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/TcpaV4'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContactV4'
        preferences:
          $ref: '#/components/schemas/CardholderDemographicsV4Preferences'
        debitCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsDebitCardsAddressV4'
        creditCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsCreditCardsAddressV4'
    UpdateTcpa:
      type: object
      properties:
        tcpaType:
          type: string
          description: Indicates the type of Telephone Consumer Protection Act (TCPA) protection to be updated. Applies to debit and credit cards.
          enum:
          - ENFACT
          - STEPUP
        mediaType:
          type: string
          description: Media through which user can be contacted.
          example: VOICE
          enum:
          - VOICE
          - TEXT
        revoked:
          type: boolean
          description: Status of TCPA media type.
          example: true
    UpdateTcpaV3:
      type: object
      properties:
        tcpaType:
          type: string
          description: Indicates the type of Telephone Consumer Protection Act (TCPA) protection to be updated. Applies to debit and credit cards.
          example: ENFACT
          enum:
          - ENFACT
          - STEPUP
        mediaType:
          type: string
          description: Media through which user can be contact.
          example: VOICE
          enum:
          - VOICE
          - TEXT
        revoked:
          type: boolean
          description: Status of TCPA media type.
          example: true
    CardsAddress:
      required:
      - addressLine1
      - addressType
      - city
      - countryCode
      type: object
      properties:
        addressType:
          type: string
          description: |
            Type of address.
            - For Debit cards- TYPES 'PRIMARY' and/or 'ALTERNATE' are applicable.
            - For Credit cards- Type 'BILLING' is applicable for any of the cardholders- primary, secondary and authorized. Types 'PLASTIC', 'STATEMENT' and 'LETTER' apply only to the primary cardholder.
          enum:
          - PRIMARY
          - ALTERNATE
          - BILLING
          - PLASTIC
          - STATEMENT
          - LETTERS
        addressLine1:
          maxLength: 34
          type: string
          description: Line1 of address. Applies  for debit and credit cards. Max Length for Debit-33 and for Credit-34.
          example: 123 Any Street
        addressLine2:
          maxLength: 34
          type: string
          description: Line2 of address. Max Length for Debit-33 and for Credit-34.
          example: 123 Any Lane
        addressLine3:
          maxLength: 34
          type: string
          description: Line 3 for Address. Applies to credit cards only.
          example: 123 Any Lane
        addressLine4:
          maxLength: 34
          type: string
          description: Line 4 for Address. Applies to credit cards only.
          example: 123 Any Lane
        city:
          maxLength: 26
          type: string
          description: Name of city. Max Length for Debit is 21 and for Credit the max length is 26.
          example: Newark
        stateCode:
          maxLength: 2
          type: string
          description: Indicates the state code, per the ISO 3166 standards. This field is mandatory if the country is USA.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        countryCode:
          maxLength: 3
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        isCardMailer:
          type: boolean
          description: Indicates if a given address will be used for Card Mailer on all future Card Orders. Applicable and mandatory for debit cards only.
        isPinMailer:
          type: boolean
          description: Indicates if the given address will be used for Pin Mailer on all future Card Orders. Applicable and mandatory for debit cards only.
        addressCategoryCode:
          type: string
          description: Indicates the category of an address PERMANENT, REPEATING, and TEMPORARY. REPEATING address used for recurring and specific time periods Temporary address used for a single, short period of time. Applies to credit cards only.
          enum:
          - PERMANENT
          - REPEATING
          - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastics. Applies to credit cards only.
          format: date
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastics. Applies to credit cards only.
          format: date
    DebitCardsAddressV2:
      required:
      - addressLine1
      - addressType
      - city
      - country
      type: object
      properties:
        addressType:
          type: string
          description: |
            Type of address.
            For Debit cards- TYPES 'PRIMARY' and/or 'ALTERNATE' are applicable.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        addressLine1:
          maxLength: 33
          type: string
          description: |
            First address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Street
        addressLine2:
          maxLength: 33
          type: string
          description: |
            Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Lane
        city:
          maxLength: 21
          type: string
          description: |
            City of the cardholder's primary address. Maximum 21 characters.
          example: Newark
        stateCode:
          maxLength: 2
          type: string
          description: |
            Required, if U.S. address. State code of the cardholder's primary address.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        country:
          maxLength: 3
          type: string
          description: |
            Country associated with the cardholder's primary address.
          example: USA
        cardMailerIndicator:
          type: boolean
          description: |
            Indicates the card mailer for all card orders are sent to the primary address.
        pinMailerIndicator:
          type: boolean
          description: |
            Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
    CreditCardsAddressV2:
      type: object
      properties:
        addressType:
          type: string
          description: "The type of address. \nType 'BILLING' is applicable for any of the cardholders. - primary, secondary and authorized. \nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          enum:
          - BILLING
          - PLASTIC
          - STATEMENT
          - LETTERS
        addressLine1:
          maxLength: 33
          type: string
          description: Line1 of address.
          example: 123 Any Street
        addressLine2:
          maxLength: 33
          type: string
          description: Line2 of address.
          example: 123 Any Lane
        addressLine3:
          maxLength: 33
          type: string
          description: Line3 for Address.
          example: 123 Any Lane
        addressLine4:
          maxLength: 33
          type: string
          description: Line4 for Address.
          example: 123 Any Lane
        city:
          maxLength: 21
          type: string
          description: Name of city.
          example: Newark
        stateCode:
          maxLength: 2
          type: string
          description: Indicates the state code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          maxLength: 11
          minLength: 1
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        country:
          maxLength: 3
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        categoryCode:
          type: string
          description: "Indicate the category of an address.  \n- REPEATING - address used for recurring and specific time periods\n- TEMPORARY - address used for a single, short period of time.\n- PERMANENT - permanent address \nexample: PERMANENT\n"
          enum:
          - PERMANENT
          - REPEATING
          - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastic cards.
          format: date
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastic cards.
          format: date
    DebitCardsAddressV3:
      required:
      - addressLine1
      - addressType
      - city
      - countryCode
      type: object
      properties:
        addressType:
          type: string
          description: |
            Type of address.
            For Debit cards- TYPES 'PRIMARY' and/or 'ALTERNATE' are applicable.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        addressLine1:
          maxLength: 33
          type: string
          description: |
            First address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Street
        addressLine2:
          maxLength: 33
          type: string
          description: |
            Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Lane
        city:
          maxLength: 21
          type: string
          description: |
            City of the cardholder's primary address. Maximum 21 characters.
          example: Newark
        stateCode:
          maxLength: 2
          type: string
          description: |
            Required, if U.S. address. State code of the cardholder's primary address.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        countryCode:
          maxLength: 3
          type: string
          description: |
            Country associated with the cardholder's primary address.
          example: USA
        cardMailerIndicator:
          type: boolean
          description: |
            Indicates the card mailer for all card orders are sent to the primary address.
        pinMailerIndicator:
          type: boolean
          description: |
            Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
    CreditCardsAddressV3:
      type: object
      properties:
        addressType:
          type: string
          description: "The type of address. \nType 'BILLING' is applicable for any of the cardholders. - primary, secondary and authorized. \nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          enum:
          - BILLING
          - PLASTIC
          - STATEMENT
          - LETTERS
        addressLine1:
          maxLength: 33
          type: string
          description: Line1 of address.
          example: 123 Any Street
        addressLine2:
          maxLength: 33
          type: string
          description: Line2 of address.
          example: 123 Any Lane
        addressLine3:
          maxLength: 33
          type: string
          description: Line3 for Address.
          example: 123 Any Lane
        addressLine4:
          maxLength: 33
          type: string
          description: Line4 for Address.
          example: 123 Any Lane
        city:
          maxLength: 21
          type: string
          description: Name of city.
          example: Newark
        stateCode:
          maxLength: 2
          type: string
          description: Indicates the state code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          maxLength: 11
          minLength: 1
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        countryCode:
          maxLength: 3
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        categoryCode:
          type: string
          description: "Indicate the category of an address.  \n- REPEATING - address used for recurring and specific time periods\n- TEMPORARY - address used for a single, short period of time.\n- PERMANENT - permanent address \nexample: PERMANENT\n"
          enum:
          - PERMANENT
          - REPEATING
          - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastic cards.
          format: date
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastic cards.
          format: date
    UpdateAdditionalInfo:
      type: object
      properties:
        prefix:
          maxLength: 5
          type: string
          description: Professional or honorary title associated with the primary customer. Allow alpha, period or spaces. Applies to credit cards only.
          example: Dr.
        cardholderName:
          maxLength: 26
          type: string
          description: |
            New cardholder name to be updated on the record.
            - For Debit cards- The 'cardholderName' and the 'nameSuffix' fields, together cannot exceed the max length of 26.
            - For Credit cards- The 'prefix' and the 'cardholderName' fields, together cannot exceed the max length of 26.
          example: Doe, Jessie H
        association:
          type: string
          description: Type of association of the account. This field is applicable and mandatory for credit cards only.
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        vip:
          type: boolean
          description: Indicates if the primary customer is a very important person. Applies to credit cards only.
        gender:
          type: string
          description: Gender of the cardholder. Applies to credit cards only.
          enum:
          - NOT_SPECIFIED
          - FEMALE
          - MALE
          - COMPANY
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        employeeCode:
          type: boolean
          description: Indicates if the customer is an employee. Applies to credit cards only.
        motherMaidenName:
          maxLength: 40
          type: string
          description: Mother's maiden name.
          example: Smith
        ssnOrTaxId:
          maxLength: 20
          type: string
          description: Indicates the social security number or tax id number. Max length for SSN is 9 and for Tax ID the max length is 20.
          example: "5678"
        ein:
          maxLength: 10
          minLength: 9
          type: string
          description: Indicates the employer identification number. Applies to credit cards only.
          example: "123005678"
        dnaPersonId:
          maxLength: 9
          type: string
          description: DNA number of the Customer. Applies to credit cards only.
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased. Applies to credit cards only.
        memoLine1:
          maxLength: 250
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only.
          example: This customer is hard of hearing.
        memoLine2:
          maxLength: 250
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only.
          example: Customer requested name change, updating contact information on account.
        verificationText:
          maxLength: 30
          type: string
          description: Free-form field to enter verification data as requested by the primary cardholder for identification. Applies to debit cards only.
          example: Driver's license
        employerName:
          maxLength: 26
          type: string
          description: Employer Name. Applies to credit cards only.
          example: Fiserv
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Jesse Doe
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for secondary user. Applies to credit cards only.
          example: false
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for secondary user. Applies to credit cards only.
          example: false
        specialHandling:
          type: string
          description: |
            Sets delivery options for the plastic card.  NONE - No specific options selected, INSTANT_ISSUANCE - Instant (digital) delivery, or RUSH_PLASTIC - Mail delivery normal or overnight. Applies to credit cards only.
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        updateNameDetails:
          type: array
          items:
            $ref: '#/components/schemas/UpdateNameDetails'
      description: "Depending on the type of card, whether debit or credit, at least one of the below fields are required to make the update.     \n"
    UpdateDebitAdditionalInfoV2:
      type: object
      properties:
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        dateOfBirth:
          type: string
          description: |
            Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        motherMaidenName:
          type: string
          description: Mother's maiden name. The maximum length is 40.
          example: Smith
        taxIdOrSsn:
          type: string
          description: |
            Indicates the social security number or tax id number. Max length for SSN- 9 and for Tax ID-20. Formats listed in the example.
          example: "123005678"
        verificationText:
          type: string
          description: Free-form field to enter verification data as requested by the primary cardholder for identification.
          example: My name is John
        callerId:
          type: string
          description: Phone number to verify caller as the cardholder. Used for verification. The max is 10 numeric. The max length is 26.
          example: "1005550001"
        updateNameDetails:
          type: array
          items:
            $ref: '#/components/schemas/UpdateDebitNameDetailsV2'
    UpdateCreditAdditionalInfoV2:
      type: object
      properties:
        prefix:
          type: string
          description: Professional or honorary title associated with the primary customer. Allow alpha, period, or spaces. The max length is 5.
          example: DR.
        cardholderName:
          type: string
          description: |
            Name of the cardholder.
            The cardholderName plus the prefix fields together cannot exceed 26 characters.
            The max length is 26.
          example: Doe, John H
        association:
          type: string
          description: Type of association of the account.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        vip:
          type: boolean
          description: Indicate if the primary customer is a very important person.
        gender:
          type: string
          description: Gender of the cardholder.
          example: MALE
          enum:
          - NOT_SPECIFIED
          - FEMALE
          - MALE
          - COMPANY
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        employeeCode:
          type: boolean
          description: Indicate if the customer is an employee.
          example: true
        motherMaidenName:
          type: string
          description: Mother's maiden name. The max length is 40
          example: Smith
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder. The maximum length is 20.
          example: "123005678"
        ein:
          type: string
          description: Indicates the employer identification number. Formats listed in example. Applies to credit cards only. The minimum length is 9 and maximum length is 9
          example: "123005678"
        dnaPersonId:
          type: string
          description: DNA number of Customer. The max length is 10
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased.
          example: false
        memoLine1:
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only. The max length is 250.
          example: This is an example added to a cardholder record
        memoLine2:
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only. The max length is 250.
          example: Customer requested name change, updating contact information on account
        employerName:
          type: string
          description: Employer Name. The max length is 26.
          example: Fiserv
        personalizedEmbossingText:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for secondary user.
          example: false
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for secondary user.
          example: false
        specialHandling:
          type: string
          description: "Sets delivery options for the plastic card.  \n- NONE - No specific options selected  \n- INSTANT_ISSUANCE - Instant (digital) delivery  \n- RUSH_PLASTIC - Mail delivery normal or overnight.  \nApplies to credit cards only.\n"
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
    UpdateDebitAdditionalInfoV3:
      type: object
      properties:
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        memberSinceDate:
          type: string
          description: |
            Month and year when the card record was added. This date may or may not correspond to the open date of the card record.
          format: MM/YY
          example: 03/22
        dateOfBirth:
          type: string
          description: |
            Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        motherMaidenName:
          type: string
          description: Mother's maiden name. The maximum length is 40.
          example: Smith
        taxIdOrSsn:
          type: string
          description: |
            Indicates the social security number or tax id number. Max length for SSN- 9 and for Tax ID-20. Formats listed in the example.
          example: "123005678"
        verificationText:
          type: string
          description: Free-form field to enter verification data as requested by the primary cardholder for identification.
          example: My name is John
        callerId:
          type: string
          description: Phone number to verify caller as the cardholder. Used for verification. The max is 10 numeric. The max length is 26.
          example: "1005550001"
        updateNameDetails:
          type: array
          items:
            $ref: '#/components/schemas/UpdateDebitNameDetailsV3'
    UpdateCreditAdditionalInfoV3:
      type: object
      properties:
        prefix:
          type: string
          description: Professional or honorary title associated with the primary customer. Allow alpha, period, or spaces. The max length is 5.
          example: DR.
        cardholderName:
          type: string
          description: |
            Name of the cardholder.
            The cardholderName plus the prefix fields together cannot exceed 26 characters.
            The max length is 26.
          example: Doe, John H
        association:
          type: string
          description: Type of association of the account.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        vip:
          type: boolean
          description: Indicate if the primary customer is a very important person.
        gender:
          type: string
          description: Gender of the cardholder.
          example: MALE
          enum:
          - NOT_SPECIFIED
          - FEMALE
          - MALE
          - COMPANY
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        employeeCode:
          type: boolean
          description: Indicate if the customer is an employee.
          example: true
        motherMaidenName:
          type: string
          description: Mother's maiden name. The max length is 40
          example: Smith
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder. The maximum length is 20.
          example: "123005678"
        ein:
          type: string
          description: Indicates the employer identification number. Formats listed in example. Applies to credit cards only. The minimum length is 9 and maximum length is 9
          example: "123005678"
        dnaPersonId:
          type: string
          description: DNA number of Customer. The max length is 10
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased.
          example: false
        memoLine1:
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only. The max length is 250.
          example: This is an example added to a cardholder record
        memoLine2:
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only. The max length is 250.
          example: Customer requested name change, updating contact information on account
        employerName:
          type: string
          description: Employer Name. The max length is 26.
          example: Fiserv
        personalizedEmbossingText:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for secondary user.
          example: false
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for secondary user.
          example: false
        specialHandling:
          type: string
          description: "Sets delivery options for the plastic card.  \n- NONE - No specific options selected  \n- INSTANT_ISSUANCE - Instant (digital) delivery  \n- RUSH_PLASTIC - Mail delivery normal or overnight.  \nApplies to credit cards only.\n"
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        memberSinceDate:
          type: string
          description: |
            Month and year when the card record was added. This date may or may not correspond to the open date of the card record.
          format: MM/YY
          example: 03/22
    AdditionalInfo:
      type: object
      properties:
        prefix:
          type: string
          description: Professional or honorary title associated with the primary customer. Allows a period and spaces. Applies to debit and credit cards.
          example: Dr.
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        association:
          type: string
          description: Type of association.  Applies to credit cards only.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        vip:
          type: boolean
          description: Indicates if the primary customer is a very important person.  Applies to credit cards only.
        gender:
          type: string
          description: Gender of the primary card/account holder.  Applies to credit cards only.
          example: NOT_SPECIFIED
          enum:
          - NOT_SPECIFIED
          - FEMALE
          - MALE
          - COMPANY
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
        employeeCode:
          type: boolean
          description: Indicates if the customer is an employee. Max length 9. Applies to credit cards only.
          example: false
        motherMaidenName:
          type: string
          description: Mother's maiden name. Max length 40. Applies to debit and credit cards.
          example: Smith
        empId:
          type: string
          description: Indicates the employer identification number for the primary account owner. Applies to credit cards only.
          example: "1230045678"
        ssnOrTaxid:
          type: string
          description: Indicates the Social Security Number or the tax identification number. This field is masked.
          example: xxxxx5678
        ein:
          type: string
          description: Indicates IRS federal EIN number. This field is masked.
          example: xxxxx5678
        dnaPersonId:
          type: string
          description: DNA number of Customer.
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased. Applies to credit cards only.
        memoLine1:
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only.
          example: This customer is hard of hearing.
        memoLine2:
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only.
          example: Customer called wife is deceased sending information to remove wife from account.
        verificationText:
          type: string
          description: Free-form field used to enter verification data as requested by the primary cardholder for identification.
          example: Driver's license
        verificationZipCode:
          type: string
          description: Zip Code used for verification of the caller as cardholder. The max length is 9.
          example: "12345"
        callerId:
          type: string
          description: Phone number to verify caller as the cardholder. Used for verification. The max is 10 numeric.
          example: "1495040"
        employerName:
          type: string
          description: Employer Name. Applies to credit cards only.
          example: Fiserv
        personalizedEmbossingText:
          type: string
          description: Personalized Embossing/My Card Creation ID. Applies to credit cards only.
          example: Jesse Doe
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for Secondary user. Applies to credit cards only.
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for Secondary user. Applies to credit cards only.
        specialHandling:
          type: string
          description: "Sets delivery options for the plastic card.  \n- NONE - No specific options selected.  \n- INSTANT_ISSUANCE - Instant (digital) delivery.  \n- RUSH_PLASTIC - Mail delivery normal or overnight.  \n"
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        nameDetails:
          type: array
          items:
            $ref: '#/components/schemas/NameDetails'
    DebitAdditionalInfoV3:
      type: object
      properties:
        accountNumber:
          type: string
          description: |
            Identifies account of the cardholder.
          example: "123456789"
        dateOfBirth:
          type: string
          description: |
            Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        motherMaidenName:
          type: string
          description: Mother's maiden name.
          example: Smith
        taxIdOrSsn:
          type: string
          description: |
            Indicates the social security number or tax id number. Max length for SSN- 9 and for Tax ID-20. Formats listed in the example.
          example: xxxxx5678
        verificationText:
          type: string
          description: Free-form field to enter verification data as requested by the primary cardholder for identification.
          example: Driver's license
        callerId:
          type: string
          description: Phone number to verify caller as the cardholder. Used for verification. The maximum length is 10 numeric.
          example: "1005550001"
        updateNameDetails:
          type: array
          items:
            $ref: '#/components/schemas/NameDetailsV3'
    CreditAdditionalInfoV3:
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        externalCustomerId:
          type: string
          description: Customer identifier assigned by external client. The externalCustomerId is masked. Applies to credit cards.
          example: xxxxx6789
        prefix:
          type: string
          description: Professional or honorary title associated with the primary customer. Allow alpha, period, or spaces.
          example: DR
        cardholderName:
          type: string
          description: |
            Name of the cardholder.
            The cardholderName plus the prefix fields together cannot exceed 26 characters.
          example: Doe, John H
        association:
          type: string
          description: Type of association of the account.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        vip:
          type: boolean
          description: Indicate if the primary customer is a very important person.
        gender:
          type: string
          description: Gender of the cardholder.
          example: NOT_SPECIFIED
          enum:
          - NOT_SPECIFIED
          - FEMALE
          - MALE
          - COMPANY
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder.
          format: date
        employeeCode:
          type: boolean
          description: Indicate if the customer is an employee.
          example: true
        motherMaidenName:
          type: string
          description: Mother's maiden name.
          example: Smith
        empId:
          type: string
          description: Indicates the employer identification number for the primary account owner. Applies to credit cards only.
          example: "123005678"
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: xxxxx5678
        ein:
          type: string
          description: Indicates IRS federal EIN number. This field is masked.
          example: xxxxx5678
        dnaPersonId:
          type: string
          description: DNA number of Customer.
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased.
          example: false
        memoLine1:
          maxLength: 250
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only.
          example: This is an example added to a cardholder record.
        memoLine2:
          maxLength: 250
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only.
          example: Customer requested name change, updating contact information on account.
        employerName:
          type: string
          description: Employer Name.
          example: Fiserv
        personalizedEmbossingText:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for secondary user.
          example: false
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for secondary user.
          example: false
        specialHandling:
          type: string
          description: "Sets delivery options for the plastic card.  \nNONE - No specific options selected  \nINSTANT_ISSUANCE - Instant (digital) delivery  \nRUSH_PLASTIC - Mail delivery normal or overnight.  \nApplies to credit cards only.\n"
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
    CardholderDebitAdditionalInfoV1:
      type: object
      properties:
        accountNumber:
          type: string
          description: |
            Identifies account of the cardholder.
          example: "123456789"
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        memberSinceDate:
          type: string
          description: |
            Month and year when the card record was added. This date may or may not correspond to the open date of the card record.
          format: MM/YY
          example: 03/22
        dateOfBirth:
          type: string
          description: |
            Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        motherMaidenName:
          type: string
          description: Mother's maiden name.
          example: Smith
        taxIdOrSsn:
          type: string
          description: |
            Indicates the social security number or tax id number. Max length for SSN- 9 and for Tax ID-20. Formats listed in the example.
          example: xxxxx5678
        verificationText:
          type: string
          description: Free-form field to enter verification data as requested by the primary cardholder for identification.
          example: Driver's license
        callerId:
          type: string
          description: Phone number to verify caller as the cardholder. Used for verification. The maximum length is 10 numeric.
          example: "1005550001"
        updateNameDetails:
          type: array
          items:
            $ref: '#/components/schemas/NameDetailsV3'
    CardholderCreditAdditionalInfoV1:
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        externalCustomerId:
          type: string
          description: Customer identifier assigned by external client. The externalCustomerId is masked. Applies to credit cards.
          example: xxxxx6789
        prefix:
          type: string
          description: Professional or honorary title associated with the primary customer. Allow alpha, period, or spaces.
          example: DR
        cardholderName:
          type: string
          description: |
            Name of the cardholder.
            The cardholderName plus the prefix fields together cannot exceed 26 characters.
          example: Doe, John H
        association:
          type: string
          description: Type of association of the account.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        vip:
          type: boolean
          description: Indicate if the primary customer is a very important person.
        gender:
          type: string
          description: Gender of the cardholder.
          example: NOT_SPECIFIED
          enum:
          - NOT_SPECIFIED
          - FEMALE
          - MALE
          - COMPANY
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder.
          format: date
        employeeCode:
          type: boolean
          description: Indicate if the customer is an employee.
          example: true
        motherMaidenName:
          type: string
          description: Mother's maiden name.
          example: Smith
        empId:
          type: string
          description: Indicates the employer identification number for the primary account owner. Applies to credit cards only.
          example: "123005678"
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: xxxxx5678
        ein:
          type: string
          description: Indicates IRS federal EIN number. This field is masked.
          example: xxxxx5678
        dnaPersonId:
          type: string
          description: DNA number of Customer.
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased.
          example: false
        memoLine1:
          maxLength: 250
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only.
          example: This is an example added to a cardholder record.
        memoLine2:
          maxLength: 250
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only.
          example: Customer requested name change, updating contact information on account.
        employerName:
          type: string
          description: Employer Name.
          example: Fiserv
        personalizedEmbossingText:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for secondary user.
          example: false
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for secondary user.
          example: false
        specialHandling:
          type: string
          description: "Sets delivery options for the plastic card.  \nNONE - No specific options selected  \nINSTANT_ISSUANCE - Instant (digital) delivery  \nRUSH_PLASTIC - Mail delivery normal or overnight.  \nApplies to credit cards only.\n"
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        memberSinceDate:
          type: string
          description: |
            Month and year when the card record was added. This date may or may not correspond to the open date of the card record.
          format: MM/YY
          example: 03/22
    UpdateNameDetails:
      type: object
      properties:
        nameSuffix:
          type: string
          description: Indicates the cardholder suffix associated with the name. The max length is 6. Applies to debit cards only.
          example: Sr.
        priorCardholderName:
          maxLength: 26
          type: string
          description: Current cardholder name on the record, used for matching purposes. Applies to Debit cards only.
          example: Doe, Jessie H
        photoId:
          type: string
          description: If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          maxLength: 5
          type: string
          description: If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceded by 'PM'. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
      description: "This section is required only when we are trying to update the name details of card holders associated to a card.\npriorCardholderName is a required field to update name details which includes cardholderName, nameSuffix, plasticId and photoId, for each and every card holder of the card.      \n"
    UpdateDebitNameDetailsV2:
      type: object
      properties:
        cardholderName:
          type: string
          description: |
            Name of the cardholder. Include this field and value only when you want to change the cardholder name to this value.
            The cardholderName plus the nameSuffix (or Suffix) fields together cannot exceed 26 characters  The max length 26.
          example: Doe, John H
        priorCardholderName:
          type: string
          description: Prior cardholder name. Required.
          example: Doe, Alex M
        nameSuffix:
          type: string
          description: Cardholder suffix associated with the name. The maximum length is 6.
          example: MD
        additionalEmbossLine:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
      description: |
        Include this section only when updating the name details of card holders associated with a card. priorCardholderName is then a required field in every case.
    UpdateDebitNameDetailsV3:
      type: object
      properties:
        cardholderName:
          type: string
          description: |
            Name of the cardholder. Include this field and value only when you want to change the cardholder name to this value.
            The cardholderName plus the nameSuffix (or Suffix) fields together cannot exceed 26 characters  The max length 26.
          example: Doe, John H
        priorCardholderName:
          type: string
          description: Prior cardholder name. Required.
          example: Doe, Alex M
        nameSuffix:
          type: string
          description: Cardholder suffix associated with the name. The maximum length is 6.
          example: MD
        additionalEmbossLine:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
      description: |
        Include this section only when updating the name details of card holders associated with a card. priorCardholderName is then a required field in every case.
    NameDetails:
      type: object
      properties:
        nameSuffix:
          type: string
          description: Indicates the cardholder suffix associated with the name.
          example: Sr.
        priorCardholderName:
          maxLength: 26
          type: string
          description: Prior cardholder name. Required if value was entered in the cardholderName. Applies to Debit cards only.
          example: Doe, Jessie H
        photoId:
          type: string
          description: Indicates the photo identifier.
          example: EFGH
        plasticId:
          type: string
          description: Indicates the plastic identifier used in card collection plastics in place of custom stock.
          example: PM001
    NameDetailsV3:
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: |
            Name of the cardholder. Include this field and value only when you want to change the cardholder name to this value.
            The cardholderName plus the nameSuffix (or Suffix) fields together cannot exceed 26 characters  The max length 26.
          example: Doe, John H
        priorCardholderName:
          maxLength: 26
          type: string
          description: Prior cardholder name. Required if value was entered in the cardholderName.
          example: Doe, Alex M
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
          example: MD
        additionalEmbossLine:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
    DemographicsCardsAddress:
      type: object
      properties:
        addressType:
          type: string
          description: "Indicates the type of address. \nThe following values are applicable for Debit - \n- PRIMARY\n- ALTERNATE\n- PRIOR \nThe following values are application for Credit - \n- ALTERNATE\n- BILLING\n- PLASTIC\n- STATEMENT\n- LETTER\n- PRIOR\n- REFERENCE\n- PRIOR_LETTERS\n- PRIOR_PLASTICS\n- PRIOR_STATEMENT\n- PRIOR_BILLING\n- PRIOR_REFERENCE\n"
          enum:
          - PRIMARY
          - ALTERNATE
          - BILLING
          - PLASTIC
          - STATEMENT
          - LETTER
          - PRIOR
          - REFERENCE
          - PRIOR_LETTERS
          - PRIOR_PLASTICS
          - PRIOR_STATEMENTS
          - PRIOR_BILLING
          - PRIOR_REFERENCE
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: 123 Any Lane
        addressLine3:
          type: string
          description: Line 3 of address. Applies only to credit cards.
          example: 123 Any Lane
        addressLine4:
          type: string
          description: Line 4 of address. Applies only to credit cards.
          example: 123 Any Lane
        city:
          type: string
          description: Name of city.
          example: Newark
        stateCode:
          type: string
          description: State code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          type: string
          description: ZIP code or ZIP+4 code.
          example: "12345"
        countryCode:
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        isCardMailer:
          type: boolean
          description: Indicates that given address is used for Card Mailer on all future Card Orders. Applies to debit cards only.
        isPinMailer:
          type: boolean
          description: Indicates that given address is used for PIN Mailer on all future Card Orders. Applies to debit cards only.
        addressCategoryCode:
          type: string
          description: Indicates the category of an address. REPEATING address means this address is used for recurring with specific time periods. Applies to credit cards only.
          enum:
          - PERMANENT
          - REPEATING
          - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastic cards. Applies to credit cards only.
          format: date
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastic cards. Applies to credit cards only.
          format: date
    DemographicsDebitCardsAddressV3:
      type: object
      properties:
        addressType:
          type: string
          description: |
            Type of address.
            For Debit cards- TYPES 'PRIMARY' and/or 'ALTERNATE' are applicable.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: 123 Any Lane
        city:
          type: string
          description: Name of city.
          example: Newark
        stateCode:
          type: string
          description: State code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        country:
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        cardMailerIndicator:
          type: boolean
          description: Indicates the card mailer for all card orders are sent to the primary address.
        pinMailerIndicator:
          type: boolean
          description: Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
    DemographicsCreditCardsAddressV3:
      type: object
      properties:
        addressType:
          type: string
          description: "The type of address. \nType 'BILLING' is applicable for any of the cardholders (primary, secondary and authorized). \nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          enum:
          - BILLING
          - PLASTIC
          - STATEMENT
          - LETTERS
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: 123 Any Lane
        addressLine3:
          type: string
          description: Line 3 of address.
          example: 123 Any Lane
        addressLine4:
          type: string
          description: Line 4 of address.
          example: 123 Any Lane
        city:
          type: string
          description: Name of city.
          example: Newark
        stateCode:
          type: string
          description: Indicates the state code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        country:
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        categoryCode:
          type: string
          description: "Indicate the category of an address.  \n- REPEATING - address used for recurring and specific time periods.\n- TEMPORARY - address used for a single, short period of time.\n- PERMANENT - permanent address.\n"
          example: PERMANENT
          enum:
          - PERMANENT
          - REPEATING
          - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastic cards.
          format: date
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastic cards.
          format: date
    DemographicsDebitCardsAddressV4:
      type: object
      properties:
        addressType:
          type: string
          description: |
            Type of address.
            For Debit cards- TYPES 'PRIMARY' and/or 'ALTERNATE' are applicable.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: 123 Any Lane
        city:
          type: string
          description: Name of city.
          example: Newark
        stateCode:
          type: string
          description: State code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        countryCode:
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        cardMailerIndicator:
          type: boolean
          description: Indicates the card mailer for all card orders are sent to the primary address.
        pinMailerIndicator:
          type: boolean
          description: Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
    DemographicsCreditCardsAddressV4:
      type: object
      properties:
        addressType:
          type: string
          description: "The type of address. \nType 'BILLING' is applicable for any of the cardholders (primary, secondary and authorized). \nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          enum:
          - BILLING
          - PLASTIC
          - STATEMENT
          - LETTERS
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: 123 Any Lane
        addressLine3:
          type: string
          description: Line 3 of address.
          example: 123 Any Lane
        addressLine4:
          type: string
          description: Line 4 of address.
          example: 123 Any Lane
        city:
          type: string
          description: Name of city.
          example: Newark
        stateCode:
          type: string
          description: Indicates the state code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        countryCode:
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        categoryCode:
          type: string
          description: "Indicate the category of an address.  \n- REPEATING - address used for recurring and specific time periods.\n- TEMPORARY - address used for a single, short period of time.\n- PERMANENT - permanent address.\n"
          example: PERMANENT
          enum:
          - PERMANENT
          - REPEATING
          - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastic cards.
          format: date
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastic cards.
          format: date
    AtmPreferences:
      type: object
      properties:
        preferredLanguageCode:
          type: string
          description: The ATM language preference.
          enum:
          - NONE
          - ENGLISH
          - SPANISH
        preferredAmount:
          type: number
          description: Preferred ATM fast cash amount. Amount must be in increments of 20.
          example: 240
        preferredAccount:
          type: string
          description: ATM fast cash withdrawal account preference.
          enum:
          - NONE
          - CHECKING
          - SAVINGS
        preferredReceiptOption:
          type: string
          description: ATM fast cash withdrawal receipt preference option.
          enum:
          - NONE
          - ALWAYS
          - ASK_ME
          - NEVER
        terminalOwnerId:
          type: string
          description: Indicates the ATM Terminal ID or UserID that updated the ATM preferences.
          example: USER01
        sourceType:
          type: string
          description: Source of update. An "A" indicates updated at ATM; "C" indicates update by user.
          example: A
          enum:
          - A
          - C
        action:
          type: string
          description: Action taken to add or update the ATM preferences. ATM preferences can only be added at the ATM.
          example: UPDATE
          enum:
          - ADD
          - UPDATE
        actionDateTime:
          type: string
          description: Date and time the cardholder ATM preferences were added or updated.
          format: date-time
        updatedBy:
          type: string
          description: ATM Terminal ID or UserID that last added or updated the ATM preferences.
          example: USER01
    AtmPreferencesV3:
      type: object
      properties:
        languageCode:
          type: string
          description: The ATM language preference.
          example: ENGLISH
          enum:
          - NONE
          - ENGLISH
          - SPANISH
        amount:
          type: number
          description: Preferred ATM fast cash amount.
          example: 240
        accountType:
          type: string
          description: ATM fast cash withdrawal account preference.
          example: CHECKING
          enum:
          - NONE
          - CHECKING
          - SAVINGS
        receiptOption:
          type: string
          description: ATM fast cash withdrawal receipt preference option.
          example: ASK_ME
          enum:
          - NONE
          - ALWAYS
          - ASK_ME
          - NEVER
        terminalOwnerId:
          type: string
          description: Indicates the ATM Terminal ID or UserID that updated the ATM preferences.
          example: USER01
        sourceType:
          type: string
          description: Source of update. An "A" indicates updated at ATM; "C" indicates update by user.
          example: A
          enum:
          - A
          - C
        action:
          type: string
          description: Action taken to add or update the ATM preferences. ATM preferences can only be added at the ATM.
          example: UPDATE
          enum:
          - ADD
          - UPDATE
        actionDateTime:
          type: string
          description: Date and time the cardholder ATM preferences were added or updated.
          format: date-time
        updatedBy:
          type: string
          description: ATM Terminal ID or UserID that last added or updated the ATM preferences.
          example: USER01
    AtmPreferencesUpdateRequest:
      title: AtmPreferenceUpdateRequest
      required:
      - atmPreferences
      - cardNumber
      - cardType
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number. Required for debit cards only.
          example: "4000100020003000"
        atmPreferences:
          $ref: '#/components/schemas/UpdateAtmPreferences'
    AtmPreferencesUpdateRequestV2:
      title: AtmPreferenceUpdateRequestV2
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        atmPreferences:
          $ref: '#/components/schemas/UpdateAtmPreferencesV2'
    AtmPreferencesUpdateRequestV3:
      title: AtmPreferenceUpdateRequestV3
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        atmPreferences:
          $ref: '#/components/schemas/UpdateAtmPreferencesV3'
    UpdateAtmPreferences:
      type: object
      properties:
        preferredLanguageCode:
          type: string
          description: ATM language preference to be updated.
          default: NONE
          enum:
          - NONE
          - ENGLISH
          - SPANISH
        preferredAmount:
          maximum: 980
          minimum: 0
          type: number
          description: ATM preferred fast cash amount to be updated. Amount must be in increments of 20.
          example: 240
        preferredAccount:
          type: string
          description: ATM fast cash withdrawal account to be updated.
          default: NONE
          enum:
          - NONE
          - CHECKING
          - SAVINGS
        preferredReceiptOption:
          type: string
          description: ATM fast cash withdrawal receipt preference option to be updated.
          default: NONE
          enum:
          - NONE
          - ALWAYS
          - ASK_ME
          - NEVER
      description: A user can update the current ATM preferences for a cardholder.
    UpdateAtmPreferencesV2:
      type: object
      properties:
        languageCode:
          type: string
          description: ATM language preference to be updated.
          example: ENGLISH
          enum:
          - NONE
          - ENGLISH
          - SPANISH
        amount:
          maximum: 980
          minimum: 0
          type: number
          description: ATM preferred fast cash amount to be updated. Amount must be in increments of 20.
          example: 240
        accountType:
          type: string
          description: ATM fast cash withdrawal account to be updated.
          example: SAVINGS
          enum:
          - NONE
          - CHECKING
          - SAVINGS
        receiptOption:
          type: string
          description: ATM fast cash withdrawal receipt preference option to be updated.
          example: ASK_ME
          enum:
          - NONE
          - ALWAYS
          - ASK_ME
          - NEVER
    UpdateAtmPreferencesV3:
      type: object
      properties:
        languageCode:
          type: string
          description: ATM language preference to be updated.
          example: ENGLISH
          enum:
          - NONE
          - ENGLISH
          - SPANISH
        amount:
          maximum: 980
          minimum: 0
          type: number
          description: ATM preferred fast cash amount to be updated. Amount must be in increments of 20.
          example: 240
        accountType:
          type: string
          description: ATM fast cash withdrawal account to be updated.
          example: SAVINGS
          enum:
          - NONE
          - CHECKING
          - SAVINGS
        receiptOption:
          type: string
          description: ATM fast cash withdrawal receipt preference option to be updated.
          example: ASK_ME
          enum:
          - NONE
          - ALWAYS
          - ASK_ME
          - NEVER
    NonTransTokenRequest:
      required:
      - cardNumber
      - cardType
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_AND_TOKEN
          default: MASKED_CARD_AND_TOKEN
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    TokenAndCardSearchRequest:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_AND_TOKEN
          default: MASKED_CARD_AND_TOKEN
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
    NonTransTokenResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: "Non-transactional token associated with a card. Non-transactional token associated with a card.\nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19. \n"
          format: alphanumeric
          example: piUVBJKZGfks4000
    TokenAndCardSearchResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: "Non-transactional token associated with a card. Non-transactional token associated with a card.\nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.             \n"
          format: alphanumeric
          example: piUVBJKZGfks4000
    DefaultCardholderLimitsResponse:
      title: DefaultCardholderLimitsResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Masked card number. First 6 and last 4 digits visible.
          example: 400020XXXXXX4000
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    DefaultCardholderLimitsResponseV2:
      title: DefaultCardholderLimitsResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimitsV2'
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimitsV2'
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimitsV2'
    DefaultCardholderLimitsRequest:
      title: DefaultCardholderLimitsRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
    DefaultCardholderLimitsRequestV2:
      title: DefaultCardholderLimitsRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    CardsAddressUpdateRequest:
      title: CardsAddressUpdateRequest
      required:
      - address
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number identifier. Applies and required for debit and credit cards.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, it is defaulted to 0. Applies to debit cards only.
          format: numeric
          example: "0"
        address:
          type: array
          items:
            $ref: '#/components/schemas/CardsAddress'
    CardsAddressUpdateRequestV2:
      title: CardsAddressUpdateRequestV2
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
        debitCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardsAddressV2'
        creditCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/CreditCardsAddressV2'
    CardsAddressUpdateRequestV3:
      title: CardsAddressUpdateRequestV3
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
        debitCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardsAddressV3'
        creditCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/CreditCardsAddressV3'
    CustomVelocityLimits:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time. Applies to debit cards only.
          example: "20"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type. Applies to debit cards only.
          example: "610"
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time. Applies to debit cards only.
          example: "20"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type. Applies to debit cards only.
          example: "610"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type. Applies to debit cards only.
          example: "610"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type. Applies to debit cards only.
          example: "610"
    CustomVelocityLimitsV2:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time. Applies to debit cards only.
          example: "0"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type. Applies to debit cards only.
          example: 00:00
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time. Applies to debit cards only.
          example: "0"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type. Applies to debit cards only.
          example: 00:00
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time. Applies to debit cards only.
          example: "0"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type. Applies to debit cards only.
          example: 00:00
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time. Applies to debit cards only.
          example: "0"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type. Applies to debit cards only.
          example: 00:00
    CustomVelocityLimitsResponseV2:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time. Applies to debit cards only.
          example: "20"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type. Applies to debit cards only.
          example: "610"
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time. Applies to debit cards only.
          example: "20"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type. Applies to debit cards only.
          example: "610"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type. Applies to debit cards only.
          example: "610"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type. Applies to debit cards only.
          example: "610"
    UpdateVelocityLimitRequest:
      title: UpdateVelocityLimitRequest
      required:
      - cardNumber
      - velocityLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    UpdateVelocityLimitRequestV2:
      title: UpdateVelocityLimitRequestV2
      required:
      - velocityLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
        velocityLimits:
          $ref: '#/components/schemas/VelocityLimitsUpdateV2'
    VelocityLimitsUpdateV2:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time. Applies to debit cards only.
          example: "20"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type. Applies to debit cards only.
          example: "610"
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time. Applies to debit cards only.
          example: "20"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type. Applies to debit cards only.
          example: "610"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type. Applies to debit cards only.
          example: "610"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type. Applies to debit cards only.
          example: "610"
      description: |
        Please provide at least one field in the input in the request to update.
    UpdateVelocityLimitResponseV2:
      title: UpdateVelocityLimitResponseV2
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimitsResponseV2'
    CustomOpenToBuyLimits:
      type: object
      properties:
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for an account.
          example: "9999"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card.
          example: "9999"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds offline for a specific account.
          example: "123"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card offline.
          example: "123"
    OpenToBuyLimitsUpdateV2:
      type: object
      properties:
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds offline for a specific account.
          example: "123"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for an account.
          example: "9999"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card offline.
          example: "123"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card.
          example: "9999"
      description: |
        Please provide at least one field in the input in the request to update.

        TotalAmount should be greater than OfflineAmount for the following fields in the openToBuyLimits.
        - accountOpenToBuyOfflineAmount
        - accountOpenToBuyTotalAmount
        - cardOpenToBuyOfflineAmount
        - cardOpenToBuyTotalAmount
    CustomOpenToBuyLimitsV2:
      type: object
      properties:
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds offline for a specific account.
          example: "0"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for an account.
          example: "0"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card offline.
          example: "123"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card.
          example: "9999"
    CustomOpenToBuyLimitsResponseV2:
      type: object
      properties:
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds offline for a specific account.
          example: "123"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for an account.
          example: "9999"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card offline.
          example: "123"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card.
          example: "9999"
    UpdateOpenToBuyLimitRequest:
      title: UpdateOpenToBuyLimitRequest
      required:
      - cardNumber
      - openToBuyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
    UpdateOpenToBuyLimitRequestV2:
      title: UpdateOpenToBuyLimitRequestV2
      required:
      - openToBuyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
        openToBuyLimits:
          $ref: '#/components/schemas/OpenToBuyLimitsUpdateV2'
    UpdateOpenToBuyLimitResponeV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimitsResponseV2'
    UpdateDailyLimitRequest:
      title: UpdateDailyLimitRequest
      required:
      - cardNumber
      - dailyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
    UpdateDailyLimitRequestV2:
      title: UpdateDailyLimitRequestV2
      required:
      - dailyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          default: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
        dailyLimits:
          $ref: '#/components/schemas/cardDailyLimitsRequestV2'
    ReplacementRequest:
      required:
      - cardNumber
      - cardholderName
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number.
          example: "4000100020003000"
        cardholderName:
          type: string
          description: Name of Cardholder.  Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Personalized text embossed on the plastic card.
        debitOnly:
          $ref: '#/components/schemas/ReplacementDebitRequest'
        creditOnly:
          $ref: '#/components/schemas/ReplacementCreditRequest'
    ReplacementDebitRequest:
      required:
      - cardAddressIdentifier
      type: object
      properties:
        cardAddressIdentifier:
          type: string
          description: Specifies which address to be used for Card. ALTERNATE is valid only if an alternate address is present.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        expirationDate:
          type: string
          description: Date on which the card expires.
          format: MM/YY
          example: 01/23
        nameSuffix:
          type: string
          description: Cardholder name suffix.
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If the member number is not passed it is defaulted to 0.
          example: "0"
        photoId:
          type: string
          description: Photo identifier of the image to use on the card.
        plasticId:
          type: string
          description: The plastic identifier.
          example: PM001
        rushType:
          type: string
          description: Indicates how quickly to send a plastic card to the cardholder.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
    ReplacementCreditRequest:
      required:
      - customerRoleTypeCode
      - specialHandling
      type: object
      properties:
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card. If no value is passed in the request, it is defaulted with the value in the current card.
          example: "00"
        waiveReplacementFee:
          type: string
          description: The indicator which mentions whether a replacement fee will be waived while placing an order. Possible values include Y or N.
          example: "Y"
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card.
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        customerRoleTypeCode:
          type: string
          description: "The Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "1"
    ReplacementResponse:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/ReplacementCardResponse'
        cardholderName:
          $ref: '#/components/schemas/ReplacementCardholderNameResponse'
    ReplacementCardResponse:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of the cardholder.
          example: 400020xxxxxx4000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non-transactional token associated with a card.
          format: numeric
          example: WUPIL5DQTZGM3000
    ReplacementCardholderNameResponse:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
    ReplacementRequestV2:
      required:
      - cardholderName
      type: object
      properties:
        cardNumber:
          type: string
          description: "Card number of primary cardholder.  \nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used.\n"
          format: numeric
          example: "4000100020003000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used.
          format: numeric
          example: piUVBJKZGfks4000
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        debitOnly:
          $ref: '#/components/schemas/ReplacementDebitRequestV2'
        creditOnly:
          $ref: '#/components/schemas/ReplacementCreditRequestV2'
    ReplacementRequestV3:
      required:
      - cardholderName
      type: object
      properties:
        cardNumber:
          type: string
          description: "Card number of primary cardholder. \nPossible validations are \ncardNumber and nonTransToken in Request - Either cardNumber or nonTransToken should be included in the request not both.\n"
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated to a card. Possible validations are cardNumber and nonTransToken in Request - Either cardNumber or nonTransToken should be included in the request not both.
          format: alphanumeric
          example: piUVBJKZGfks4000
        cardholderName:
          maxLength: 26
          type: string
          description: |
            Name of the cardholder.
          example: Doe, John H
        debitOnly:
          $ref: '#/components/schemas/ReplacementDebitRequestV3'
        creditOnly:
          $ref: '#/components/schemas/ReplacementCreditRequestV3'
    InstantIssueRequest:
      type: object
      properties:
        cardNumber:
          type: string
          description: "Card number of primary cardholder. \nPossible validations are \ncardNumber and nonTransToken in Request - Either cardNumber or nonTransToken should be included in the request not both.\n"
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated to a card. Possible validations are cardNumber and nonTransToken in Request - Either cardNumber or nonTransToken should be included in the request not both.
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        cardholderName:
          maxLength: 26
          type: string
          description: "Name of the cardholder. \nThis field is mandatory only when attempting to update the additionalEmbossLine and nameSuffix of the card holder.\n"
          example: Doe, John H
        debitOnly:
          $ref: '#/components/schemas/InstantIssueDebitRequest'
        creditOnly:
          $ref: '#/components/schemas/InstantIssueCreditRequest'
    ReplacementDebitRequestV2:
      required:
      - cardAddressIdentifier
      type: object
      properties:
        cardAddressIdentifier:
          type: string
          description: Specifies which address to be used for Card. ALTERNATE is valid only if an alternate address is present.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        expirationDate:
          maxLength: 5
          type: string
          description: Date on which the card expires. For Replacement Order it indicates the new expirationDate of the ordered card.
          format: MM/YY
          example: 01/23
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
          example: MD
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
        photoId:
          type: string
          description: ID of photo placed on the card. This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: ID of plastic used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock. The field has format of 3 digits preceded by 'PM'.
          example: PM001
        rushType:
          type: string
          description: Indicates the delivery type to send plastic to the cardholder. Applies to debit only.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Order type.
          example: CARD
          default: CARD_AND_PIN
          enum:
          - CARD
          - PIN
          - CARD_AND_PIN
    ReplacementCreditRequestV2:
      required:
      - customerRoleTypeCode
      - specialHandling
      type: object
      properties:
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card. If no value is passed in the request, it is defaulted with the value in the current card.
          example: "00"
        waiveReplacementFee:
          type: string
          description: The indicator which mentions whether a replacement fee will be waived while placing an order. Possible values include Y or N.
          example: "Y"
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card.
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "1"
    ReplacementDebitRequestV3:
      type: object
      properties:
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Member number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
        order:
          $ref: '#/components/schemas/ReplacementOrderDebitRequestV3'
        cardholder:
          $ref: '#/components/schemas/ReplacementCardHolderDebitRequestV3'
    ReplacementOrderDebitRequestV3:
      required:
      - addressType
      type: object
      properties:
        addressType:
          type: string
          description: |
            Specifies which address to be used for Card. Displays error if requested with ALTERNATE address and ALTERNATE address is not present.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        orderType:
          type: string
          description: |
            Ordering options for the primary cardholder name based on the card class setup but you can change the order type.
          example: CARD
          enum:
          - CARD
          - PIN
          - CARD_AND_PIN
        rushType:
          type: string
          description: |
            This field indicates the delivery type to send plastic to the cardholder.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
    ReplacementCardHolderDebitRequestV3:
      type: object
      properties:
        expirationDate:
          maxLength: 5
          type: string
          description: |
            Date on which the card expires.
            For instant issue it indicates the new expirationDate of the card.

            If it is not provided in the request it is defaulted to below values based on card Class.

            If the reissue month of a Card Class is less than 49, expirationDate equals to current month + reissue month.

            If the reissue month of a Card Class is greater than 49, expirationDate equals to current month + reissue month.

            If the reissue month of a Card Class equals to 49, expirationDate equals to 12/49.
          format: MM/YY
          example: 10/28
        nameSuffix:
          maxLength: 6
          type: string
          description: |
            Cardholder suffix associated with the name.
          example: MD
        photoId:
          type: string
          description: ID of photo placed on the card. This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: |
            Plastic ID is used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock. The field has format of 3 digits preceded by 'PM'.
          example: PM001
        additionalEmbossLine:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
    ReplacementCreditRequestV3:
      required:
      - specialHandling
      type: object
      properties:
        cardStock:
          type: string
          description: |
            Number identifying the stock used to produce the plastic card. If no value is passed in the request, it is defaulted with the value in the current card.
          example: "00"
        specialHandling:
          type: string
          description: |
            Sets delivery options for the plastic card.
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        waiveReplacementFee:
          type: string
          description: |
            The indicator which mentions whether a replacement fee will be waived while placing an order. Possible values include Y or N.
          example: "Y"
        cardholder:
          $ref: '#/components/schemas/ReplacementCardHolderCreditRequestV3'
    ReplacementCardHolderCreditRequestV3:
      required:
      - customerRoleTypeCode
      type: object
      properties:
        personalizedEmbossingText:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "01"
    InstantIssueDebitRequest:
      type: object
      properties:
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Member number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
        cardholder:
          $ref: '#/components/schemas/InstantIssueCardHolderDebitRequest'
    InstantIssueCardHolderDebitRequest:
      type: object
      properties:
        expirationDate:
          maxLength: 5
          type: string
          description: |
            Date on which the card expires.
            For instant issue it indicates the new expirationDate of the card.

            If it is not provided in the request it is defaulted to below values based on card Class.

            If the reissue month of a Card Class is less than 49, expirationDate equals to current month + reissue month.

            If the reissue month of a Card Class is greater than 49, expirationDate equals to current month + reissue month.

            If the reissue month of a Card Class equals to 49, expirationDate equals to 12/49.
          format: MM/YY
          example: 10/28
        nameSuffix:
          maxLength: 6
          type: string
          description: |
            Cardholder suffix associated with the name.
          example: MD
        additionalEmbossLine:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
    InstantIssueCreditRequest:
      type: object
      properties:
        cardholder:
          $ref: '#/components/schemas/InstantIssueCardHolderCreditRequest'
    InstantIssueCardHolderCreditRequest:
      type: object
      properties:
        personalizedEmbossingText:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "01"
    InstantIssueResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Card number of primary cardholder. Card number length can be between 16 and 19.
          format: numeric
          example: 400020xxxxxx4000
        nonTransToken:
          type: string
          description: "Non-transactional token associated to a card. Non-transactional token length can be between 16 and 19.  \n"
          format: alphanumeric
          example: piUVBJKZGfks4000
        cardholderName:
          type: string
          description: |
            Name of the cardholder.
          example: Doe, John H
        debitOnly:
          $ref: '#/components/schemas/InstantIssueDebitResponse'
        creditOnly:
          $ref: '#/components/schemas/InstantIssueCreditResponse'
    InstantIssueDebitResponse:
      type: object
      properties:
        memberNumber:
          type: string
          description: |
            Member number of the cardholder.
          format: numeric
          example: "0"
        cardholder:
          $ref: '#/components/schemas/InstantIssueCardHolderDebitResponse'
    InstantIssueCardHolderDebitResponse:
      type: object
      properties:
        expirationDate:
          type: string
          description: |
            Date on which the card expires. For instant issue it indicates the new expirationDate of the ordered card.
          format: MM/YY
          example: 10/28
        nameSuffix:
          type: string
          description: |
            Cardholder suffix associated with the name.
          example: MD
        additionalEmbossLine:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
    InstantIssueCreditResponse:
      type: object
      properties:
        cardholder:
          $ref: '#/components/schemas/InstantIssueCardHolderCreditResponse'
    InstantIssueCardHolderCreditResponse:
      type: object
      properties:
        personalizedEmbossingText:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "01"
    ReplacementResponseV2:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/ReplacementCardResponseV2'
        cardholderName:
          $ref: '#/components/schemas/ReplacementCardholderNameResponseV2'
    PartialReplacementResponseV2:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/ReplacementCardResponseV2'
        cardholderName:
          $ref: '#/components/schemas/ReplacementCardholderNameResponseV2'
        warningInfo:
          $ref: '#/components/schemas/WarningReplacement'
    ReplacementResponseV3:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of the cardholder.
          example: 400010XXXXXX3000
        nonTransToken:
          type: string
          description: Non-transactional token associated with a card.
          example: piUVBJKZGfks4000
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        debitOnly:
          $ref: '#/components/schemas/ReplacementDebitResponseV3'
        creditOnly:
          $ref: '#/components/schemas/ReplacementCreditResponseV3'
    PartialReplacementResponseV3:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder. Card number length can be between 16 and 19.
          format: numeric
          example: 400020xxxxxx4000
        nonTransToken:
          type: string
          description: Non-transactional token associated to a card. Non-transactional token length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        debitOnly:
          $ref: '#/components/schemas/ReplacementDebitResponseV3'
        creditOnly:
          $ref: '#/components/schemas/ReplacementCreditResponseV3'
        warningInfo:
          $ref: '#/components/schemas/WarningReplacement'
    ReplacementDebitResponseV3:
      type: object
      properties:
        memberNumber:
          type: string
          description: Member number of the cardholder.
          format: numeric
          example: "0"
        order:
          $ref: '#/components/schemas/ReplacementOrderDebitResponseV3'
        cardholder:
          $ref: '#/components/schemas/ReplacementCardHolderDebitResponseV3'
    ReplacementOrderDebitResponseV3:
      type: object
      properties:
        addressType:
          type: string
          description: Specifies which address to be used for Card. Displays error if requested with ALTERNATE address and ALTERNATE address is not present.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        rushType:
          type: string
          description: This field indicates the delivery type to send plastic to the cardholder.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup but you can change the order type.
          example: CARD
          default: CARD_AND_PIN
          enum:
          - CARD
          - PIN
          - CARD_AND_PIN
    ReplacementCardHolderDebitResponseV3:
      type: object
      properties:
        expirationDate:
          type: string
          description: Date on which the card expires. For instant issue it indicates the new expirationDate of the ordered card
          format: MM/YY
          example: 10/28
        nameSuffix:
          type: string
          description: Cardholder suffix associated with the name.
          example: MD
        photoId:
          type: string
          description: Enables financial institutions to place cardholder photographs on their cards. This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock. The field has format of 3 digits preceded by 'PM'.
          example: PM001
        additionalEmbossLine:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
    ReplacementCreditResponseV3:
      type: object
      properties:
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card. If no value is passed in the request, it is defaulted with the value in the current card.
          example: "00"
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card.
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        waiveReplacementFee:
          type: string
          description: |
            The indicator which mentions whether a replacement fee will be waived while placing an order. Possible values include Y or N.
          example: "Y"
        cardholder:
          $ref: '#/components/schemas/ReplacementCardHolderCreditResponseV3'
    ReplacementCardHolderCreditResponseV3:
      type: object
      properties:
        personalizedEmbossingText:
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "01"
    ReplacementCardResponseV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Card number of primary cardholder. Card number length can be between 16 and 19.
          format: numeric
          example: 400020xxxxxx4000
        nonTransToken:
          type: string
          description: Non-transactional token associated to a card. Non-transactional token length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
    ReplacementCardholderNameResponseV2:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
    PinAttemptUpdateRequest:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
    SearchCardLimitsRequest:
      title: SearchCardLimitsRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
    SearchCardLimitsRequestV2:
      title: SearchCardLimitsRequestV2
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          default: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    SearchCardLimitsResponse:
      type: object
      properties:
        cardLimits:
          $ref: '#/components/schemas/CardLimitsSearch'
      description: Elements with null values in the response are not displayed.
    SearchCardLimitsResponseV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        dailyLimits:
          $ref: '#/components/schemas/CardDailylimitsResponseV2'
        openToBuyLimits:
          $ref: '#/components/schemas/CardOpenToBuyLimitsResponseV2'
        velocityLimits:
          $ref: '#/components/schemas/CardVelocityLimitsResponseV2'
      description: Elements with null values in the response are not displayed.
    DailyCardLimitsResponseV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        dailyLimits:
          $ref: '#/components/schemas/UpdateCardDailylimitsResponseV2'
      description: Elements with null values in the response are not displayed.
    CardLimitsSearch:
      type: object
      properties:
        nonExpiring:
          maxLength: 3
          type: string
          description: Indicates if the limits will expire or not. Valid values YES, NO.
          example: "No"
        expirationDate:
          type: string
          description: The expiration date of the limits if the limits tend to expire. Not applicable if they have no expiration date.  Applies to daily limits only.
          format: date
        limitType:
          type: string
          description: Indicates if the limits are card class values or overridden.
          example: OVERRIDE
          enum:
          - OVERRIDE
          - CARD_CLASS
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "600"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "300"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "2500"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "500"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "10"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "2"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "1500"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "500"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: "Combined total, Online and offline withdrawal limits at ATM and POS.  \nDaily Limit Combined number of transaction attempts allowed at the ATM and POS.  \nVelocity Support (Maximum number of transactions allowed during the lifespan of the PAN)  \n"
          example: "2500"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Amount of same day deposit available for use.
          example: "0"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "500"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount per MT funding transaction. Money transfer funding | P2P Limits | offline processing.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time.
          example: "0"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type.
          example: 00:00
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time.
          example: "0"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time.
          example: "0"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time.
          example: "0"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type.
          example: 00:00
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type.
          example: 00:00
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type.
          example: 00:00
        retail:
          type: string
          description: Minimum retail authorization amount. The system approves any retail transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        travel:
          type: string
          description: Minimum travel and entertainment authorization amount. The system approves any travel and entertainment transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDateTime:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date-time
    CardActivationUpdateResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          example: 400010XXXXXX3000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          example: WUPIL5DQTZGM7686
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: The activation status of the card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: Elements with null values in the response are not displayed.
    CardActivationUpdateResponseWarning:
      type: object
      properties:
        cardType:
          type: string
          description: Card type.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: The activation status of the card. NOT_ACTIVATED and ACTIVATED statuses apply to both debit and credit cards. Remaining statuses apply to debit only.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated.
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: Elements with null values in the response are not displayed.
    SearchCardActivationResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          example: 400010XXXXXX3000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          example: WUPIL5DQTZGM3000
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: The activation status of the card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated.
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: Elements with null values in the response are not displayed.
    CardActivationUpdateRequest:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000100020003000"
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          example: "0"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: numeric
          example: WUPIL5DQTZGM7686
    PinOffsetRequest:
      required:
      - pinOffset
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          format: numeric
          example: "0"
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Required.
          example: "1234"
    AuthDetailsRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
    AuthDetailsResponse:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, between 16 to 19 digits. The cardNumber will be masked, except the first 6 and last 4 digits.
          example: 400020XXXXXX4000
        CV2:
          type: string
          description: Card CV2
          example: "282"
        cardExpirationDate:
          type: string
          description: Card Expiration Date.
          format: MMYY
          example: "0228"
    AuthDetailsRequestV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero). Applies to debit cards only.
          format: numeric
          example: "0"
    AuthDetailsResponseV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        CV2:
          type: string
          description: Card CV2
          example: "282"
        expirationDate:
          type: string
          description: Card Expiration Date.
          format: MM/YY
          example: 10/28
    ActivationSearchRequest:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000100020003000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: numeric
          example: WUPIL5DQTZGM7686
    CardholderDemographicsContactStepUpVoice:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect stepup user home phone number. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect stepup user work phone number. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect stepup user mobile phone number. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to connect stepup user address. This is optional.
        mobileText:
          type: boolean
          description: Indicates whether to connect stepup user phone number to receive text messages/announcements. This is optional
    CardholderDemographicsContactStepUpText:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to text stepup user home phone address. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to text stepup user work phone address. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to text stepup user mobile phone address. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to text stepup user address. This is optional.
        mobileText:
          type: boolean
          description: Indicates whether to text stepup user mobile number. This is optional.
    CardholderDemographicsContactEnfactText:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect enfact user home phone number for receiving text address/announcements. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect enfact user work phone number for receiving text address/announcements. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number for receiving text address/announcements. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to connect enfact user address for receiving text address/announcements. This is optional
        mobileText:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number for receiving text address/announcements. This is optional.
    CardholderDemographicsContactEnfactVoice:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect enfact user home phone number. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect enfact user work phone number. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        textAddress:
          type: boolean
          description: Indicates whether to connect enfact user phone number for receiving text address/announcements. This is optional.
    CardholderDemographicsContactEnfact:
      type: object
      properties:
        enfactLanguagePreference:
          type: string
          description: Indicates the preferred language that can be used for communicating with the enfact system.
          example: ENGLISH
          enum:
          - ENGLISH
          - SPANISH
          - NONE
    CardholderDemographicsContactText:
      type: object
      properties:
        homePhoneNumber:
          type: string
          description: Home phone number of the primary cardholder. 10 digit numeric, allows hyphen as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        workPhoneNumber:
          type: string
          description: Work phone number of the primary cardholder. 10 digit numeric, allows hyphen as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        mobilePhoneNumber:
          type: string
          description: Mobile number of the primary cardholder. 10 digit numeric, allows hyphen as a special character.
          example: "7406520178"
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 10 digit numeric, allows hyphen as a special character.
          example: "7406520178"
    CardholderDemographicsContactEmail:
      type: object
      properties:
        emailAddress:
          type: string
          description: Indicates the email address of the cardholder. Optional. Applies to debit and credit cards. Max length 50.
          example: jessedoe@example.com
    CardholderDemographicsContactVoice:
      type: object
      properties:
        homePhoneNumber:
          type: string
          description: Home phone number of the primary cardholder. 10 digit numeric, allows hyphen as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        workPhoneNumber:
          type: string
          description: Work phone number of the primary cardholder. 10 digit numeric, allows hyphen as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        mobilePhoneNumber:
          type: string
          description: Mobile number of the primary cardholder. 10 digit numeric, allows hyphen as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 10 digit numeric, allows hyphen as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
    CardholderDemographicsContact:
      type: object
      properties:
        voice:
          $ref: '#/components/schemas/CardholderDemographicsContactVoice'
        email:
          $ref: '#/components/schemas/CardholderDemographicsContactEmail'
        text:
          $ref: '#/components/schemas/CardholderDemographicsContactText'
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfact'
        enfactVoice:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfactVoice'
        enfactText:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfactText'
        stepUpText:
          $ref: '#/components/schemas/CardholderDemographicsContactStepUpText'
        stepUpVoice:
          $ref: '#/components/schemas/CardholderDemographicsContactStepUpVoice'
    CardholderDemographicsContactV2:
      type: object
      properties:
        voice:
          $ref: '#/components/schemas/CardholderDemographicsV2Voice'
        email:
          $ref: '#/components/schemas/CardholderDemographicsV2Email'
        text:
          $ref: '#/components/schemas/CardholderDemographicsV2Text'
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV2ContactEnfact'
    CardholderDemographicsContactV3:
      type: object
      properties:
        emailAddress:
          type: string
          description: Email address of the cardholder
          format: email
          example: alexsmith@example.com
        homePhone:
          type: string
          description: 'Home phone number of the primary cardholder. Applies to debit and credit cards. '
          example: "1005550001"
        workPhone:
          type: string
          description: 'Work phone number of the primary cardholder. Applies to debit and credit cards. '
          example: "1005550001"
        cellPhone:
          type: string
          description: Cellphone number of the primary cardholder. Applies to debit and credit cards.
          example: "1005550001"
        textAddress:
          type: string
          description: Cardholder’s text address
          example: "1005550001"
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3ContactEnfact'
    CardholderDemographicsContactV4:
      type: object
      properties:
        emailAddress:
          type: string
          description: Email address of the cardholder
          format: email
          example: alexsmith@example.com
        homePhone:
          type: string
          description: 'Home phone number of the primary cardholder. Applies to debit and credit cards. '
          example: "1005550001"
        workPhone:
          type: string
          description: 'Work phone number of the primary cardholder. Applies to debit and credit cards. '
          example: "1005550001"
        cellPhone:
          type: string
          description: Cellphone number of the primary cardholder. Applies to debit and credit cards.
          example: "1005550001"
        textAddress:
          type: string
          description: Cardholder’s text address
          example: "1005550001"
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV4ContactEnfact'
    CardholderDemographicsV2Preferences:
      type: object
      properties:
        homePhone:
          $ref: '#/components/schemas/CardholderDemographicsV2HomePhone'
        workPhone:
          $ref: '#/components/schemas/CardholderDemographicsV2WorkPhone'
        cellPhone:
          $ref: '#/components/schemas/CardholderDemographicsV2CellPhone'
        textAddress:
          $ref: '#/components/schemas/CardholderDemographicsV2TextAddress'
        emailAddress:
          $ref: '#/components/schemas/CardholderDemographicsV2EmailAddress'
    CardholderDemographicsV3Preferences:
      type: object
      properties:
        homePhone:
          $ref: '#/components/schemas/CardholderDemographicsV3HomePhone'
        workPhone:
          $ref: '#/components/schemas/CardholderDemographicsV3WorkPhone'
        cellPhone:
          $ref: '#/components/schemas/CardholderDemographicsV3CellPhone'
        textAddress:
          $ref: '#/components/schemas/CardholderDemographicsV3TextAddress'
        emailAddress:
          $ref: '#/components/schemas/CardholderDemographicsV3EmailAddress'
    CardholderDemographicsV4Preferences:
      type: object
      properties:
        homePhone:
          $ref: '#/components/schemas/CardholderDemographicsV4HomePhone'
        workPhone:
          $ref: '#/components/schemas/CardholderDemographicsV4WorkPhone'
        cellPhone:
          $ref: '#/components/schemas/CardholderDemographicsV4CellPhone'
        textAddress:
          $ref: '#/components/schemas/CardholderDemographicsV4TextAddress'
        emailAddress:
          $ref: '#/components/schemas/CardholderDemographicsV4EmailAddress'
    CardholderDemographicsV2Voice:
      type: object
      properties:
        homePhone:
          type: string
          description: 'Home phone number of the primary cardholder. 15-digit numeric.  Applies to debit and credit cards. '
          example: "1005550001"
        workPhone:
          type: string
          description: 'Work phone number of the primary cardholder. 15-digit numeric. Applies to debit and credit cards. '
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the primary cardholder. 15-digit numeric. Applies to debit and credit cards.
          example: "1005550001"
    CardholderDemographicsV2Email:
      type: object
      properties:
        emailAddress:
          type: string
          description: Indicates the email address of the cardholder. Applies to debit and credit.  Optional. Max length 50.
          example: jessedoe@example.com
    CardholderDemographicsV2Text:
      type: object
      properties:
        homePhone:
          maxLength: 15
          type: string
          description: Home phone number of the primary cardholder. 15-digit numeric. Applies to debit and credit cards.
          example: "1005550001"
        workPhone:
          maxLength: 15
          type: string
          description: 'Work phone number of the primary cardholder. 15-digit numeric. Applies to debit and credit cards. '
          example: "1005550001"
        cellPhone:
          maxLength: 15
          type: string
          description: 'Mobile phone number of the primary cardholder. 15-digit numeric. Applies to debit and credit cards. '
          example: "1005550001"
        textAddress:
          maxLength: 15
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 15-digit numeric.
          example: "1005550001"
    CardholderDemographicsV2ContactEnfact:
      type: object
      properties:
        languagePreference:
          type: string
          example: ENGLISH
          enum:
          - ENGLISH
          - SPANISH
          - NONE
    CardholderDemographicsV3ContactEnfact:
      type: object
      properties:
        languagePreference:
          type: string
          description: Cardholder's preferred language in which Card Services sends Risk Alerts.
          example: ENGLISH
          enum:
          - ENGLISH
          - SPANISH
          - NONE
    CardholderDemographicsV4ContactEnfact:
      type: object
      properties:
        languagePreference:
          type: string
          description: Cardholder's preferred language in which Card Services sends Risk Alerts.
          example: ENGLISH
          enum:
          - ENGLISH
          - SPANISH
          - NONE
    CardholderDemographicsV2HomePhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV2Enfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV2StepUp'
    CardholderDemographicsV2WorkPhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3WorkPhoneEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3WorkPhoneStepUp'
    CardholderDemographicsV2CellPhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3CellPhoneEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3CellPhoneStepUp'
    CardholderDemographicsV2TextAddress:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3TextAddressEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3TextAddressStepUp'
    CardholderDemographicsV2EmailAddress:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3EmailAddressEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3EmailAddressStepUp'
    CardholderDemographicsV3HomePhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3Enfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3StepUp'
    CardholderDemographicsV3WorkPhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3WorkPhoneEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3WorkPhoneStepUp'
    CardholderDemographicsV3CellPhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3CellPhoneEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3CellPhoneStepUp'
    CardholderDemographicsV3TextAddress:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3TextAddressEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3TextAddressStepUp'
    CardholderDemographicsV3EmailAddress:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3EmailAddressEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3EmailAddressStepUp'
    CardholderDemographicsV4HomePhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV4Enfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV4StepUp'
    CardholderDemographicsV4WorkPhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV4WorkPhoneEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV4WorkPhoneStepUp'
    CardholderDemographicsV4CellPhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV4CellPhoneEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV4CellPhoneStepUp'
    CardholderDemographicsV4TextAddress:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV4TextAddressEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV4TextAddressStepUp'
    CardholderDemographicsV4EmailAddress:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV4EmailAddressEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV4EmailAddressStepUp'
    CardholderDemographicsV2Enfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Applies to debit and credit cards. Optional.
        consentForText:
          type: boolean
          description: EnFact consent for text. Applies to debit and credit cards. Optional.
    CardholderDemographicsV2StepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Applies to debit and credit cards. Optional.
        consentForText:
          type: boolean
          description: EnFact consent for text. Applies to debit and credit cards. Optional.
    CardholderDemographicsV3Enfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Applies to debit and credit cards. Optional.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Applies to debit and credit cards. Optional.
          example: true
    CardholderDemographicsV3StepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Applies to debit and credit cards. Optional.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Applies to debit and credit cards. Optional.
          example: true
    CardholderDemographicsV3WorkPhoneEnfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3WorkPhoneStepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3CellPhoneEnfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3CellPhoneStepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3TextAddressEnfact:
      type: object
      properties:
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3TextAddressStepUp:
      type: object
      properties:
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3EmailAddressEnfact:
      type: object
      properties:
        consentForEmail:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3EmailAddressStepUp:
      type: object
      properties:
        consentForEmail:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV4Enfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Applies to debit and credit cards. Optional.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Applies to debit and credit cards. Optional.
          example: true
    CardholderDemographicsV4StepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Applies to debit and credit cards. Optional.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Applies to debit and credit cards. Optional.
          example: true
    CardholderDemographicsV4WorkPhoneEnfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV4WorkPhoneStepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV4CellPhoneEnfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV4CellPhoneStepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV4TextAddressEnfact:
      type: object
      properties:
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV4TextAddressStepUp:
      type: object
      properties:
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV4EmailAddressEnfact:
      type: object
      properties:
        consentForEmail:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV4EmailAddressStepUp:
      type: object
      properties:
        consentForEmail:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    Tcpa:
      type: object
      properties:
        tcpaType:
          type: string
          description: "Indicates the Telephone Consumer Protection Act (TCPA) type.  \n- ENFACT - Fraud monitoring system which is used for identifying suspicious activities on credit and debit cards.  \n- STEPUP - Authentication system in which an OTP is sent to the cardholder's available contact information.  \n"
          enum:
          - ENFACT
          - STEPUP
        mediaType:
          type: string
          description: Media through which user can be contacted.
          example: VOICE
          enum:
          - VOICE
          - TEXT
        revoked:
          type: boolean
          description: Status of TCPA media type.
          example: true
        lastUpdatedDateTime:
          type: string
          description: TCPA last updated date. Optional. Applies to debit and credit cards.
          format: date-time
        lastUpdatedBy:
          maxLength: 25
          type: string
          description: Last updated by. Optional. Applies to debit and credit cards.
          example: Jesse Doe
    TcpaV3:
      type: object
      properties:
        tcpaType:
          type: string
          description: "Indicates the Telephone Consumer Protection Act (TCPA) type. Possible values  \nENFACT - Fraud monitoring system which is used for identifying suspicious activities on credit and debit cards.  \nSTEPUP - Authentication system in which an OTP is sent to the cardholder's available contact information.  \n"
          example: ENFACT
          enum:
          - ENFACT
          - STEPUP
        mediaType:
          type: string
          description: Media through which user can be contacted.
          example: VOICE
          enum:
          - VOICE
          - TEXT
        revoked:
          type: boolean
          description: Status of TCPA media type.
          example: true
        lastUpdatedDateTime:
          type: string
          description: TCPA last updated date. Optional. Applies to debit and credit cards.
          format: date-time
        lastUpdatedBy:
          maxLength: 25
          type: string
          description: Last updated by. Optional. Applies to debit and credit cards.
          example: Jesse Doe
    TcpaV4:
      type: object
      properties:
        tcpaType:
          type: string
          description: "Indicates the Telephone Consumer Protection Act (TCPA) type. Possible values  \nENFACT - Fraud monitoring system which is used for identifying suspicious activities on credit and debit cards.  \nSTEPUP - Authentication system in which an OTP is sent to the cardholder's available contact information.  \n"
          example: ENFACT
          enum:
          - ENFACT
          - STEPUP
        mediaType:
          type: string
          description: Media through which user can be contacted.
          example: VOICE
          enum:
          - VOICE
          - TEXT
        revoked:
          type: boolean
          description: Status of TCPA media type.
          example: true
        lastUpdatedDateTime:
          type: string
          description: TCPA last updated date. Optional. Applies to debit and credit cards.
          format: date-time
        lastUpdatedBy:
          maxLength: 25
          type: string
          description: Last updated by. Optional. Applies to debit and credit cards.
          example: Jesse Doe
    SearchTransactionRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card Number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: The Member number is associated with the card. If not passed, defaults to ALL. Transaction summary ia returned as an array for all member numbers when defaulted to All.
          example: "0"
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/FilterCriteria'
    SearchTransactionsResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of transactions for the provided request information.
          example: 50
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    SearchTransactionRequestV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          maxLength: 1
          type: string
          description: The Member number is associated with the card. If not passed, defaults to ALL. Transaction summary ia returned as an array for all member numbers when defaulted to All.
          format: numeric
          example: "0"
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/FilterCriteria'
    SearchTransactionsResponseV2:
      type: object
      properties:
        count:
          type: integer
          description: Total number of transactions for the provided request information.
          example: 1
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Member Number associated with the card. This field is only used if the user is selecting member number for a given cardholder, not used when searching all transactions. Applies to debit cards only.
          example: "0"
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionV2'
    SearchTransactionsPartialResponseV2:
      type: object
      properties:
        count:
          type: integer
          description: Total number of transactions for the provided request information.
          example: 1
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: alphanumeric
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        memberNumber:
          type: string
          description: |
            Member Number associated with the card. This field is only used if the user is selecting member number for a given cardholder, not used when searching all transactions. Applies to debit cards only.
          example: "0"
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionV2'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    FilterCriteria:
      type: object
      properties:
        filterBy:
          type: string
          description: "Filter applied to transactions search. One or many filter combinations are allowed. Applies to debit and credit cards.  \n- MERCHANT_NAME - Merchant Name.  \n- AMOUNT_FROM - Minimum amount. Valid format is 0.00. \n- AMOUNT_TO - Maximum amount. Valid format is 0.00.  \n- FROM_DATE - Start date. Valid Format is YYYY-MM-DD.  \n- TO_DATE - End date. Valid format is YYYY-MM-DD.  \n- STATUS - For debit transactions valid status are APPROVED, REVERSED and DECLINED. For credit transactions valid status are  POSTED/DECLINED/PENDING/APPROVED/REVERSED.  \n- TRANSACTION_CODE - Describes the type of transaction done on card. For values refer field transactionType.  \n- MESSAGE_TYPE - Message based on activity done on the transaction. For values refer field MessageType.  Applies only to debit cards.  \n- SYSTEM_RECORD_ID - The ID that uniquely identifies the transaction. Mapped to the lifecycle key.  \n- SEQUENCE_NUMBER - Chronological numeric identifier for the transaction.  \n- RETRIEVAL_REF_NUMBER - Transaction identifier typically assigned by the acquirer or transaction originator.  \n"
          example: MERCHANT_NAME
          enum:
          - MERCHANT_NAME
          - AMOUNT_FROM
          - AMOUNT_TO
          - FROM_DATE
          - TO_DATE
          - STATUS
          - TRANSACTION_CODE
          - MESSAGE_TYPE
          - SYSTEM_RECORD_ID
          - SEQUENCE_NUMBER
          - RETRIEVAL_REF_NUMBER
        filterValue:
          type: string
          description: Values for selected filters. If the filterBy field is set to MERCHANT_NAME, this field contains the name of the merchant, such as 'ExampleCo'. See filterBy field for more information.
          example: Store1
    Transaction:
      type: object
      properties:
        systemRecordId:
          type: string
          description: Unique system id for the record. Contains lifecycle key| duID| active key. Applies to debit cards only.
          example: 011103LMFI4F4321377761184|12080251120230113|0120
        cardNumber:
          type: string
          description: Card number used in transaction, identified in request. Masked in the response. Applies to debit and credit cards.
          example: 400020XXXXXX4000
        memberNumber:
          type: string
          description: Member Number associated with the card. This field is only used if the user is selecting member number for a given cardholder, not used when searching all transactions. Applies to debit cards only.
          example: "0"
        cardType:
          type: string
          description: Card type. Applies to debit and credit cards.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal. Applies to debit cards only.
          example: "000031"
        retrievalRefNumber:
          type: string
          description: Reference Number supplied and retained by the message originator.Max length 12.Applies to debit cards only.
          example: "222815000031"
        subResponseCode:
          type: string
          description: Optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination. Applies to debit cards only.
          example: M
        subResponseCodeDescription:
          type: string
          description: Description for sub response code. Applies to debit cards only.
          example: 96-M Error processing PIN
        preAuthAmt:
          type: string
          description: Contains the transaction amount on a preauthorization response (110) or an authorization response (210). For a partially approved transaction, this is the amount approved. For a denied transaction, this is the requested amount. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a forced post preauthorization (120) or forced post clearing transaction (220), the clearing amount shown in Amount 2 is duplicated in Amount 1. On a reversal, Amount 1 is the amount to be reversed. Applies to debit cards only.
          example: "2000"
        amtCharged:
          type: string
          description: Contains the transaction amount on a forced authorization (120) or on a forced post clearing transaction (220). For a partially approved transaction, this is the amount approved. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a preauthorization response (110) or an authorization response (210), an amount displayed is a balance returned in the response. This could be the ledger or available balance. On a partial reversal, Amount 2 is the new amount that replaces the amount displayed in Amount 1. Applies to debit cards only.
          example: "1299.00"
        authorizationCode:
          type: string
          description: Authorization approval code, generated for approved transactions only. Applies to debit and credit cards.
          example: "050821"
        terminalId:
          type: string
          description: Identifier indicating the terminal where the transaction was performed. Applies to debit cards only.
          example: VMDIEOS1
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service. Applies to debit and credit cards.
          example: "6011"
        merchantCity:
          type: string
          description: Regulation E City and State where terminal is located. Applies to debit and credit cards.
          example: Newark
        merchantState:
          type: string
          description: "Merchant State  \nAL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  \nCA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  \nFM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  \nFL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI Hawaii  \nID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  \nLA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  \nMD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  \nMO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey  \nNM New Mexico | NY New York | NC North Carolina | ND North Dakota  \nMP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  \nOH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  \nPA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  \nSC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  \nVT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  \nWA Washington | WV West Virginia | WI Wisconsin | WY Wyoming  \n"
          example: NJ
        eciMastercard:
          type: string
          description: "Electronic commerce indicator (ECI) provides information regarding the security level and authentication method used for an electronic commerce Debit Mastercard® transaction. Applies to debit cards only.  \nPossible Positions 1 and 2 values  \n- 21  -  Channel encryption; cardholder certificate not used  \n- 22  -  Masterpass-generated transaction  \n- 24  -  Digital Secure Remote Payment (DSRP) transaction  \n- 91  -  No security protocol; cardholder certificate not used.  \nPossible Position 3 values  \n- 0  -  Universal cardholder authentication field (UCAF) data collection – Is not supported by the merchant an Identity Check merchant has chosen not to undertake Identity Check on this transaction or identity Check failed authentication and merchant desires to proceed with transaction  \n- 1  -  UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains an attempts AAV  \n- 2  -  UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains a fully authenticated AAV)  \n- 3  -  UCAF data collection is supported by the merchant and UCAF (Mastercard assigned static AAV) must be present  \n- 4  -  Merchant has chosen to share authentication data within authorization; UCAF collection not supported  \n- 5  -  Reserved for future use  \n- 6  -  Merchant Risk-Based Decisioning  \n- 7  -  Partial Shipment or recurring payment; liability depends on the original UCAF values provided and matching with the original transaction  \n"
          example: "21"
        eciVisa:
          type: string
          description: "Electronic commerce indicator (ECI)—Visa. Provides information regarding the security level and authentication method used for an electronic commerce Visa Check transaction.  Applies to debit cards only.  \nPosition 4 - Mail/Phone/Electronic Commerce and Payment Indicator  \n- Space - POS Customer Present (POS Check Service Only)  \n- 1 - Single transaction of a mail/phone order  \n- 2 - Recurring transaction  \n- 3 - Installment payment  \n- 4 - Unknown classification/Other mail order  \n- 5 - Secure electronic commerce transaction  \n- 6 - Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure  \n- 7 - Non-authenticated security transaction  \n- 8 - Non-secure transaction  \n"
          example: "3"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction. Valid values Yes or No. Applies to debit cards only.
          example: 1 - Yes
        networkID:
          type: string
          description: Specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction. Applies to debit cards only.
          example: 773002 - Maestro
        acquirerRefNum:
          type: string
          description: Assigned by the network based on information provided by the acquirer. Can be used for network corrections. Applies to debit cards only.
          example: "1055556060"
        posDataInputCapability:
          type: string
          description: Indicates the capability of the terminal to enter the card number and expiration date into the system. Applies to debit cards only.
          example: "2"
        posDataInputMode:
          type: string
          description: Indicates the method used to input the information from the card to the terminal. Applies to debit cards only.
          example: 2 - Swipe
        unmatchedCompletionFlag:
          type: string
          description: Indicates unmatched completion flag. Applies to debit cards only.
          example: "N"
        expirationDateMismatch:
          type: string
          description: Indicates if an expiration date mismatch exists. Applies to debit cards only.
          example: "N"
        effectiveDate:
          type: string
          description: Date when the transaction came into effect. Applies to credit cards only.
          format: date
        transactionDateTime:
          type: string
          description: Date and Time when transaction was created. Applies to debit and credit cards.
          format: date-time
        transactedCardNumber:
          type: string
          description: CardNumber given for monetary(posted) transactions if available, otherwise blank. Applies to credit cards only.
          example: 400020XXXXXX4000
        statusDescription:
          type: string
          description: Combination of status code and description for transaction status. Applies to debit and credit cards.
          example: 64-PI LOST
        merchantName:
          type: string
          description: Merchant Name. Applies to debit and credit cards.
          example: Store1
        transactionAmount:
          type: string
          description: Amount on a particular transaction. Valid format is 0.00. Applies to debit and credit cards.
          example: "1299.00"
        transactionType:
          type: string
          description: "Indicates the type of transaction made on the card. This contains the transactionCode description of status Posted transactions.  \nValid values for Debit -\n- Account Inquiry  \n- Balance Inquiry  \n- Check Cashing  \n- Credit  \n- Debit  \n- Deposit  \n- Deposit Cash Back  \n- Loan to Prepaid  \n- Member Verification  \n- Message  \n- Money Transfer Credit  \n- Money Transfer Dispense  \n- Money Transfer Funding  \n- Money Transfer Initiate  \n- Money Transfer Refund  \n- Payment  \n- Payment Enclosed  \n- Payment to Merchant  \n- PIN Select  \n- Refund from Merchant  \n- Special Purchase  \n- Statement Print  \n- Third Party Bill Payment Return  \n- Transfer  \n- Withdrawal  \nValid Values for Credit when transaction status is Posted - \n- Account Balance Details for MULTRAN Accounts  \n- Account Level Processing Strategy Change Message  \n- Account Transfer  \n- Airline Itinerary  \n- Backdated Cash Advance Finance Charge  \n- Backdated Cash Advance and Sales Adjustment  \n- Backdated Payment Adjustment  \n- Backdated Payment or Cash Advance Adjustment  \n- Backdated Payment Interest Adjustment  \n- Cash Advance  \n- Cash Advance Amount Adjustment  \n- Cash Advance Finance Charge  \n- Cash Advance Finance Charge Refund  \n- Cash Advance Item Charge  \n- Cash Advance Item Charge Refund  \n- Cash Advance Reversal  \n- Charge Off All Finance Charges  \n- Charge Off Billed Cash Advance Item Charges  \n- Charge Off Billed Merchandise Item Charges  \n- Charge Off Billed Late Charges \n- Charge Off Billed Overlimit Fees  \n- Charge Off Cash Advance Interest  \n- Charge Off Credit Life Insurance  \n- Charge Off All Current Cash Advance Interest  \n- Charge Off All Current Merchandise Interest  \n- Charge Off Cycle-to-Date Cash Advance Item Charges  \n- Charge Off Cycle-to-Date Late Charges  \n- Charge Off Cycle-to-Date Merchandise Item Charges  \n- Charge Off Cycle-to-Date Overlimit Fees  \n- Charge Off Merchandise Interest and Service Charges  \n- Charge Off Total Account  \n- Credit Life Insurance Fee Refund  \n- Credit Life Insurance Charge  \n- Fee or Finance Charge Rebate  \n- Finance Charge (item charge)  \n- Interest Earned or Credit Interest  \n- Late Charge  \n- Late Charge Refund  \n- Merchandise Finance Charge  \n- Merchandise Finance Charge Refund  \n- Merchandise Item Charge  \n- Merchandise Item Charge Refund  \n- Merchandise Sale Amount Adjustment  \n- Merchandise Sale Reversal  \n- Overlimit Account Message  \n- Overlimit Charge  \n- Overlimit Charge Refund  \n- Payment  \n- Payment Amount Adjustment  \n- Payment Reversal  \n- Retail Special Details  \n- Return  \n- Return Amount Adjustment  \n- Return Reversal  \n- Reserved for restricted use  \n- Sale  \n- Skip Payment Certificate Message  \n- Service Charge or Statement Charge  \n- Small Balance Charge-off  \n- Special Details  \n- Specific Credit Amount Adjustment  \nTransaction status Pending or Declined for CREDIT -  \n- Account status inquiry service or payment account status inquiry  \n- Account status check via a token provisioning request resulted in an approved response  \n- Account status inquiry service or payment account status inquiry  \n- Activation code notification message for token provisioning via step-up authentication processing  \n- Authorization adjustment  \n- Balance inquiry approved  \n- Cash advance authorization approved  \n- Cash advance authorization approved by expansion  \n- Cash advance authorization approved by name  \n- Cash advance authorization approved by positive identification  \n- Cash advance authorization declined  \n- Cash advance authorization manually declined  \n- Cash authorization approved without issuer contact  \n- Cash referral  \n- Check authorization approved  \n- Check authorization declined  \n- Check system error - declined  \n- Duplicate authorization  \n- In-store return  \n- Issuer’s adjustment  \n- Manual override cash advance authorization  \n- Manual override merchandise authorization  \n- Merchandise authorization approved  \n- Merchandise authorization approved by expansion  \n- Merchandise authorization approved by name  \n- Merchandise authorization approved by positive identification  \n- Merchandise authorization approved without issuer contact  \n- Merchandise authorization declined  \n- Merchandise authorization manually declined  \n- Merchandise referral  \n- Merchandise return adjustment  \n- Merchandise return adjustment declined  \n- Merchandise return approved  \n- Merchandise return declined  \n- Override declined cash advance  \n- Override declined merchandise authorization  \n- Pay unposted check  \n- Permanent authorization adjustment  \n- Permanent authorization request  \n- Preauthorization request approved  \n- Preauthorization request denied  \n- Private label ETC return posted at the time of return  \n- Reserved for restricted use  \n- Return posted check  \n- Return unposted check  \n- Right-time payment  \n- Right-time pay/reversal  \n- Token has been granted, linked to the cardholder account and provisioned  \n- Token maintenance such as activation, deactivation, suspension, exception, or replacement  \n- Token provision decision  \n- Visa and Mastercard person-to-person payment transaction reversal  \n- Visa and Mastercard person-to-person payment transaction decline  \n"
          example: WITHDRAWAL
        messageType:
          type: string
          description: "The combination of message type code and description for transaction message. Applies to debit cards only.  \n- 100- Pre-Auth Request  \n- 102- Pre-Auth Reversal  \n- 110- Preauthorization  \n- 120- Pre-Auth Stand In  \n- 121- Pre-Auth Adv Repeat  \n- 130- Auth Advice Resp  \n- 200- Request  \n- 202- Auth Reversal  \n- 210- Auth/Completion  \n- 220- Forced Completion  \n- 221- Advice Repeat  \n- 230- Advice Response  \n- 320- Batch Upload  \n- 330- Batch Upload Resp  \n- 420- Reversal  \n- 421- Advice Rev Repeat  \n- 430- Reversal Response  \n- 500- Batch Settl Request  \n- 510- Batch Settl Resp  \n- 800- Network Mgmt Req  \n- 810- Network Mgmt Resp  \n- 820- Network Mgmt Advice  \n"
          example: 420- Reversal
        transactionStatus:
          type: string
          description: Status of the transaction. Possible values for debit are APPROVED, REVERSED and DECLINED.  Valid values for credit POSTED - PENDING - DECLINED - APPROVED - REVERSED
          example: APPROVED
        responseCode:
          type: string
          description: Authorization response approval or denial code.  Applies to debit and credit cards.
          example: "003"
        responseCodeDescription:
          type: string
          description: This field provide description for response code. Applies to debit and credit cards.
          example: APPROVED - WITH BALANCES
        transactionCode:
          type: string
          description: "Code assigned to particular transaction. This field is not populated in response when transaction status is Posted, instead description is populated in transaction type field. Applies to credit cards only.  \n- 253 - Sale  \n- 254 - Cash Advance  \n- 255 - Return  \n- 256 - Merchandise Sale Reversal  \n- 257 - Cash Advance Reversal  \n- 258 - ReturnReversal  \n- 259 - Merchandise Sale Amount Adjustment  \n- 260 - Cash Advance Amount Adjustment  \n- 261 - Return Amount Adjustment  \n- 271 - Payment  \n- 272 - Payment Reversal  \n- 273 - Payment Amount Adjustment  \n- 280 - Specific Credit Amount Adjustment  \n- 281 - Cash Advance Item Charge Refund  \n- 282 - Late Charge Refund  \n- 283 - Merchandise Finance Charge Refund  \n- 284 - Cash Advance Finance Charge Refund  \n- 285 - Backdated Payment Adjustment  \n- 286 - Merchandise Item Charge Refund  \n- 287 - Overlimit Charge Refund  \n- 288 - Credit Life Insurance Fee Refund  \n- 290 - Backdate Cash Advance and Sales Adjustment  \n- 370 - Small Balance Charge-off  \n- 371 - Charge Off Total Account  \n- 372 - Charge Off Cash Advance Interest  \n- 373 - Charge Off Billed Late Charges  \n- 374 - Charge Off Merchandise Interest and Service Charges  \n- 375 - Charge Off Credit Life Insurance  \n- 376 - Charge Off All Finance Charges  \n- 377 - Charge Off All Current Cash Advance Interest  \n- 378 - Charge Off All Current Merchandise Interest  \n- 379 - Charge Off Cycle-to-Date Late Charges  \n- 380 - Charge Off Billed Cash Advance Item Charges  \n- 381 - Charge Off Billed Merchandise Item Charges  \n- 382 - Charge Off Billed Overlimit Fees  \n- 383 - Charge Off Cycle-to-Date Cash Advance Item Charges  \n- 384 - Charge Off Cycle-to-Date Merchandise Item Charges  \n- 385 - Charge Off Cycle-to-Date Overlimit Fees  \n- 400 - Account Transfer  \n- 900 - Finance Charge (item charge)  \n- 959 - Reserved for restricted use  \n- 960 - Reserved for restricted use  \n- 961 - Late Charge  \n- 962 - Credit Life Insurance Charge  \n- 963 - Cash Advance Finance Charge  \n- 964 - Merchandise Finance Charge  \n- 965 - Overlimit Account Message  \n- 966 - Reserved for restricted use  \n- 967 - Account Level Processing Strategy Change Message  \n- 976 - Reserved for restricted use  \n- 978 - Reserved for restricted use  \n- 979 - Reserved for restricted use  \n- 981 - Account Balance Details for MULTRAN Accounts  \n- 984 - Backdated Cash Advance Finance Charge  \n- 985 - Backdated Payment Interest Adjustment  \n- 986 - Cash Advance Item Charge  \n- 987 - Merchandise Item Charge  \n- 988 - Overlimit Charge  \n- 989 - Interest Earned or Credit Interest  \n- 990 - Service Charge or Statement Charge  \n- 991 - Cash Advance Item Charge  \n- 992 - Fee or Finance Charge Rebate  \n- 993 - Backdated Payment or Cash Advance Adjustment  \n- 994 - Skip Payment Certificate Message  \n- 997 - Retail Special Details  \n- 998 - Airline Itinerary Special Details  \n- 999 - First Data use only.  \nBelow transaction codes and description are for the transaction status Pending or Declined.  \n- AA - Authorization adjustment  \n- AC - Activation code notification message for token provisioning via step-up authentication processing  \n- AK - Check authorization approved.  \n- AP - Preauthorization request approved  \n- AS - Account status inquiry service or payment account status inquiry  \n- CA - Cash advance authorization approved  \n- CD - Cash advance authorization declined  \n- CE - Cash advance authorization approved by expansion  \n- CO - Override declined cash advance  \n- CP - Cash advance authorization approved by positive identification  \n- CS - Cash referral  \n- CT - Cash advance authorization approved by name  \n- CX - Cash advance authorization manually declined  \n- DA - Duplicate authorization  \n- DC - Cash authorization approved without issuer contact  \n- DK - Check authorization declined  \n- DM - Merchandise authorization approved without issuer contact  \n- DP - Preauthorization request denied  \n- EC - Balance inquiry approved  \n- IA - Issuer’s adjustment  \n- IV - Reserved for restricted use  \n- KE - Check system error - declined  \n- KR - Return posted check  \n- MA - Merchandise authorization approved  \n- MC - In-store return  \n- MD - Merchandise authorization declined  \n- ME - Merchandise authorization approved by expansion  \n- MI - Right-time payment  \n- MO - Override declined merchandise authorization  \n- MP - Merchandise authorization approved by positive identification  \n- MR - Right-time pay/reversal  \n- MS - Merchandise referral  \n- MT - Merchandise authorization approved by name  \n- MX - Merchandise authorization manually declined  \n- PA - Permanent authorization request  \n- PK - Pay unposted check  \n- PR - Visa and Mastercard person-to-person payment transaction reversal  \n- PX - Visa and Mastercard person-to-person payment transaction decline  \n- PZ - Permanent authorization adjustment  \n- QA - Merchandise return adjustment  \n- QD - Merchandise return declined  \n- QQ - Reserved for restricted use  \n- QR - Merchandise return approved  \n- QZ - Merchandise return adjustment declined  \n- RK - Return unposted check  \n- TA - Account status check via a token provisioning request resulted in an approved response  \n- TD - Token provision decision  \n- TM - Token maintenance, such as activation, deactivation, suspension, exception, or replacement  \n- TN - Token has been granted, linked to the cardholder account, and provisioned  \n- VA - Private label ETC return posted at the time of return  \n- XC - Manual override cash advance authorization  \n- XM - Manual override merchandise authorization.  \n"
          example: "961"
        declinedTransactionDetails:
          $ref: '#/components/schemas/DeclinedTransactionDetails'
        pendingTransactionDetails:
          $ref: '#/components/schemas/PendingTransactionDetails'
        postedTransactionDetails:
          $ref: '#/components/schemas/PostedTransactionDetails'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
    TransactionV2:
      type: object
      properties:
        acquirerRefNum:
          type: string
          description: "Assigned by the network based on information provided by the acquirer. Can be used for network corrections. Applies to debit cards only.    \n"
          example: "222815000031"
        amtCharged:
          type: string
          description: |
            Contains the transaction amount on a forced authorization (120) or on a forced post clearing transaction (220). For a partially approved transaction, this is the amount approved. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a preauthorization response (110) or an authorization response (210), an amount displayed is a balance returned in the response. This could be the ledger or available balance. On a partial reversal, Amount 2 is the new amount that replaces the amount displayed in Amount 1. Applies to debit cards only.
          example: "0.00"
        authorizationCode:
          type: string
          description: |
            Authorization approval code, generated for approved transactions only. Applies to debit and credit cards.
          example: "000000"
        cardType:
          type: string
          description: Card type. Applies to debit and credit cards.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        eciMastercard:
          type: string
          description: "Electronic commerce indicator (ECI) provides information regarding the security level and authentication method used for an electronic commerce Debit Mastercard® transaction. Applies to debit cards only.  \nPossible Positions 1 and 2 values  \n- 21  -  Channel encryption; cardholder certificate not used  \n- 22  -  Masterpass-generated transaction  \n- 24  -  Digital Secure Remote Payment (DSRP) transaction  \n- 91  -  No security protocol; cardholder certificate not used.  \nPossible Position 3 values  \n- 0  -  Universal cardholder authentication field (UCAF) data collection – Is not supported by the merchant an Identity Check merchant has chosen not to undertake Identity Check on this transaction or identity Check failed authentication and merchant desires to proceed with transaction  \n- 1  -  UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains an attempts AAV  \n- 2  -  UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains a fully authenticated AAV)  \n- 3  -  UCAF data collection is supported by the merchant and UCAF (Mastercard assigned static AAV) must be present  \n- 4  -  Merchant has chosen to share authentication data within authorization; UCAF collection not supported  \n- 5  -  Reserved for future use  \n- 6  -  Merchant Risk-Based Decisioning  \n- 7  -  Partial Shipment or recurring payment; liability depends on the original UCAF values provided and matching with the original transaction  \n"
          example: "3"
        eciVisa:
          type: string
          description: "Electronic commerce indicator (ECI)—Visa. Provides information regarding the security level and authentication method used for an electronic commerce Visa Check transaction.  Applies to debit cards only.  \nPosition 4 - Mail/Phone/Electronic Commerce and Payment Indicator  \n- Space - POS Customer Present (POS Check Service Only)  \n- 1 - Single transaction of a mail/phone order  \n- 2 - Recurring transaction  \n- 3 - Installment payment  \n- 4 - Unknown classification/Other mail order  \n- 5 - Secure electronic commerce transaction  \n- 6 - Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure  \n- 7 - Non-authenticated security transaction  \n- 8 - Non-secure transaction  \n"
          example: "3"
        effectiveDate:
          type: string
          description: |
            Date when the transaction came into effect. Applies to credit cards only.
          format: date
        expirationDateMismatch:
          type: string
          description: |
            Indicates if an expiration date mismatch exists. Applies to debit cards only.
          example: "N"
        merchantCategoryCode:
          type: string
          description: |
            Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service. Applies to debit and credit cards.
          example: "0000"
        merchantCity:
          type: string
          description: |
            Regulation E City and State where terminal is located. Applies to debit and credit cards.
          example: MORRIS PLAINS
        merchantName:
          type: string
          description: |
            Merchant Name. Applies to debit and credit cards.
          example: STORE1
        merchantState:
          type: string
          description: "Merchant State  \nAL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  \nCA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  \nFM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  \nFL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI Hawaii  \nID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  \nLA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  \nMD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  \nMO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey  \nNM New Mexico | NY New York | NC North Carolina | ND North Dakota  \nMP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  \nOH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  \nPA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  \nSC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  \nVT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  \nWA Washington | WV West Virginia | WI Wisconsin | WY Wyoming  \n"
          example: NJ
        messageType:
          type: string
          description: "The combination of message type code and description for transaction message. Applies to debit cards only.  \n- 100- Pre-Auth Request  \n- 102- Pre-Auth Reversal  \n- 110- Preauthorization  \n- 120- Pre-Auth Stand In  \n- 121- Pre-Auth Adv Repeat  \n- 130- Auth Advice Resp  \n- 200- Request  \n- 202- Auth Reversal  \n- 210- Auth/Completion  \n- 220- Forced Completion  \n- 221- Advice Repeat  \n- 230- Advice Response  \n- 320- Batch Upload  \n- 330- Batch Upload Resp  \n- 420- Reversal  \n- 421- Advice Rev Repeat  \n- 430- Reversal Response  \n- 500- Batch Settl Request  \n- 510- Batch Settl Resp  \n- 800- Network Mgmt Req  \n- 810- Network Mgmt Resp  \n- 820- Network Mgmt Advice  \n"
          example: 210- Auth/Completion
        networkID:
          type: string
          description: |
            Specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction. Applies to debit cards only.
          example: 773002 - Maestro
        pinTransaction:
          type: string
          description: |
            Indicates if a PIN was used for the transaction. Valid values Yes or No. Applies to debit cards only.
          example: 1 - Yes
        posDataInputCapability:
          type: string
          description: "Indicates the capability of the terminal to enter the card number and expiration date into the system. Applies to debit cards only. \n"
          example: "2"
        posDataInputMode:
          type: string
          description: |
            Indicates the method used to input the information from the card to the terminal. Applies to debit cards only.
          example: 2 - Swipe
        preAuthAmt:
          type: string
          description: |
            Contains the transaction amount on a preauthorization response (110) or an authorization response (210). For a partially approved transaction, this is the amount approved. For a denied transaction, this is the requested amount. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a forced post preauthorization (120) or forced post clearing transaction (220), the clearing amount shown in Amount 2 is duplicated in Amount 1. On a reversal, Amount 1 is the amount to be reversed. Applies to debit cards only.
          example: "1.00"
        responseCode:
          type: string
          description: |
            Authorization response approval or denial code.  Applies to debit and credit cards.
          example: "000"
        responseCodeDescription:
          type: string
          description: |
            This field provide description for response code. Applies to debit and credit cards.
          example: APPROVED - NO BALANCES
        retrievalRefNumber:
          type: string
          description: |
            Reference Number supplied and retained by the message originator.Max length 12.Applies to debit cards only.
          example: "222815000031"
        sequenceNumber:
          type: string
          description: |
            Chronological numeric identifier for the transaction, assigned by the terminal. Applies to debit cards only.
          example: "000031"
        statusDescription:
          type: string
          description: |
            Combination of status code and description for transaction status. Applies to debit and credit cards.
          example: 64-PI LOST
        subResponseCode:
          type: string
          description: |
            Optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination. Applies to debit cards only.
          example: M
        subResponseCodeDescription:
          type: string
          description: |
            Description for sub response code. Applies to debit cards only.
          example: 96-M Error processing PIN
        terminalId:
          type: string
          description: |
            Identifier indicating the terminal where the transaction was performed. Applies to debit cards only
          example: VMDHDB03
        transactedCardNumber:
          type: string
          description: |
            CardNumber given for monetary(posted) transactions if available, otherwise blank. Applies to credit cards only.
          example: 400020XXXXXX4000
        transactionAmount:
          type: string
          description: |
            Amount on a particular transaction. Valid format is 0.00. Applies to debit and credit cards.
          example: "20.00"
        transactionCode:
          type: string
          description: "Code assigned to particular transaction. This field is not populated in response when transaction status is Posted, instead description is populated in transaction type field. Applies to credit cards only.  \n- 253 - Sale  \n- 254 - Cash Advance  \n- 255 - Return  \n- 256 - Merchandise Sale Reversal  \n- 257 - Cash Advance Reversal  \n- 258 - ReturnReversal  \n- 259 - Merchandise Sale Amount Adjustment  \n- 260 - Cash Advance Amount Adjustment  \n- 261 - Return Amount Adjustment  \n- 271 - Payment  \n- 272 - Payment Reversal  \n- 273 - Payment Amount Adjustment  \n- 280 - Specific Credit Amount Adjustment  \n- 281 - Cash Advance Item Charge Refund  \n- 282 - Late Charge Refund  \n- 283 - Merchandise Finance Charge Refund  \n- 284 - Cash Advance Finance Charge Refund  \n- 285 - Backdated Payment Adjustment  \n- 286 - Merchandise Item Charge Refund  \n- 287 - Overlimit Charge Refund  \n- 288 - Credit Life Insurance Fee Refund  \n- 290 - Backdate Cash Advance and Sales Adjustment  \n- 370 - Small Balance Charge-off  \n- 371 - Charge Off Total Account  \n- 372 - Charge Off Cash Advance Interest  \n- 373 - Charge Off Billed Late Charges  \n- 374 - Charge Off Merchandise Interest and Service Charges  \n- 375 - Charge Off Credit Life Insurance  \n- 376 - Charge Off All Finance Charges  \n- 377 - Charge Off All Current Cash Advance Interest  \n- 378 - Charge Off All Current Merchandise Interest  \n- 379 - Charge Off Cycle-to-Date Late Charges  \n- 380 - Charge Off Billed Cash Advance Item Charges  \n- 381 - Charge Off Billed Merchandise Item Charges  \n- 382 - Charge Off Billed Overlimit Fees  \n- 383 - Charge Off Cycle-to-Date Cash Advance Item Charges  \n- 384 - Charge Off Cycle-to-Date Merchandise Item Charges  \n- 385 - Charge Off Cycle-to-Date Overlimit Fees  \n- 400 - Account Transfer  \n- 900 - Finance Charge (item charge)  \n- 959 - Reserved for restricted use  \n- 960 - Reserved for restricted use  \n- 961 - Late Charge  \n- 962 - Credit Life Insurance Charge  \n- 963 - Cash Advance Finance Charge  \n- 964 - Merchandise Finance Charge  \n- 965 - Overlimit Account Message  \n- 966 - Reserved for restricted use  \n- 967 - Account Level Processing Strategy Change Message  \n- 976 - Reserved for restricted use  \n- 978 - Reserved for restricted use  \n- 979 - Reserved for restricted use  \n- 981 - Account Balance Details for MULTRAN Accounts  \n- 984 - Backdated Cash Advance Finance Charge  \n- 985 - Backdated Payment Interest Adjustment  \n- 986 - Cash Advance Item Charge  \n- 987 - Merchandise Item Charge  \n- 988 - Overlimit Charge  \n- 989 - Interest Earned or Credit Interest  \n- 990 - Service Charge or Statement Charge  \n- 991 - Cash Advance Item Charge  \n- 992 - Fee or Finance Charge Rebate  \n- 993 - Backdated Payment or Cash Advance Adjustment  \n- 994 - Skip Payment Certificate Message  \n- 997 - Retail Special Details  \n- 998 - Airline Itinerary Special Details  \n- 999 - First Data use only.  \nBelow transaction codes and description are for the transaction status Pending or Declined.  \n- AA - Authorization adjustment  \n- AC - Activation code notification message for token provisioning via step-up authentication processing  \n- AK - Check authorization approved.  \n- AP - Preauthorization request approved  \n- AS - Account status inquiry service or payment account status inquiry  \n- CA - Cash advance authorization approved  \n- CD - Cash advance authorization declined  \n- CE - Cash advance authorization approved by expansion  \n- CO - Override declined cash advance  \n- CP - Cash advance authorization approved by positive identification  \n- CS - Cash referral  \n- CT - Cash advance authorization approved by name  \n- CX - Cash advance authorization manually declined  \n- DA - Duplicate authorization  \n- DC - Cash authorization approved without issuer contact  \n- DK - Check authorization declined  \n- DM - Merchandise authorization approved without issuer contact  \n- DP - Preauthorization request denied  \n- EC - Balance inquiry approved  \n- IA - Issuer’s adjustment  \n- IV - Reserved for restricted use  \n- KE - Check system error - declined  \n- KR - Return posted check  \n- MA - Merchandise authorization approved  \n- MC - In-store return  \n- MD - Merchandise authorization declined  \n- ME - Merchandise authorization approved by expansion  \n- MI - Right-time payment  \n- MO - Override declined merchandise authorization  \n- MP - Merchandise authorization approved by positive identification  \n- MR - Right-time pay/reversal  \n- MS - Merchandise referral  \n- MT - Merchandise authorization approved by name  \n- MX - Merchandise authorization manually declined  \n- PA - Permanent authorization request  \n- PK - Pay unposted check  \n- PR - Visa and Mastercard person-to-person payment transaction reversal  \n- PX - Visa and Mastercard person-to-person payment transaction decline  \n- PZ - Permanent authorization adjustment  \n- QA - Merchandise return adjustment  \n- QD - Merchandise return declined  \n- QQ - Reserved for restricted use  \n- QR - Merchandise return approved  \n- QZ - Merchandise return adjustment declined  \n- RK - Return unposted check  \n- TA - Account status check via a token provisioning request resulted in an approved response  \n- TD - Token provision decision  \n- TM - Token maintenance, such as activation, deactivation, suspension, exception, or replacement  \n- TN - Token has been granted, linked to the cardholder account, and provisioned  \n- VA - Private label ETC return posted at the time of return  \n- XC - Manual override cash advance authorization  \n- XM - Manual override merchandise authorization.\n"
          example: "961"
        transactionDateTime:
          type: string
          description: |
            Date and Time when transaction was created. Applies to debit and credit cards.
          format: date-time
        transactionId:
          type: string
          description: |
            Unique system id for the record. Applies to debit cards only.
          example: '{"lifeCycleKey":"12323301232312331","activeKey":"0210","duID":"11348539120200526"}'
        transactionStatus:
          type: string
          description: |
            Status of the transaction. Possible values for debit are APPROVED, REVERSED and DECLINED.  Valid values for credit POSTED - PENDING - DECLINED - APPROVED - REVERSED
          example: APPROVED
        transactionType:
          type: string
          description: "Indicates the type of transaction made on the card. This contains the transactionCode description of status Posted transactions.  \nValid values for Debit -\n- Account Inquiry  \n- Balance Inquiry  \n- Check Cashing  \n- Credit  \n- Debit  \n- Deposit  \n- Deposit Cash Back  \n- Loan to Prepaid  \n- Member Verification  \n- Message  \n- Money Transfer Credit  \n- Money Transfer Dispense  \n- Money Transfer Funding  \n- Money Transfer Initiate  \n- Money Transfer Refund  \n- Payment  \n- Payment Enclosed  \n- Payment to Merchant  \n- PIN Select  \n- Refund from Merchant  \n- Special Purchase  \n- Statement Print  \n- Third Party Bill Payment Return  \n- Transfer  \n- Withdrawal  \nValid Values for Credit when transaction status is Posted - \n- Account Balance Details for MULTRAN Accounts  \n- Account Level Processing Strategy Change Message  \n- Account Transfer  \n- Airline Itinerary  \n- Backdated Cash Advance Finance Charge  \n- Backdated Cash Advance and Sales Adjustment  \n- Backdated Payment Adjustment  \n- Backdated Payment or Cash Advance Adjustment  \n- Backdated Payment Interest Adjustment  \n- Cash Advance  \n- Cash Advance Amount Adjustment  \n- Cash Advance Finance Charge  \n- Cash Advance Finance Charge Refund  \n- Cash Advance Item Charge  \n- Cash Advance Item Charge Refund  \n- Cash Advance Reversal  \n- Charge Off All Finance Charges  \n- Charge Off Billed Cash Advance Item Charges  \n- Charge Off Billed Merchandise Item Charges  \n- Charge Off Billed Late Charges \n- Charge Off Billed Overlimit Fees  \n- Charge Off Cash Advance Interest  \n- Charge Off Credit Life Insurance  \n- Charge Off All Current Cash Advance Interest  \n- Charge Off All Current Merchandise Interest  \n- Charge Off Cycle-to-Date Cash Advance Item Charges  \n- Charge Off Cycle-to-Date Late Charges  \n- Charge Off Cycle-to-Date Merchandise Item Charges  \n- Charge Off Cycle-to-Date Overlimit Fees  \n- Charge Off Merchandise Interest and Service Charges  \n- Charge Off Total Account  \n- Credit Life Insurance Fee Refund  \n- Credit Life Insurance Charge  \n- Fee or Finance Charge Rebate  \n- Finance Charge (item charge)  \n- Interest Earned or Credit Interest  \n- Late Charge  \n- Late Charge Refund  \n- Merchandise Finance Charge  \n- Merchandise Finance Charge Refund  \n- Merchandise Item Charge  \n- Merchandise Item Charge Refund  \n- Merchandise Sale Amount Adjustment  \n- Merchandise Sale Reversal  \n- Overlimit Account Message  \n- Overlimit Charge  \n- Overlimit Charge Refund  \n- Payment  \n- Payment Amount Adjustment  \n- Payment Reversal  \n- Retail Special Details  \n- Return  \n- Return Amount Adjustment  \n- Return Reversal  \n- Reserved for restricted use  \n- Sale  \n- Skip Payment Certificate Message  \n- Service Charge or Statement Charge  \n- Small Balance Charge-off  \n- Special Details  \n- Specific Credit Amount Adjustment  \nTransaction status Pending or Declined for CREDIT -  \n- Account status inquiry service or payment account status inquiry  \n- Account status check via a token provisioning request resulted in an approved response  \n- Account status inquiry service or payment account status inquiry  \n- Activation code notification message for token provisioning via step-up authentication processing  \n- Authorization adjustment  \n- Balance inquiry approved  \n- Cash advance authorization approved  \n- Cash advance authorization approved by expansion  \n- Cash advance authorization approved by name  \n- Cash advance authorization approved by positive identification  \n- Cash advance authorization declined  \n- Cash advance authorization manually declined  \n- Cash authorization approved without issuer contact  \n- Cash referral  \n- Check authorization approved  \n- Check authorization declined  \n- Check system error - declined  \n- Duplicate authorization  \n- In-store return  \n- Issuer’s adjustment  \n- Manual override cash advance authorization  \n- Manual override merchandise authorization  \n- Merchandise authorization approved  \n- Merchandise authorization approved by expansion  \n- Merchandise authorization approved by name  \n- Merchandise authorization approved by positive identification  \n- Merchandise authorization approved without issuer contact  \n- Merchandise authorization declined  \n- Merchandise authorization manually declined  \n- Merchandise referral  \n- Merchandise return adjustment  \n- Merchandise return adjustment declined  \n- Merchandise return approved  \n- Merchandise return declined  \n- Override declined cash advance  \n- Override declined merchandise authorization  \n- Pay unposted check  \n- Permanent authorization adjustment  \n- Permanent authorization request  \n- Preauthorization request approved  \n- Preauthorization request denied  \n- Private label ETC return posted at the time of return  \n- Reserved for restricted use  \n- Return posted check  \n- Return unposted check  \n- Right-time payment  \n- Right-time pay/reversal  \n- Token has been granted, linked to the cardholder account and provisioned  \n- Token maintenance such as activation, deactivation, suspension, exception, or replacement  \n- Token provision decision  \n- Visa and Mastercard person-to-person payment transaction reversal  \n- Visa and Mastercard person-to-person payment transaction decline  \n"
          example: WITHDRAWA
        unmatchedCompletionFlag:
          type: string
          description: |
            Indicates unmatched completion flag. Applies to debit cards only.
          example: "N"
        debitOnly:
          $ref: '#/components/schemas/debitOnlyTransactionV2'
        creditOnly:
          $ref: '#/components/schemas/creditOnlyTransactionV2'
    DeclinedTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        transactionDescription:
          type: string
          description: Description of the transaction.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
          example: "6011"
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        transactionCode:
          type: string
          description: Specific code provided for each transaction.
          example: ME
        declinedReasonCode:
          type: string
          description: Reason code and description for declined transactions.
          example: 64-PI LOST
        expandedReasonCode:
          type: string
          description: Code for expanded reason.
        authorizationResponseDescription:
          type: string
          description: Description of the authorization response.
      description: Tag applies to credit cards only.
    PendingTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        transactionDescription:
          type: string
          description: Describes the transaction.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        posEntryModeCode:
          type: string
          description: Point of Sale (POS) entry mode code
        enteredExpirationDate:
          type: string
          description: Entered expiration date.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        transactionCode:
          type: string
          description: Code associated with particular transaction.
        declinedReasonCode:
          type: string
          description: Reason code for declined transaction.
        expandedReasonCode:
          type: string
          description: The expanded reason code.
        originalAuthAdjustmentAmount:
          type: string
          description: Any adjustment done on original authorized amount. For an example, if authorized amount is 100 and transaction amount is 60, 40 is the adjustment amount.
      description: Tag applies to credit cards only.
    PostedTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        cardholderAccountNumber:
          type: string
          description: The cardholderAccountNumber is used as control account number in case of consolidated billing on subordinate account transaction.
        transactionDescription:
          type: string
          description: Description of transaction
        promotionId:
          type: string
          description: Identifies the promotion to which the transaction was posted.
        authorizationCode:
          type: string
          description: 5- or 6-digit code provided by the issuer or its agent to indicate approval of the transaction.
        postingDate:
          type: string
          description: Posting date of the transaction.
          format: date
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction id
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
        originalAuthAdjustmentAmount:
          type: string
          description: Any adjustment done on original authorized amount. For an example if authorized amount is 100 and transaction is 60, 40 is the adjustment amount.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        transactionCode:
          type: string
          description: Specific code provided for each transaction.
      description: Tag applies to credit cards only.
    TransactionDetails:
      type: object
      properties:
        entryMode:
          type: string
          description: Method used to input the information from the card to the terminal.
          example: 2 - Swipe
        enteredExpirationDate:
          type: string
          description: Expiration date entered for the transaction.
          format: MMYY
          example: "1122"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction.
          example: 1 - Yes
        terminalPinCapable:
          type: string
          description: Indicates the ability of the terminal to accept PIN.
          example: "No"
        international:
          type: string
          description: Indicates if the transaction was international.
          example: "No"
        eCommerce:
          type: string
          description: Indicates if the transaction was eCommerce.
        avsResult:
          type: string
          description: Address verification service result.
        avsAddress:
          type: string
          description: Address provided for address verification.
        settlementAmount:
          type: string
          description: Amount paid to merchant.
          example: "1100.00"
          x-encrypted: "N"
        transactionfeeAmount:
          type: string
          description: Fee amount charged on transaction.
          example: "20.00"
        transactionCurrencyCode:
          type: string
          description: Currency code for transaction amount.
        settlementCurrencyCode:
          type: string
          description: Currency Code for the settlement amount.
        settlementConversionRate:
          type: string
          description: Conversion Rate applied on settlement amount.
        reversalreason:
          type: string
          description: Reason for reversal transaction.
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
        cardSequenceNumber:
          type: string
          description: Card Sequence Number distinguishes among separate cards having the same PAN.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction identifier of particular transactions.
        pinVerified:
          type: string
          description: Indicates if PIN verification took place on the client platform.
        availableUsage:
          type: string
          description: Amount of available credit on the account.
        transactionAmtoriginal:
          type: string
          description: Original amount of funds requested by the cardholder in the transaction currency (US Dollars). This amount includes cashback and surcharge fees and is exclusive of ISA and CCA fees.
        systemAudit:
          type: string
          description: Number a message initiator assigns to uniquely identify a transaction.
        messageId:
          type: string
          description: Identifier for the ISO message type used for this transaction.
        fraudDecision:
          type: string
          description: Decision returned by the third-party fraud interface.
        falconScore:
          type: string
          description: Score assigned by third-party fraud interface for authorization sent online.
        merchantCode:
          type: string
          description: Indicates the merchant category code associated with the transaction.
        acquiringCountryCode:
          type: string
          description: Code of the country where the acquiring institution is located.
        posMode:
          type: string
          description: Numeric codes to indicate the method by which the PAN was entered into the interchange system and to indicate the POS terminal PIN entry capabilities.
        posCode:
          type: string
          description: Identifies the Point of Service   condition code. It describes the condition under which the transaction took place at POS.
        acquiringId:
          type: string
          description: Acquiring Institution ID code identifies the Acquiring Institution Or Merchant Bank for this transaction. MC - 5 to 11 digits. VISA - 6 to 11 digits.
        cardAcceptorTermId:
          type: string
          description: Identifies a terminal at the card acceptor location of acquiring institutions or merchant POS systems. The terminal ID should be printed on all transaction receipts in ATM and POS transactions where the terminal is capable of generating customer receipts.
        cardAcceptorIdCode:
          type: string
          description: Identification number assigned to the establishment where the transaction was acquired.
        cardAcceptorName:
          type: string
          description: Indicates the name of the establishment where the transaction was acquired.
        cardAcceptorCity:
          type: string
          description: Indicates the city where the call originated.
        cavvResult:
          type: string
          description: Indicates the Cardholder Authentication Verification Value (CAVV) results code that identifies the outcome of CAVV validation. The value in field also indicates who performed the authentication, either Visa or the issuer, and the classification of the transaction.
        cvvResult:
          type: string
          description: Defines outcome of CVV validation.
        originalResponseCode:
          type: string
          description: Original response code from the original transaction. For an instance, when V.I.P. encounters a duplicate transaction, this field contains the field 39 response code from the original transaction.
        additionalData1:
          type: string
          description: Any optional data received on the response.
        additionalData2:
          type: string
          description: Any optional data received on the response.
        avsOptionCode:
          type: string
          description: Address Verification Service (AVS) Request indicates that verification of the cardholder billing address is requested in the authorization message.
        cvcResultCode:
          type: string
          description: The result code of CVC (Card Verification Code).
        tagData:
          type: string
          description: Identifies the electronic commerce indicators representing the security level and cardholder authentication associated with the transaction.
        tagCode:
          type: string
          description: Indicates whether the merchant terminal supports a specific program or service.
        tagSvcRsn:
          type: string
          description: Notifies the issuer of the On-behalf Service performed on the transaction and the results. Sub element,71 will support up to ten services for a transaction.
        terminalIndicator:
          type: string
          description: This field maps to Field 55 Tag 95— Terminal Verification Results.This Tag maps to Field 131—Terminal Verification Results (TVR).Field 131 is carried in VSDC transactions and contains indicators from a terminal perspective.  The terminal records the results of offline and online processing by setting a series of indicators in this field.   These indicators are available to clients in the online message and clearing transaction.
        riskCodeOne:
          type: string
          description: Field 62.22, positions 1-2 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Account Risk Condition Code (CARCC) related to a high-risk even in the Compromised Account Management System (CAMS).
        riskCodeTwo:
          type: string
          description: Field 62.22, positions 3-4 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Event Reference (CER) ID related to a high-risk CAMS event.
        riskCodeThree:
          type: string
          description: Field 62.22, positions 5-6 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.
        riskReasonCodeOne:
          type: string
          description: Field 62.21, position 3 is.an alphanumeric combination that will act as a key to explain the risk score model.
        riskReasonCodeTwo:
          type: string
          description: Field 62.21, position 4 is an alphanumeric combination that will act as a key to explain the risk score model.
        riskScore:
          type: string
          description: Field 62.21, positions 1-2 is a Visa private-use field that contains online risk assessment information from Advanced Authorization. This information assists issuers in the authorization decision-making process.This value indicates the degree of risk associated with a transaction. This two-byte transaction risk score is represented by a numeric value from 01–99.
        messageReasonCode:
          type: string
          description: Code explaining the reason for an online acquirer advice, reversal, or partial reversal.
        networkID:
          type: string
          description: Code that specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction.
        mcOriginalTypeId:
          type: string
          description: Original type id
        mcOriginalRef:
          type: string
          description: Original reference with the merchant.
        avsPostalCode:
          type: string
          description: Identifies the cardholder postal code and street address that is used for certain types of verification.
        cvvCVVtwo:
          type: string
          description: The CVV2/CVC2 value that is printed on the signature panel of Visa and Mastercard plastics. This value is made available for issuers that want to validate the CVV2/CVC2 value themselves. The value will only be passed to an issuer if provided by the acquirer.  Provided transactions in which the debit card is not present.
        applicationTranCounter:
          type: string
          description: Count of the transactions performed within the card application. The count is incremented by one each time a transaction is initiated. Multiple authorization requests for the same transaction will have the same ATC; for example, when online PIN fails and the next authorization represents a different PIN try for the same transaction, the ATC will be the same. For reversals and advices, the ATC is the value from the original message.
        appInterchangeProfile:
          type: string
          description: Field 138 is carried in VSDC transactions and provides a series of indicators that reflect the specific functions supported by the chip card account, for example, whether cardholder verification is supported.This field maps to Field 55, Tag 82—Application Interchange Profile.
        terminalCountryCode:
          type: string
          description: This field is carried in VISA SMART DEBIT SMART CREDIT (VSDC) transactions and identifies the country where the merchant terminal is located. A leading zero is required to pad the first unused half-byte of this field. The zero is filler and is not part of the code.This field maps to Field 55, Tag 9F1A—Terminal Country Code.
        stateCode:
          type: string
          description: Originating Center State Postal Code
        generalDetails:
          $ref: '#/components/schemas/GeneralDetails'
        amountDetails:
          $ref: '#/components/schemas/AmountDetails'
        networkInfo:
          $ref: '#/components/schemas/NetworkInfo'
        tokenAndEmvInfo:
          $ref: '#/components/schemas/TokenAndEmvInfo'
        riskInfo:
          $ref: '#/components/schemas/RiskInfo'
        acquirerInfo:
          $ref: '#/components/schemas/AcquirerInfo'
      description: Applies to debit cards only.
    debitOnlyTransactionV2:
      type: object
      properties:
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetailsV2'
    creditOnlyTransactionV2:
      type: object
      properties:
        declinedTransactionDetails:
          $ref: '#/components/schemas/DeclinedTransactionDetailsV2'
        pendingTransactionDetails:
          $ref: '#/components/schemas/PendingTransactionDetailsV2'
        postedTransactionDetails:
          $ref: '#/components/schemas/PostedTransactionDetailsV2'
    DeclinedTransactionDetailsV2:
      type: object
      properties:
        authorizationResponseDescription:
          type: string
          description: |
            Description of the authorization response.
          example: PI CLOSED
        declinedReasonCode:
          type: string
          description: |
            Reason code and description for declined transactions.
          example: 63 - PI CLOSED
        expandedReasonCode:
          type: string
          description: |
            Code for expanded reason.
          example: ""
        merchantCategoryCode:
          type: string
          description: |
            Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
          example: "5411"
        merchantNumber:
          type: string
          description: |
            Identifies the merchant where the transaction originated.
          example: "443011000000018"
        transactionAccountNumber:
          type: string
          description: |
            In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
          example: "123456789"
        transactionCode:
          type: string
          description: |
            Specific code provided for each transaction.
          example: CD
        transactionDescription:
          type: string
          description: |
            Description of the transaction.
          example: MERCHANT ACCOUNT
      description: Tag applies to credit cards only.
    PendingTransactionDetailsV2:
      type: object
      properties:
        authorizationCode:
          type: string
          description: |
            Authorization approval code for the transaction.
          example: ""
        declinedReasonCode:
          type: string
          description: "Reason code for declined transaction. \n"
          example: ""
        enteredExpirationDate:
          type: string
          description: |
            Entered expiration date.
          example: ""
        expandedReasonCode:
          type: string
          description: |
            The expanded reason code.
          example: ""
        merchantCategoryCode:
          type: string
          description: |
            Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
          example: ""
        merchantNumber:
          type: string
          description: |
            Identifies the merchant where the transaction originated.
          example: ""
        originalAuthAdjustmentAmount:
          type: string
          description: "Any adjustment done on original authorized amount. For an example, if authorized amount is 100 and transaction amount is 60, 40 is the adjustment amount. \n"
          example: ""
        posEntryModeCode:
          type: string
          description: "Point of Sale (POS) entry mode code \n"
          example: ""
        transactionAccountNumber:
          type: string
          description: |
            In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
          example: ""
        transactionCode:
          type: string
          description: "Code associated with particular transaction.  \n"
          example: ""
        transactionDescription:
          type: string
          description: |
            Describes the transaction.
          example: ""
      description: Tag applies to credit cards only.
    PostedTransactionDetailsV2:
      type: object
      properties:
        authorizationCode:
          type: string
          description: |
            5- or 6-digit code provided by the issuer or its agent to indicate approval of the transaction.
          example: "000000"
        cardholderAccountNumber:
          type: string
          description: |
            The cardholderAccountNumber is used as control account number in case of consolidated billing on subordinate account transaction.
          example: "443011000000018"
        detailTransactionIdentifier:
          type: string
          description: "Detail about transaction id  \n"
          example: "000000000000000"
        merchantCategoryCode:
          type: string
          description: |
            Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
          example: "00000"
        merchantNumber:
          type: string
          description: |
            Identifies the merchant where the transaction originated.
          example: "443011000000398"
        originalAuthAdjustmentAmount:
          type: string
          description: |
            Any adjustment done on original authorized amount. For an example if authorized amount is 100 and transaction is 60, 40 is the adjustment amount.
          example: ""
        postingDate:
          type: string
          description: "Posting date of the transaction. \n"
          example: 2021-10-14T00:00:00.000+0000
        promotionId:
          type: string
          description: |
            Identifies the promotion to which the transaction was posted.
          format: date
        referenceNumber:
          type: string
          description: "Reference number assigned to the transaction.   \n"
          example: ""
        transactionAccountNumber:
          type: string
          description: |
            In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
          example: ""
        transactionCode:
          type: string
          description: "Specific code provided for each transaction.  \n"
          example: ""
        transactionDescription:
          type: string
          description: |
            Description of transaction
          example: ""
      description: Tag applies to credit cards only.
    TransactionDetailsV2:
      type: object
      properties:
        acquiringCountryCode:
          type: string
          description: Code of the country where the acquiring institution is located.
          example: ""
        acquiringId:
          type: string
          description: Acquiring Institution ID code identifies the Acquiring Institution Or Merchant Bank for this transaction. MC - 5 to 11 digits. VISA - 6 to 11 digits.
          example: ""
        additionalData1:
          type: string
          description: Any optional data received on the response.
          example: ""
        additionalData2:
          type: string
          description: Any optional data received on the response.
          example: ""
        appInterchangeProfile:
          type: string
          description: Field 138 is carried in VSDC transactions and provides a series of indicators that reflect the specific functions supported by the chip card account, for example, whether cardholder verification is supported.This field maps to Field 55, Tag 82—Application Interchange Profile.
          example: ""
        applicationTranCounter:
          type: string
          description: Count of the transactions performed within the card application. The count is incremented by one each time a transaction is initiated. Multiple authorization requests for the same transaction will have the same ATC; for example, when online PIN fails and the next authorization represents a different PIN try for the same transaction, the ATC will be the same. For reversals and advices, the ATC is the value from the original message.
          example: ""
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
          example: ""
        availableUsage:
          type: string
          description: Amount of available credit on the account.
          example: ""
        avsAddress:
          type: string
          description: |
            Address provided for address verification.
          example: ""
        avsOptionCode:
          type: string
          description: Address Verification Service (AVS) Request indicates that verification of the cardholder billing address is requested in the authorization message.
          example: ""
        avsPostalCode:
          type: string
          description: Identifies the cardholder postal code and street address that is used for certain types of verification.
          example: ""
        avsResult:
          type: string
          description: Address verification service result.
          example: ""
        cardAcceptorCity:
          type: string
          description: Indicates the city where the call originated.
          example: ""
        cardAcceptorIdCode:
          type: string
          description: Identification number assigned to the establishment where the transaction was acquired.
          example: ""
        cardAcceptorName:
          type: string
          description: Indicates the name of the establishment where the transaction was acquired.
          example: ""
        cardAcceptorTermId:
          type: string
          description: Identifies a terminal at the card acceptor location of acquiring institutions or merchant POS systems. The terminal ID should be printed on all transaction receipts in ATM and POS transactions where the terminal is capable of generating customer receipts.
          example: ""
        cardSequenceNumber:
          type: string
          description: Card Sequence Number distinguishes among separate cards having the same PAN.
          example: ""
        cavvResult:
          type: string
          description: Indicates the Cardholder Authentication Verification Value (CAVV) results code that identifies the outcome of CAVV validation. The value in field also indicates who performed the authentication, either Visa or the issuer, and the classification of the transaction.
          example: ""
        cvcResultCode:
          type: string
          description: The result code of CVC (Card Verification Code).
          example: ""
        cvvCVVtwo:
          type: string
          description: The CVV2/CVC2 value that is printed on the signature panel of Visa and Mastercard plastics. This value is made available for issuers that want to validate the CVV2/CVC2 value themselves. The value will only be passed to an issuer if provided by the acquirer.  Provided transactions in which the debit card is not present.
          example: ""
        cvvResult:
          type: string
          description: Defines outcome of CVV valid.
          example: ""
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction identifier of particular transactions.
          example: ""
        eCommerce:
          type: string
          description: Indicates if the transaction was eCommerce.
          example: ""
        enteredExpirationDate:
          type: string
          description: Expiration date entered for the transaction.
          format: MMYY
          example: "1122"
        entryMode:
          type: string
          description: |
            Method used to input the information from the card to the terminal.
          example: 2 - Swip
        falconScore:
          type: string
          description: Score assigned by third-party fraud interface for authorization sent online.
          example: ""
        fraudDecision:
          type: string
          description: Decision returned by the third-party fraud interface.
          example: ""
        international:
          type: string
          description: |
            Indicates if the transaction was international.
          example: "No"
        mcOriginalRef:
          type: string
          description: Original reference with the merchant.
          example: ""
        mcOriginalTypeId:
          type: string
          description: Original type id
          example: ""
        merchantCode:
          type: string
          description: Indicates the merchant category code associated with the transaction.
          example: ""
        messageId:
          type: string
          description: Identifier for the ISO message type used for this transaction.
          example: ""
        messageReasonCode:
          type: string
          description: Code explaining the reason for an online acquirer advice, reversal, or partial reversal.
          example: ""
        networkID:
          type: string
          description: Code that specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction.
          example: ""
        originalResponseCode:
          type: string
          description: Original response code from the original transaction. For an instance, when V.I.P. encounters a duplicate transaction, this field contains the field 39 response code from the original transaction.
          example: ""
        pinTransaction:
          type: string
          description: |
            Indicates if a PIN was used for the transaction.
          example: 1 - Yes
        pinVerified:
          type: string
          description: Indicates if PIN verification took place on the client platform.
          example: ""
        posCode:
          type: string
          description: Identifies the Point of Service   condition code. It describes the condition under which the transaction took place at POS.
          example: ""
        posMode:
          type: string
          description: Numeric codes to indicate the method by which the PAN was entered into the interchange system and to indicate the POS terminal PIN entry capabilities.
          example: ""
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
          example: ""
        reversalreason:
          type: string
          description: Reason for reversal transaction.
          example: ""
        riskCodeOne:
          type: string
          description: Field 62.22, positions 1-2 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Account Risk Condition Code (CARCC) related to a high-risk even in the Compromised Account Management System (CAMS).
          example: ""
        riskCodeTwo:
          type: string
          description: Field 62.22, positions 3-4 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Event Reference (CER) ID related to a high-risk CAMS event.
          example: ""
        riskCodeThree:
          type: string
          description: Field 62.22, positions 5-6 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.
          example: ""
        riskReasonCodeOne:
          type: string
          description: Field 62.21, position 3 is.an alphanumeric combination that will act as a key to explain the risk score model.
          example: ""
        riskReasonCodeTwo:
          type: string
          description: Field 62.21, position 4 is an alphanumeric combination that will act as a key to explain the risk score model.
          example: ""
        riskScore:
          type: string
          description: Field 62.21, positions 1-2 is a Visa private-use field that contains online risk assessment information from Advanced Authorization. This information assists issuers in the authorization decision-making process.This value indicates the degree of risk associated with a transaction. This two-byte transaction risk score is represented by a numeric value from 01–99.
          example: ""
        settlementAmount:
          type: string
          description: Amount paid to merchant.
          example: "1100.00"
          x-encrypted: "N"
        settlementConversionRate:
          type: string
          description: Conversion Rate applied on settlement amount.
          example: ""
        settlementCurrencyCode:
          type: string
          description: Currency Code for the settlement amount.
          example: ""
        stateCode:
          type: string
          description: Originating Center State Postal Code
          example: ""
        systemAudit:
          type: string
          description: Number a message initiator assigns to uniquely identify a transaction.
          example: ""
        tagCode:
          type: string
          description: Indicates whether the merchant terminal supports a specific program or service.
          example: ""
        tagData:
          type: string
          description: Identifies the electronic commerce indicators representing the security level and cardholder authentication associated with the transaction.
          example: ""
        tagSvcRsn:
          type: string
          description: Notifies the issuer of the On-behalf Service performed on the transaction and the results. Sub element,71 will support up to ten services for a transaction.
          example: ""
        terminalCountryCode:
          type: string
          description: This field is carried in VISA SMART DEBIT SMART CREDIT (VSDC) transactions and identifies the country where the merchant terminal is located. A leading zero is required to pad the first unused half-byte of this field. The zero is filler and is not part of the code.This field maps to Field 55, Tag 9F1A—Terminal Country Code.
        terminalIndicator:
          type: string
          description: This field maps to Field 55 Tag 95— Terminal Verification Results.This Tag maps to Field 131—Terminal Verification Results (TVR).Field 131 is carried in VSDC transactions and contains indicators from a terminal perspective.  The terminal records the results of offline and online processing by setting a series of indicators in this field.   These indicators are available to clients in the online message and clearing transaction.
          example: ""
        terminalPinCapable:
          type: string
          description: |
            Indicates the ability of the terminal to accept PIN.
          example: "No"
        transactionAmtoriginal:
          type: string
          description: Original amount of funds requested by the cardholder in the transaction currency (US Dollars). This amount includes cashback and surcharge fees and is exclusive of ISA and CCA fees.
          example: ""
        transactionCurrencyCode:
          type: string
          description: Currency code for transaction amount.
          example: ""
        transactionfeeAmount:
          type: string
          description: Fee amount charged on transaction.
          example: "20.00"
        generalDetails:
          $ref: '#/components/schemas/GeneralDetailsV2'
        amountDetails:
          $ref: '#/components/schemas/AmountDetailsV2'
        networkInfo:
          $ref: '#/components/schemas/NetworkInfoV2'
        tokenAndEmvInfo:
          $ref: '#/components/schemas/TokenAndEmvInfoV2'
        riskInfo:
          $ref: '#/components/schemas/RiskInfoV2'
        acquirerInfo:
          $ref: '#/components/schemas/AcquirerInfoV2'
      description: Applies to debit cards only.
    TerminalTransactionRequest:
      type: object
      properties:
        terminalId:
          type: string
          description: Eight-character terminal identifier indicating the terminal where the transactions were performed.
          example: VMDIEOS1
          x-encrypted: "N"
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/TerminalTransactionFilterCriteria'
    TerminalTransactionFilterCriteria:
      type: object
      properties:
        filterBy:
          type: string
          description: "Type of filter to be applied to narrow down terminal transactions search. One or many filter combinations are allowed.  \n- MERCHANT_NAME - Merchant Name.  \n- AMOUNT_FROM - Minimum amount user wish to choose. Valid format is 0.00.  \n- AMOUNT_TO - Maximum amount user wish to choose. Valid format is 0.00.  \n- FROM_DATETIME - Start date and time user wish to choose. Valid Format is \"yyyy-MM-dd'T'HH:mm:ssZ\".  \n- TO_DATETIME - Ending date user wish to choose. Valid format is \"yyyy-MM-dd'T'HH:mm:ssZ\".  \n- STATUS - Status of Transaction for debit. For debit transactions valid status are APPROVED, DECLINED and REVERSED.  \n- TRANSACTION_TYPE - Describes the type of transaction done on card.For values refer field name transactionType.  \n- MESSAGE_TYPE - Message based on activity done on the transaction. Applies to Debit only. For values refer field name MessageType.  \n- CARDNUMBER - Card number on which transaction is done.  \n- TERMINALFILOGO - The Terminal FI Logo.  \n- CARDFILOGO - The Card FI Logo.  \n- SYSTEM_RECORD_ID - The ID that uniquely identifies the transaction. Mapped to the lifecycle key.  \n- SEQUENCE_NUMBER - Chronological numeric identifier for the transaction.  \n- RETRIEVAL_REF_NUMBER - Transaction identifier typically assigned by the acquirer or transaction originator.\n"
          example: MERCHANT_NAME
          enum:
          - MERCHANT_NAME
          - AMOUNT_FROM
          - AMOUNT_TO
          - FROM_DATETIME
          - TO_DATETIME
          - STATUS
          - TRANSACTION_CODE
          - MESSAGE_TYPE
          - CARDNUMBER
          - TERMINALFILOGO
          - CARDFILOGO
          - SYSTEM_RECORD_ID
          - SEQUENCE_NUMBER
          - RETRIEVAL_REF_NUMBER
        filterValue:
          type: string
          description: filterBy value by which transactions are filtered.
          example: Store1
    TerminalTransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TerminalTransaction'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    TerminalTransaction:
      type: object
      properties:
        systemRecordId:
          type: string
          description: Unique system id for the record.
        cardNumber:
          type: string
          description: Card number on which transaction is done. Card should be the value which was passed from request.
          example: 400010XXXXXX3000
        memberNumber:
          type: string
          description: Member number associated with the card. Applies to debit cards only. Not used when searching all transactions.
          example: "0"
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal. Applies to debit cards only.
          example: "000009"
        retrievalRefNumber:
          type: string
          description: Reference Number supplied and retained by the message originator.Max length 12.Applies to debit cards only.
          example: "080000100003"
        subResponseCode:
          type: string
          description: Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.This field is applicable only for Debit.
        subResponseCodeDescription:
          type: string
          description: This field provide description for sub response code.Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.This field is applicable only for Debit.
        preAuthAmt:
          type: string
          description: Contains the transaction amount on a preauthorization response (110) or an authorization response (210). For a partially approved transaction, this is the amount approved. For a denied     transaction, this is the requested amount. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a forced post preauthorization (120) or forced post clearing transaction (220), the clearing amount is shown in Amount 2 is duplicated in Amount 1. On a reversal, Amount 1 is the amount to be reversed
          example: "1299.00"
        amtCharged:
          type: string
          description: Contains the transaction amount on a forced authorization (120) or on a forced post clearing transaction (220). For a partially approved transaction,this is the amount approved. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a preauthorization response (110) or an authorization response (210), an amount displayed is a balance returned in the response. This could be the ledger or available balance. On a partial reversal, Amount 2 is the new amount that replaces the amount displayed in Amount 1.
          example: "1299.00"
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction. It is generated for approved transactions only.
          example: "050821"
        terminalId:
          type: string
          description: Terminal identifier indicating the terminal where the transaction was performed.
          example: VMDIEOS1
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction.National code that classifies the card acceptor’s type of business, product, or service
          example: "6011"
        merchantCity:
          type: string
          description: Regulation E City and State where terminal is located.
          example: New Jersey
        merchantState:
          type: string
          description: "Merchant State  \nAL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  \nCA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  \nFM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  \nFL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI Hawaii  \nID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  \nLA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  \nMD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  \nMO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey  \nNM New Mexico | NY New York | NC North Carolina | ND North Dakota  \nMP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  \nOH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  \nPA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  \nSC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  \nVT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  \nWA Washington | WV West Virginia | WI Wisconsin | WY Wyoming  \n"
          example: NJ
        eciMastercard:
          type: string
          description: "Electronic commerce indicator (ECI) provides information regarding the security level and authentication method used for an electronic commerce Debit Mastercard® transaction.  \nPositions 1 and 2 can be as follows - \n- 21 - Channel encryption; cardholder certificate not used  \n- 22 - Masterpass-generated transaction  \n- 24 - Digital Secure Remote Payment (DSRP) transaction  \n- 91 - No security protocol; cardholder certificate not used.  \nPosition 3 can be as follows -\n- 0 - Universal cardholder authentication field (UCAF) data collection – Is not supported by the merchant —or— – An Identity Check merchant has chosen not to undertake Identity Check on this transaction —or— – Identity Check failed authentication and merchant desires to proceed with transaction  \n- 1 - UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains an attempts AAV)  \n- 2 - UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains a fully authenticated AAV)  \n- 3 - UCAF data collection is supported by the merchant and UCAF (Mastercard assigned static AAV) must be present  \n- 4 - Merchant has chosen to share authentication data within authorization; UCAF collection not supported  \n- 5 - Reserved for future use  \n- 6 - Merchant Risk-Based Decisioning  \n- 7 - Partial Shipment or recurring payment; liability depends on the original UCAF values provided and matching with the original transaction\n"
          example: "3"
        eciVisa:
          type: string
          description: "Electronic commerce indicator (ECI)—Visa. Provides information regarding the security level and authentication method used for an electronic commerce Visa Check transaction.  \nPosition 4 Mail/Phone/Electronic Commerce and Payment Indicator  \n- Space - POS Customer Present (POS Check Service Only)  \n- 1 - Single transaction of a mail/phone order  \n- 2 - Recurring transaction  \n- 3 - Installment payment  \n- 4 - Unknown classification/Other mail order  \n- 5 - Secure electronic commerce transaction  \n- 6 - Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure  \n- 7 - Non-authenticated security transaction  \n- 8 - Non-secure transaction  \n"
          example: "3"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction.Valid values can be Yes/No
          example: 1 - Yes
        networkID:
          type: string
          description: 'Field 63.1 contains a code that specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction. '
        acquirerRefNum:
          type: string
          description: Assigned by the network based on information provided by the acquirer. Can be used for network corrections.
        posDataInputCapability:
          type: string
          description: Indicates the capability of the terminal to enter the card number and expiration date into the system.
        posDataInputMode:
          type: string
          description: Indicates the method used to input the information from the card to the terminal. Indicates how the transaction at the device is performed.
        unmatchedCompletionFlag:
          type: string
          description: Indicates unmatched completion flag.
          example: "N"
        expirationDateMismatch:
          type: string
          description: Indicates if the expiration date mismatch is there or not.
          example: "N"
        transactionDateTime:
          type: string
          description: Date and Time when transaction was created.
          format: date-time
        merchantName:
          type: string
          description: The Merchant Name
          example: Store1
        transactionAmount:
          type: string
          description: Amount on a particular transaction. Valid format is 0.00.
          example: "1299.00"
        transactionType:
          type: string
          description: "Indicates the type of transaction that was made on the card. It is interlinked with transaction code.  \nValid values for Debit are - \n- Withdrawal\n- Debit\n- Money Transfer Funding\n- Check Cashing\n- Deposit Cash Back\n- Money Transfer Dispense\n- Money Transfer Initiate\n- Deposit\n- Credit\n- Message\n- Money Transfer Credit\n- Loan to Prepaid\n- Money Transfer Refund\n- Balance Inquiry\n- PIN Select\n- Statement Print\n- Member Verification\n- Account Inquiry\n- Transfer\n- Payment\n- Payment Enclosed\n- Payment to Merchant\n- Refund from Merchant\n- Third Party Bill Payment Return\n- Special Purchase  \nValid Values for Credit when transaction status is Posted -   \n- Sale\n- Cash Advance\n- Return\n- Merchandise Sale Reversal\n- Cash Advance Reversal\n- Return Reversal\n- Merchandise Sale Amount Adjustment\n- Cash Advance Amount Adjustment\n- Return Amount Adjustment\n- Payment\n- Payment Reversal\n- Payment Amount Adjustment\n- Specific Credit Amount Adjustment\n- Cash Advance Item Charge Refund\n- Late Charge Refund\n- Merchandise Finance Charge Refund\n- Cash Advance Finance Charge Refund\n- Backdated Payment Adjustment\n- Merchandise Item Charge Refund\n- Overlimit Charge Refund\n- Credit Life Insurance Fee Refund\n- Backdate Cash Advance and Sales Adjustment\n- Small Balance Charge-off\n- Charge Off Total Account\n- Charge Off Cash Advance Interest\n- Charge Off Billed Late Charges\n- Charge Off Merchandise Interest and Service Charges\n- Charge Off Credit Life Insurance\n- Charge Off All Finance Charges\n- Charge Off All Current Cash Advance Interest\n- Charge Off All Current Merchandise Interest\n- Charge Off Cycle-to-Date Late Charges\n- Charge Off Billed Cash Advance Item Charges Charge Off Billed Merchandise Item Charges\n- Charge Off Billed Overlimit Fees \n- Charge Off Cycle-to-Date Cash Advance Item Charges\n- Charge Off Cycle-to-Date Merchandise Item Charges\n- Charge Off Cycle-to-Date Overlimit Fees\n- Account Transfer\n- Finance Charge (item charge)\n- Reserved for restricted use\n- Reserved for restricted use\n- Late Charge\n- Credit Life Insurance Charge\n- Cash Advance Finance Charge\n- Merchandise Finance Charge\n- Overlimit Account Message\n- Reserved for restricted use\n- Account Level Processing Strategy Change Message\n- Reserved for restricted use\n- Account Balance Details for MULTRAN Accounts\n- Backdated Cash Advance Finance Charge\n- Backdated Payment Interest Adjustment\n- Cash Advance Item Charge\n- Merchandise Item Charge\n- Overlimit Charge\n- Interest Earned or Credit Interest\n- Service Charge or Statement Charge\n- Cash Advance Item Charge\n- Fee or Finance Charge Rebate\n- Backdated Payment or Cash Advance Adjustment\n- Skip Payment Certificate Message\n- Retail Special Details\n- Airline Itinerary\n- Special Details\n- First Data use only\nBelow transaction types are for the transaction status Pending or Declined for Credit -  \n- Authorization adjustment\n- Activation code notification message for token provisioning via step-up authentication processing\n- Check authorization approved\n- Preauthorization request approved\n- Account status inquiry service or payment account status inquiry\n- Cash advance authorization approved\n- Cash advance authorization declined\n- Cash advance authorization approved by expansion\n- Override declined cash advance\n- Cash advance authorization approved by positive identification\n- Cash referral\n- Cash advance authorization approved by name\n- Cash advance authorization manually declined\n- Duplicate authorization\n- Cash authorization approved without issuer contact\n- Check authorization declined\n- Merchandise authorization approved without issuer contact\n- Preauthorization request denied\n- Balance inquiry approved\n- Issuer’s adjustment\n- Reserved for restricted use\n- Check system error - declined\n- Return posted check\n- Merchandise authorization approved\n- In-store return\n- Merchandise authorization declined\n- Merchandise authorization approved by expansion\n- Right-time payment\n- Override declined merchandise authorization\n- Merchandise authorization approved by positive identification\n- Right-time pay/reversal\n- Merchandise referral\n- Merchandise authorization approved by name\n- Merchandise authorization manually declined\n- Permanent authorization request\n- Pay unposted check\n- Visa and Mastercard person-to-person payment transaction reversal\n- Visa and Mastercard person-to-person payment transaction decline\n- Permanent authorization adjustment\n- Merchandise return adjustment\n- Merchandise return declined\n- Merchandise return approved\n- Merchandise return adjustment declined\n- Return unposted check\n- Account status check via a token provisioning request resulted in an approved response\n- Token provision decision\n- Token maintenance, such as activation, deactivation, suspension, exception, or replacement\n- Token has been granted, linked to the cardholder account, and provisioned\n- Private label ETC return posted at the time of return\n- Manual override cash advance authorization\n- Manual override merchandise authorization  \n"
          example: WITHDRAWAL
        messageType:
          type: string
          description: "This is the combination of Numeric code and description of the message type. Message type is the message done on the transaction activities.  \nFor the valid codes below are the values  \n- 100 - Pre-Auth Request  \n- 102 - Pre-Auth Reversal  \n- 110 - Preauthorization  \n- 120 - Pre-Auth Stand In  \n- 121 - Pre-Auth Adv Repeat  \n- 130 - Auth Advice Resp  \n- 200 - Request  \n- 202 - Auth Reversal  \n- 210 - Auth/Completion  \n- 220 - Forced Completion  \n- 221 - Advice Repeat  \n- 230 - Advice Response  \n- 320 - Batch Upload  \n- 330 - Batch Upload Resp  \n- 420 - Reversal  \n- 421 - Advice Rev Repeat  \n- 430 - Reversal Response  \n- 500 - Batch Settl Request  \n- 510 - Batch Settl Resp  \n- 800 - Network Mgmt Req  \n- 810 - Network Mgmt Resp  \n- 820 - Network Mgmt Advice  \n"
          example: 210 - Auth/Completion
        transactionStatus:
          type: string
          description: "Status of the transaction.\nValues are - \n- APPROVED\n- DECLINED\n- REVERSED\n"
          example: DECLINED
        responseCode:
          type: string
          description: This field represents authorization response approval code or denial code.
          example: "003"
        responseCodeDescription:
          type: string
          description: This field provide description for response code.
          example: APPROVED - WITH BALANCES
        terminalFILogo:
          type: string
          description: Terminal FI Logo.
          example: ABCD
        cardFILogo:
          type: string
          description: Card FI Logo.
          example: ABCD
        terminalPinCapable:
          type: string
          description: Indicates the ability of the terminal to accept PIN.
          example: "No"
        merchantCountry:
          type: string
          description: Country where the terminal is located
          example: USA
    AcquirerInfo:
      type: object
      properties:
        merchantName:
          type: string
          description: Merchant that acquired the POS transaction.
        merchantId:
          type: string
          description: Merchant identification number where the transaction originated.
        terminalId:
          type: string
          description: Terminal identifier indicating the terminal where the transaction was performed.
        terminalStreet:
          type: string
          description: Street address where the terminal is located.
        terminalCityAndState:
          type: string
          description: "Terminal City and State  \nAL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  \nCA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  \nFM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  \nFL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI Hawaii  \nID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  \nLA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  \nMD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  \nMO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey  \nNM New Mexico | NY New York | NC North Carolina | ND North Dakota  \nMP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  \nOH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  \nPA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  \nSC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  \nVT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  \nWA Washington | WV West Virginia | WI Wisconsin | WY Wyoming  \n"
          example: NY
        merchantCountry:
          type: string
          description: Country where the merchant is located.
          example: USA
        merchantCategoryCode:
          type: string
          description: Type of merchant acquiring a transaction.
          example: "6011"
        pointOfService:
          type: string
          description: "Indicates the type of device used to acquire the transaction or the purpose of the transaction.  \n- 002 - ON-PREMISE  \n- 004 - ELECTRONIC CASH REGISTER  \n- 006 - PRE-AUTHORIZED REQUEST  \n- 007 - PRE-AUTHORIZED REQUEST-NO PIN  \n- 014 - GENERIC  \n- 051 - VERIFICATION OF FUNDS  \n- 054 - GAS PUMP  \n- 062 - OFF-PREMISE  \n- 064 - SCRIP DISPENSE  \n- 072 - RETAIL  \n- 074 - ADMINISTRATIVE  \n- 081 - PAYIT OR BANKIT TRANSACTION (ITP)  \n- 086 - PIN, NO TRACK2  \n- 087 - MERCHANT AUTHORIZED TRANSACTION  \n- 088 - PAPER CAPTURE  \n- 089 - TRACK READ (PAN AND EXP), NO PIN  \n- 090 - NO PIN, NO TRACK2  \n- 091 - NO PIN, TRACK2  \n- 092 - INTERNATIONAL  \n- 094 - SHARED BRANCH STAND ALONE  \n- 096 - SHARED BRANCH FRANCHISE  \n- 097 - SHARED BRANCH OUTLET  \n"
      example: 002 - ON-PREMISE
    AcquirerInfoV2:
      type: object
      properties:
        merchantCategoryCode:
          type: string
          description: |
            Type of merchant acquiring a transaction.
          example: "5541"
        merchantCountry:
          type: string
          description: |
            Country where the merchant is located.
          example: USA
        merchantId:
          type: string
          description: "Merchant identification number where the transaction originated.    \n"
          example: PARAGON APPLICAT
        merchantName:
          type: string
          description: |
            Merchant that acquired the POS transaction.
          example: PARAGON APPLICATION
        pointOfService:
          type: string
          description: "Indicates the type of device used to acquire the transaction or the purpose of the transaction.  \n- 002 - ON-PREMISE  \n- 004 - ELECTRONIC CASH REGISTER  \n- 006 - PRE-AUTHORIZED REQUEST  \n- 007 - PRE-AUTHORIZED REQUEST-NO PIN  \n- 014 - GENERIC  \n- 051 - VERIFICATION OF FUNDS  \n- 054 - GAS PUMP  \n- 062 - OFF-PREMISE  \n- 064 - SCRIP DISPENSE  \n- 072 - RETAIL  \n- 074 - ADMINISTRATIVE  \n- 081 - PAYIT OR BANKIT TRANSACTION (ITP)  \n- 086 - PIN, NO TRACK2  \n- 087 - MERCHANT AUTHORIZED TRANSACTION  \n- 088 - PAPER CAPTURE  \n- 089 - TRACK READ (PAN AND EXP), NO PIN  \n- 090 - NO PIN, NO TRACK2  \n- 091 - NO PIN, TRACK2  \n- 092 - INTERNATIONAL  \n- 094 - SHARED BRANCH STAND ALONE  \n- 096 - SHARED BRANCH FRANCHISE  \n- 097 - SHARED BRANCH OUTLET  \n"
          example: 002 - ON-PREMISE
        terminalCityAndState:
          type: string
          description: "Terminal City and State  \nAL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  \nCA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  \nFM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  \nFL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI Hawaii  \nID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  \nLA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  \nMD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  \nMO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey  \nNM New Mexico | NY New York | NC North Carolina | ND North Dakota  \nMP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  \nOH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  \nPA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  \nSC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  \nVT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  \nWA Washington | WV West Virginia | WI Wisconsin | WY Wyoming  \n"
          example: NY
        terminalId:
          type: string
          description: |
            Terminal identifier indicating the terminal where the transaction was performed.
          example: PREPINND
        terminalStreet:
          type: string
          description: |
            Street address where the terminal is located.
          example: PARAGON APPLICAT
    RiskInfo:
      type: object
      properties:
        enfactNearTimeScore:
          type: string
          description: EnFact Near Time/Case Management Score. EnFact predictive model score assigned to the transaction after authorization.
        enfactRealTimeDecision:
          type: string
          description: "EnFact authorization recommendation based on an EnFact fraud rule assigned during authorization.  \n- A - Approve  \n- D - Deny  \n- T - Timed Out  \n- E - Error  \n- U - Falcon Server Unavailable  \n- R - Deny - Retain Card  \n- X - Engin to Falcon Timeout  \n- S - Stop Sending to Falcon           \n"
        enfactRealTimeScore:
          type: string
          description: The real time score associated with a transaction during authorization.
        enfactRecommendation:
          type: string
          description: Identifies if the EnFact rules denied the transaction.
        networkScore:
          type: string
          description: ' - Visa - Mastercard - Pulse - star '
        ruleManagerRecommendation:
          type: string
          description: "RuleManager transaction recommendation sent back to the authorization platform.  \n- C - Continue  \n- D - Deny  \n- E - Error  \n- O - Offline for Maintenance  \n- P - Pass  \n- R - Deny and Retain  \n- T - Timeout            \n"
        transactionBlockerResult:
          type: string
          description: "Identifies how the transaction was handled by TranBlocker.  \n- 0 Not Checked  \n- 1 Timeout  \n- 2 Successful  \n- 3 Denote and Continue  \n- 4 Deny  \n- 5 Retain\n"
    RiskInfoV2:
      type: object
      properties:
        enfactNearTimeScore:
          type: string
          description: EnFact Near Time/Case Management Score. EnFact predictive model score assigned to the transaction after authorization.
        enfactRealTimeDecision:
          type: string
          description: "EnFact authorization recommendation based on an EnFact fraud rule assigned during authorization.  \n- A - Approve  \n- D - Deny  \n- T - Timed Out  \n- E - Error  \n- U - Falcon Server Unavailable  \n- R - Deny - Retain Card  \n- X - Engin to Falcon Timeout  \n- S - Stop Sending to Falcon           \n"
        enfactRealTimeScore:
          type: string
          description: The real time score associated with a transaction during authorization.
        enfactRecommendation:
          type: string
          description: Identifies if the EnFact rules denied the transaction.
        networkScore:
          type: string
          description: ' - Visa - Mastercard - Pulse - star '
        ruleManagerRecommendation:
          type: string
          description: "RuleManager transaction recommendation sent back to the authorization platform.  \n- C - Continue  \n- D - Deny  \n- E - Error  \n- O - Offline for Maintenance  \n- P - Pass  \n- R - Deny and Retain  \n- T - Timeout            \n"
        transactionBlockerResult:
          type: string
          description: "Identifies how the transaction was handled by TranBlocker.  \n- 0 Not Checked  \n- 1 Timeout  \n- 2 Successful  \n- 3 Denote and Continue  \n- 4 Deny  \n- 5 Retain            \n"
    TokenAndEmvInfo:
      type: object
      properties:
        tokenTransaction:
          type: string
          description: Token Transaction. A tokenized payment transaction uses a token PAN that is an alternate 13- to 19-digit value provisioned for the real or true PAN. The real PAN is the card number assigned by the FI. For token provisioning transactions, this field is not applicable and the value is always N.
        wallet:
          type: string
          description: Wallet details. Possible values Apple pay - Google Pay - Samsung pay - Fitbit Pay - Garmin pay.
        emvTransaction:
          type: string
          description: Indicates if it is an EMV transaction. Possible values Yes or No.
        emvCard:
          type: string
          description: Indicates if the card used in the transaction is EMV. Possible values Yes or No.
        emvTerminal:
          type: string
          description: Indicates if the terminal is EMV capable. Possible values Yes or No.
        emvFallback:
          type: string
          description: Indicates if the transaction is EMV fallback. Possible values Yes or No.
    TokenAndEmvInfoV2:
      type: object
      properties:
        emvCard:
          type: string
          description: |
            Indicates if the card used in the transaction is EMV. Possible values Yes or No.
          example: "Yes"
        emvFallback:
          type: string
          description: |
            Indicates if the transaction is EMV fallback. Possible values Yes or No.
          example: N/A
        emvTerminal:
          type: string
          description: |
            Indicates if the terminal is EMV capable. Possible values Yes or No.
          example: "Yes"
        emvTransaction:
          type: string
          description: |
            Indicates if it is an EMV transaction. Possible values Yes or No.
          example: ""
        tokenTransaction:
          type: string
          description: |
            Token Transaction. A tokenized payment transaction uses a token PAN that is an alternate 13- to 19-digit value provisioned for the real or true PAN. The real PAN is the card number assigned by the FI. For token provisioning transactions, this field is not applicable and the value is always N.
          example: "No"
        wallet:
          type: string
          description: |
            Wallet details. Possible values Apple pay - Google Pay - Samsung pay - Fitbit Pay - Garmin pay.
          example: ""
    NetworkInfo:
      type: object
      properties:
        network:
          type: string
          description: Identifies the network that routed the transaction.
        secureEci:
          type: string
          description: Electronic commerce indicator (ECI) provides network information regarding the security level and authentication method used for an electronic commerce transaction.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal.
    NetworkInfoV2:
      type: object
      properties:
        authorizationCode:
          type: string
          description: |
            Authorization approval code for the transaction.
          example: "000227"
        network:
          type: string
          description: |
            Identifies the network that routed the transaction.
          example: 655100 - Mastercard Credit - Affiliate Member
        secureEci:
          type: string
          description: |
            Electronic commerce indicator (ECI) provides network information regarding the security level and authentication method used for an electronic commerce transaction.
          example: ""
        sequenceNumber:
          type: string
          description: |
            Chronological numeric identifier for the transaction, assigned by the terminal.
          example: "001668"
    AmountDetails:
      type: object
      properties:
        transactionNetAmount:
          type: string
          description: Requested amount presented to the FI, or the amount approved if partially approved, regardless of the.
        cashbackAmount:
          type: string
          description: Amount of cash returned to a cardholder during a transaction.
        surchargeAmount:
          type: string
          description: Amount of the ATM-level surcharge assessed by the terminal owner for the transaction.
        surchargeReservalAmount:
          type: string
          description: Surcharge amount to settlement of the original nonreversal transaction.
    AmountDetailsV2:
      type: object
      properties:
        cashbackAmount:
          type: string
          description: |
            Amount of cash returned to a cardholder during a transaction.
          example: "0.00"
        surchargeAmount:
          type: string
          description: A| mount of the ATM-level surcharge assessed by the terminal owner for the transaction.
          example: "0.00"
        surchargeReservalAmount:
          type: string
          description: "Surcharge amount to settlement of the original nonreversal transaction. \n"
          example: "0.00"
        transactionNetAmount:
          type: string
          description: |
            Requested amount presented to the FI, or the amount approved if partially approved, regardless of the.
          example: "20.00"
    GeneralDetails:
      type: object
      properties:
        journalDateTime:
          type: string
          description: System assigned timestamp in Eastern Time.
          format: date-time
        responseDetails:
          type: string
          description: Details about response received for transaction.
        reversalCode:
          type: string
          description: The reason for a reversal.
        transactionProcessingCode:
          type: string
          description: Indicates the specific transaction (action taken), the From account, and the To account.
        toAccountType:
          type: string
          description: Type of the account impacted by a cardholder transaction.
          example: Savings
        toAccount:
          type: string
          description: Number of the account impacted by a cardholder transaction.
        fromAccountType:
          type: string
          description: Type of the account impacted by a cardholder transaction.
          example: Checking
        fromAccount:
          type: string
          description: Number of the account impacted by a cardholder transaction.
        productType:
          type: string
          description: Product Type - ATM or POS.
        depositType:
          type: string
          description: Indicates if the deposit is a check, cash, or mixed deposit.
        subResponseCode:
          type: string
          description: Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.
        transactionStatus:
          type: string
          description: Indicates status of transactions.
        transactionType:
          type: string
          description: Indicates the type of transaction.
    GeneralDetailsV2:
      type: object
      properties:
        depositType:
          type: string
          description: |
            Indicates if the deposit is a check, cash, or mixed deposit.
          example: ""
        fromAccount:
          type: string
          description: |
            Number of the account impacted by a cardholder transaction.
          example: "00000000000000000000"
        fromAccountType:
          type: string
          description: |
            Type of the account impacted by a cardholder transaction.
          example: Checking
        journalDateTime:
          type: string
          description: |
            System assigned timestamp in Eastern Time.
          format: date-time
        productType:
          type: string
          description: |
            Product Type - ATM or POS.
          example: MRG
        responseDetails:
          type: string
          description: |
            Details about response received for transaction.
          example: ""
        reversalCode:
          type: string
          description: |
            The reason for a reversal.
          example: "No"
        subResponseCode:
          type: string
          description: |
            Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.
          example: ""
        toAccount:
          type: string
          description: "Number of the account impacted by a cardholder transaction. \n"
          example: "0000000000000000000"
        toAccountType:
          type: string
          description: |
            Type of the account impacted by a cardholder transaction.
          example: Checking
        transactionProcessingCode:
          type: string
          description: |
            Indicates the specific transaction (action taken), the From account, and the To account.
          example: ""
        transactionStatus:
          type: string
          description: |
            Indicates status of transactions.
          example: ""
        transactionType:
          type: string
          description: |
            Indicates the type of transaction.
          example: TRANSFER
    UpdateCardStatusRequest:
      title: CardStatusUpdateRequest
      required:
      - cardNumber
      - cardStatus
      - statusReasonCode
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card Number, between 15 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If not specified, defaults to 0.
          example: "0"
        cardStatus:
          type: string
          description: "Status of card.  \nValues for Debit -  \n- ACTIVE  \n- CAPTURE  \n- DEACTIVATE  \n- ISSUED  \n- RESTRICTED  \nValues for Credit -  \n- BLOCKED_FROM_AUTHORIZATION  \n- FRAUD_DETECTED\n- LOST_OR_STOLEN\n- NORMAL  \n- NOT_ACTIVE  \nRefer to statusReasonCode field description for updating the status.\n"
          example: CAPTURE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: "Indicates the reason code associated to the card status.  \nOne of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.\nAll the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.\nKeep this field as NONE when updating to any other statuses.\nValues for Debit -  \n- ABUSED  \n- CLOSED  \n- CUSTOMER_REQUEST  \n- DAMAGED  \n- LOST   \n- REVOKED  \n- STOLEN  \nValues For Credit - \n- CLOSED_BY_FI  \n- CLOSED_BY_CUSTOMER  \n- DECEASED  \n- LOST  \n- REVOKED  \n- STOLEN  \n- TEMP_BLOCK_BY_FI  \n- TEMP_BLOCK_AGENT\n"
          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
        fraudActivity:
          type: string
          description: Indicates if it is required to open a fraud dispute claim. This is an optional field and is applicable only when status is to be updated to LOST_OR_STOLEN for Credit.
          example: POSSIBLE_FRAUD
          enum:
          - NONE_SUSPECTED
          - POSSIBLE_FRAUD
        securityMemo:
          maxLength: 220
          type: string
          description: Details on the fraud dispute to be claimed. Required when fraudActivity is POSSIBLE_FRAUD. Applicable only when status is LOST_OR_STOLEN for Credit.
    UpdateCardStatusRequestV2:
      title: CardStatusUpdateRequest
      required:
      - cardStatus
      - statusReasonCode
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Card number of primary cardholder.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used.
            Card number length can be between 16 and 19.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: "Non-transactional token associated to a card.\nEither cardNumber or Non-transactional token must be included in the request. If both are included, only cardNumber will be used \nNon-transactional token length can be between 16 and 19.\n"
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          format: numeric
          example: "0"
        cardStatus:
          type: string
          description: "Status of card.  \nValues for Debit -  \n- ACTIVE  \n- CAPTURE  \n- DEACTIVATE  \n- ISSUED  \n- RESTRICTED  \nValues for Credit -\n- BLOCKED_FROM_AUTHORIZATION  \n- FRAUD_DETECTED  \n- LOST_OR_STOLEN  \n- NORMAL  \n- NOT_ACTIVE  \nRefer to statusReasonCode field description for updating the status.\n"
          example: CAPTURE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: "Indicates the reason code associated to the card status.  \nOne of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.\nAll the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.\nKeep this field as NONE when updating to any other statuses.\nValues for Debit -  \n- ABUSED  \n- CLOSED  \n- CUSTOMER_REQUEST  \n- DAMAGED  \n- LOST   \n- REVOKED  \n- STOLEN  \nValues For Credit - \n- CLOSED_BY_FI  \n- CLOSED_BY_CUSTOMER  \n- DECEASED  \n- LOST  \n- REVOKED  \n- STOLEN  \n- TEMP_BLOCK_BY_FI  \n- TEMP_BLOCK_AGENT\n"
          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
        fraudActivity:
          type: string
          description: Indicates if it is required to open a fraud dispute claim. This is an optional field and is applicable only when status is to be updated to LOST_OR_STOLEN for Credit.
          example: POSSIBLE_FRAUD
          enum:
          - NONE_SUSPECTED
          - POSSIBLE_FRAUD
        securityMemo:
          maxLength: 220
          type: string
          description: Details on the fraud dispute to be claimed. Required when fraudActivity is POSSIBLE_FRAUD. Applicable only when status is LOST_OR_STOLEN for Credit.
          example: Cardholder claims that it's not an authorized transaction.
    SearchCardStatusRequest:
      title: CardStatusSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Card number of primary cardholder.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used.
            Card number length can be between 16 and 19.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: "Non-transactional token associated to a card.\nEither cardNumber or Non-transactional token must be included in the request. If both are included, only cardNumber will be used \nNon-transactional token length can be between 16 and 19.\n"
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder. Applies to debit cards only
          format: numeric
          example: "0"
    UpdateCardStatusResponseV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder. Card number length can be between 16 and 19.
          format: numeric
          example: 400010XXXXXX4000
        nonTransToken:
          type: string
          description: Non-transactional token associated to a card. Non-transactional token length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        cardStatus:
          type: string
          description: "Status of card.  \nValues for debit -  \n- ACTIVE  \n- CAPTURE  \n- DEACTIVATE  \n- ISSUED  \n- RESTRICTED  \nValues for Credit - \n- BLOCKED_FROM_AUTHORIZATION  \n- FRAUD_DETECTED  \n- LOST_OR_STOLEN  \n- NORMAL  \n- NOT_ACTIVE  \nRefer to statusReasonCode field description for updating the status.\n"
          example: CAPTURE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: "Indicates the reason code associated to the card status.  \nOne of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.\nAll the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.\nKeep this field as NONE when updating to any other statuses.\nValues for Debit -  \n- ABUSED  \n- CLOSED  \n- CUSTOMER_REQUEST  \n- DAMAGED  \n- LOST   \n- REVOKED  \n- STOLEN  \nValues For Credit - \n- CLOSED_BY_FI  \n- CLOSED_BY_CUSTOMER  \n- DECEASED  \n- LOST  \n- REVOKED  \n- STOLEN  \n- TEMP_BLOCK_BY_FI  \n- TEMP_BLOCK_AGENT\n"
          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
    SearchCardStatusResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder. Card number length can be between 16 and 19.
          example: 400010XXXXXX4000
        nonTransToken:
          type: string
          description: Non-transactional token associated to a card. Non-transactional token length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        cardStatus:
          type: string
          description: "Status of card.  \nValues for Debit -  \n- ACTIVE  \n- CAPTURE  \n- DEACTIVATE  \n- ISSUED  \n- RESTRICTED  \nValues for Credit -  \n- BLOCKED_FROM_AUTHORIZATION  \n- FRAUD_DETECTED  \n- LOST_OR_STOLEN  \n- NORMAL  \n- NOT_ACTIVE  \nRefer to statusReasonCode field description for updating the status.\n"
          example: CAPTURE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: "Indicates the reason code associated to the card status.  \nOne of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.\nAll the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.\nKeep this field as NONE when updating to any other statuses.\nValues for Debit -  \n- ABUSED  \n- CLOSED  \n- CUSTOMER_REQUEST  \n- DAMAGED  \n- LOST   \n- REVOKED  \n- STOLEN  \nValues For Credit - \n- CLOSED_BY_FI  \n- CLOSED_BY_CUSTOMER  \n- DECEASED  \n- LOST  \n- REVOKED  \n- STOLEN  \n- TEMP_BLOCK_BY_FI  \n- TEMP_BLOCK_AGENT\n"
          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
    CardTokenRequest:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
    PinRequest:
      required:
      - jwt
      - pin
      type: object
      properties:
        pin:
          maxLength: 4
          minLength: 4
          type: string
          description: PIN to be set for a given card number. Only numerics are allowed. No repetitive characters 3 times in a row like 111X, X333, 1111, 2222. No sequential characters (even backwards) 0123, 1234, 2345, 6543. 3210.
          example: "2938"
        jwt:
          type: string
          description: Javascript Web Token (JWT), returned by the getCardToken (POST /v1/cards/token) response. JWT provided for one card can only be used to set the PIN for that particular card. Valid for 15 minutes only.
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardTokenResponse:
      type: object
      properties:
        jwt:
          type: string
          description: Javascript Web Token (JWT), returned by the getCardToken (POST /v1/cards/token) response. JWT provided for one card can only be used to set the PIN for that particular card. Valid for 15 minutes only.
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardholderSearchRequest:
      title: CardholderSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        lastName:
          type: string
          description: Last name of the customer.
          example: Smith
        ssnOrTaxId:
          type: string
          description: Full SSN or Tax ID of a cardholder. Pass exactly 9 digits for this field. Allow hyphen as a special character.
          example: "123005678"
        accNumber:
          type: string
          description: Account Number
          example: "123456789"
        phone:
          type: string
          description: Mobile phone number or home phone number or work phone number.
          example: "1005550001"
        emailAddress:
          type: string
          description: Email address.
          example: alexsmith@example.com
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder. Format of date of birth is MM/DD/YY. This is a secondary/additional search field can be combined with other primary or secondary fields to further narrow down search results.
          example: 07/02/89
          default: ""
        postalCode:
          type: string
          description: ZIP Code.
          example: "12345"
        lastFourCardNumber:
          type: string
          description: Last four digits of the card number.
          example: "4000"
        lastFourAccNumber:
          type: string
          description: Last four digits of the Account number.
          example: "6789"
        lastFourSsnOrTaxId:
          type: string
          description: The last four digits of the ssn/taxid number. Applies to debit cards only.
          example: "5678"
      description: This operation requires at least one exact match search criteria, using these fields - cardNumber, accountNumber, ssnOrTaxId, emailAddress, lastName or phone. Along with the exact match fields, there are other optional parameters which can be passed in combination with exact match fields, to further refine the search criteria.
    CardholderSearchRequestV2:
      title: CardholderSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: numeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: "Determines the format of Card number and/or Non-transactional token in the response.  \nValues are -\n- MASKED_CARD_ONLY - Masked Card.\n- FULL_CARD_ONLY - Clear Card.\n- TOKEN_ONLY - Non-transactional token only.\n- MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token.\n- FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token.\n"
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        lastName:
          type: string
          description: Last name of the customer.
          example: Doe
        taxIdOrSsn:
          type: string
          description: |
            Indicates the social security number or tax id number. Max length for SSN- 9 and for Tax ID-20. Formats listed in the example.
          example: "123005678"
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        phone:
          type: string
          description: Mobile phone number or home phone number or work phone number.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email address of the cardholder.
          format: email
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
        zipCode:
          type: string
          description: ZIP code.
          example: "12345"
        lastFourCardNumber:
          type: string
          description: Last four digits of the card number.
          example: "4000"
        lastFourAccountNumber:
          type: string
          description: Last four digits of the Account number.
          example: "6789"
        lastFourTaxIdOrSsn:
          type: string
          description: The last four digits of the ssn/taxId number. Applies to debit cards only.
          example: "5678"
      description: This operation requires at least one exact match search criteria, using these fields - cardNumber, nonTransToken, accountNumber, ssnOrTaxId, emailAddress, lastName or phone. Along with the exact match fields, there are other optional parameters which can be passed in combination with exact match fields, to further refine the search criteria.
    CardholderSearchResponse:
      title: CardholderSearchResponse
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderSearchResponseV2:
      title: CardholderSearchResponse
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetailsV2'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderSearchResponseWarning:
      title: CardholderSearchResponseWarning
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderSearchResponseWarningV2:
      title: CardholderSearchResponseWarning
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetailsV2'
        warningInfo:
          $ref: '#/components/schemas/WarningV2'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderCardsDetails:
      title: CardholderCardsDetails
      required:
      - cardholderCardsDetails
      - cards
      type: object
      properties:
        cardholderDetails:
          $ref: '#/components/schemas/CHCardholder'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/CHCard'
    CardholderCardsDetailsV2:
      title: CardholderCardsDetails
      required:
      - cardholderCardsDetails
      - cards
      type: object
      properties:
        cardholderDetails:
          $ref: '#/components/schemas/CHCardholderV2'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/CHCardV2'
    CHCardholder:
      type: object
      properties:
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
    CHCardholderV2:
      type: object
      properties:
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
    CHCard:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card Number, between 16 to 19 digits.
          example: "4000200030004000"
        accountNumbers:
          type: array
          description: Account identifiers for a given Card.
          example: '["123456789","987654321"]'
          items:
            type: string
        cardMemberNumber:
          type: string
          description: Member Number associated with the card. Valid values are from 0-9.
          example: "0"
        cardStatus:
          type: string
          description: Status of card.
          example: NORMAL
          enum:
          - BLOCK_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
          - ACTIVE
          - DIGITAL
          - ISSUED
          - RESTRICTED
          - CAPTURE
          - DEACTIVATED
        cardType:
          type: string
          description: Card type.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        association:
          type: string
          description: Type of association. Applies only to Credit. This field will not be present for Debit cards.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        postalCode:
          type: string
          description: ZIP code.
          example: "12345"
        phone:
          type: string
          description: Mobile phone number, work phone number, or home number.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of cardholder.
          example: "1005550001"
        homePhone:
          type: string
          description: Home phone number of cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of cardholder.
          example: "1005550001"
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. The maximum length is 10.
          example: "1005550001"
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder. Format of date of birth is MM/DD/YY. This is a secondary/additional search field can be combined with other primary or secondary fields to further narrow down search results.
          example: 07/02/89
          default: ""
        expiryDate:
          type: string
          description: Card expiry date.
          format: MMYY
          example: "1023"
        emailAddress:
          type: string
          description: Email address.
          example: alexsmith@example.com
    CHCardV2:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: numeric
          example: piUVBJKZGfks4000
        accountNumbers:
          type: array
          description: Account identifiers for a given Card.
          example: '["123456789","987654321"]'
          items:
            type: string
        memberNumber:
          maxLength: 1
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          example: "0"
        cardStatus:
          type: string
          description: Status of card.
          example: NORMAL
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: "Indicates the reason code associated to the card status.  \nOne of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.\nAll the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.\nKeep this field as NONE when updating to any other statuses.\nValues for Debit -  \n- ABUSED  \n- CLOSED  \n- CUSTOMER_REQUEST  \n- DAMAGED  \n- LOST   \n- REVOKED  \n- STOLEN  \nValues For Credit - \n- CLOSED_BY_FI  \n- CLOSED_BY_CUSTOMER  \n- DECEASED  \n- LOST  \n- REVOKED  \n- STOLEN  \n- TEMP_BLOCK_BY_FI  \n- TEMP_BLOCK_AGENT\n"
          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
        cardActivationStatus:
          type: string
          description: The activation status of the card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        cardType:
          type: string
          description: Card type.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        cardClass:
          type: string
          description: Unique 5-character alphanumeric identifier that represents a client-defined group of cardholders with common characteristics, such as card stock, withdrawal limits or processing days.
          example: AAA00
        association:
          type: string
          description: Type of association. Applies only to Credit. This field will not be present for Debit cards.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        zipCode:
          type: string
          description: "Postal code of the cardholder's primary address.  \nThis field is mandatory if the country is USA. For U.S. country code, ZIP code must be of length 5 or 9 numeric digits with no dashes. When entering a code for a country other than U.S., this field may be 1 to 11 alphanumeric character.\n"
          example: "12345"
        phone:
          type: string
          description: Mobile phone number or home phone number or work phone number.
          example: "0005550000"
        cellPhone:
          type: string
          description: Mobile phone number.
          example: "1005550001"
        homePhone:
          type: string
          description: Home phone number.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number.
          example: "1005550001"
        textAddress:
          type: string
          description: Cardholder’s text address where Card Services sends Risk Alerts.
          example: "0005550000"
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder. If no date is present in the request, date on record will remain unchanged.
          format: date
        expirationDate:
          type: string
          description: Month and year the card record is set to expire.
          format: MM/YY
          example: 10/23
        emailAddress:
          type: string
          description: Cardholder's email address where Card Services sends Risk Alerts.
          format: email
          example: jdoe@example.com
    AddCardDetailsResponse:
      required:
      - association
      type: object
      properties:
        cardNumber:
          type: string
          description: "Unique number assigned to each cardholder. \n- If your card prefix is set up for auto-number generation or system-generated card numbers, this field is read-only and displays the words System Generated in place of a card number.\n- If your FI is set up for system generated card numbers, then the Card Management application assigns a card number in sequential order..\n"
          example: 400010XXXXXX3000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          example: WUPIL5DQTZGM3000
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
        logo:
          type: string
          description: Unique 4-character alphanumeric identifier assigned by Fiserv for the selected institution.
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. Editable when adding a record.
            If the member number is not passed, defaults to 0 (zero).
            Applies to debit cards only.
        expirationDate:
          type: string
          description: |
            Month and year the card record is set to expire.
          format: MM/YY
        oldCardExpirationDate:
          maxLength: 5
          type: string
          description: |
            Previous expiration date of the selected card. This date could possibly be greater than the date in the Expiration Date field.
          format: MM/YY
          example: 10/23
        cardStatus:
          type: string
          description: "Current status of the selected card.\nValues for Debit -  \n- ABUSED  \n- CLOSED  \n- CUSTOMER_REQUEST  \n- DAMAGED  \n- LOST   \n- REVOKED  \n- STOLEN  \nValues For Credit - \n- CLOSED_BY_FI  \n- CLOSED_BY_CUSTOMER  \n- DECEASED  \n- LOST  \n- REVOKED  \n- STOLEN  \n- TEMP_BLOCK_BY_FI  \n- TEMP_BLOCK_AGENT\n"
          example: ACTIVE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        producePlasticIdentifier:
          type: string
          description: This field  indicates whether a new plastic was generated when a card is marked Lost/Stolen.
          example: "Y"
        statusReasonCode:
          type: string
          description: "Indicates the reason code associated to the card status.\nOne of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.\nAll the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.\nKeep this field as NONE when updating to any other statuses.\nValues for Debit -  \n- ABUSED  \n- CLOSED  \n- CUSTOMER_REQUEST  \n- DAMAGED  \n- LOST   \n- REVOKED  \n- STOLEN  \nValues For Credit - \n- CLOSED_BY_FI  \n- CLOSED_BY_CUSTOMER  \n- DECEASED  \n- LOST  \n- REVOKED  \n- STOLEN  \n- TEMP_BLOCK_BY_FI  \n- TEMP_BLOCK_AGENT\n"
          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
        association:
          type: string
          description: Type of association.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "1"
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
        memberSinceDate:
          type: string
          description: |
            Month and year when the card record was added. This date may or may not correspond to the open date of the card record.
          format: MM/YY
          example: 03/22
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued.
          example: "0"
        maxAuthorizationPerDayCount:
          type: integer
          description: Maximum Number of Card level total Authorizations allowed per day.
        branch:
          maxLength: 4
          type: string
          description: |
            Unique number FI/institution assigns to identify a specific branch. The default value is 0000.
          example: "0000"
        emvCard:
          type: string
          description: "EMV chip card.\nValues -\n- CONTACT — Card issued as a Contact EMV chip card.\n- CONTACTLESS — Card issued as a Contactless EMV chip card.\n- false - Card is a magstripe-only card and cannot perform an EMV transaction. \n"
          enum:
          - CONTACT
          - CONTACTLESS
          - "false"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card.
          example: "00"
        reissuePerCardClass:
          type: string
          description: Reissue of the new card depending on the card class.
        updaterServiceOptOut:
          type: string
          description: "Applicable when cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. \nIf the cardbase does not participate in AUS, the fields can be blank. Opting out of AUS ensures Fiserv does not send future card number updates to Mastercard or Visa; it does not delete any information previously sent to merchants.\nThe fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system.\n"
          example: "true"
          enum:
          - "true"
          - "false"
        cardPINInfo:
          $ref: '#/components/schemas/AddCardPINInfoResponse'
        priorCardInformation:
          $ref: '#/components/schemas/AddPriorCardInfoResponse'
        cardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/AddCardholderAddressResponse'
    AddCardholderAddressResponse:
      title: Address
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value taken is false.
          example: false
        addressLine1:
          type: string
          description: First address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: Apt 100
        addressLine3:
          type: string
          description: Line 3 of address. Optional.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Line 4 of address. Optional.
          example: AVENUE
        city:
          type: string
          description: City of the cardholder's primary address. Maximum 21 characters.
          example: Newark
        country:
          type: string
          description: Country associated with the cardholder's primary address.
          example: US
        state:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: New Jersey
        zipCode:
          type: string
          description: |
            Postal code of the cardholder's primary address.
            This field is mandatory if the country is USA. For U.S. country code, ZIP code must be of length 5 or 9 numeric digits with no dashes. When entering a code for a country other than U.S., this field may be 1 to 11 alphanumeric character.
          example: "12345"
    AddCardPINInfoResponse:
      type: object
      properties:
        pinOffset:
          type: string
          description: |
            Used by the card vendor to calculate the PIN number for the card. Defaults to 0000 when left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: |
            Maximum amount of failed pin tries allowed for the cardholder.
          example: "4"
        pinOffsetChangeDate:
          type: string
          description: |
            Personal identification number offset changed. Displays the date of the most recent PIN Offset change.
          format: date
    AddCardholderNameResponse:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
        rushType:
          type: string
          description: |
            Only for Order or Card Add maintenance. Controls Rush Order processing for card and PIN orders.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup but you can change the order type.The field is for Debit only.
          example: CARD
          enum:
          - NONE
          - CARD
          - PIN
          - CARD_AND_PIN
        specialHandling:
          type: string
          description: Identifies how the replacement card will be delivered to the cardholder. Applies to credit only.
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
    AddAccountResponse:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Account type. Applies for Credit and Debit.  \nValues for Credit -  \n- C - Control  \n- I - Individual Pay  \n- S - Sub-Account Consumer  \nValues for Debit -  \n- SAVINGS  \n- CHECKING  \n- CREDIT  \n- IRA  \n- NOW  \n- MONEY_MARKET  \n- CREDIT_LINE  \n- INSTALLMENT_LOAN  \n- MORTGAGE_LOAN\n"
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account. Applies only to Debit.
          example: Main account
        primaryAccount:
          type: string
          description: Indicates if Account is Primary or not. Possible values Y or N. Applies only to Debit.
          example: "Y"
        accountStatus:
          type: string
          description: Status of the account. Applies only to Debit.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - RESTRICTED
          - INACTIVE
    AddContactInfoResponse:
      type: object
      properties:
        homePhone:
          type: string
          description: Home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the primary account owner.
          example: "1005550001"
        alternateContactName:
          type: string
          description: Alternate contact name of the primary account owner.
          example: Doe, John H
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email address of the customer.
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder. If no date is present in the request, date on record will remain unchanged.
          format: date
        taxIdOrSsn:
          type: string
          description: |
            Indicates the social security number or tax id number. Max length for SSN is 9. Max length for Tax ID is 20.
          example: xxxxx5678
        taxIdType:
          type: string
          description: Indicates which value to updated - SSN or EIN number. Applies to credit only. Possible values - SSN or EIN
          example: EIN
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification.
        motherMaidenName:
          type: string
          description: Mother's maiden name
          example: Smith
        activationType:
          type: string
          description: Used to activate the card.
          example: MOTHERS_MAIDEN_NAME
          enum:
          - SOCIAL_SECURITY_NUMBER
          - MOTHERS_MAIDEN_NAME
          - BIRTH_DATE
          - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: "SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  \nMOTHERS_MAIDEN_NAME should be less than or equal to six characters.  \nBIRTH_DATE format MM/DD/YYYY  \nUSER_SELECTED_SECURITY_CODE One to six characters. \n"
          example: Smith
    CreditCardholderAddressRequest:
      title: Address
      required:
      - addressLine1
      - addressLine2
      - addressType
      - city
      - country
      - state
      - zipCode
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value taken is false.
          example: false
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: Apt 100
        addressLine3:
          type: string
          description: Line 3 of address.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Line 4 of address.
          example: AVENUE
        city:
          type: string
          description: Name of city.
          example: Newark
        country:
          type: string
          description: Country code for address.
          example: US
        state:
          type: string
          description: Name of state. For credit, state values are applicable only for USA.
          example: New Jersey
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        addressType:
          type: string
          description: "The type of address. Following are the valid values -  \nType 'BILLING' is applicable for any of the cardholders (primary, secondary and authorized).  \nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          example: PLASTIC
          enum:
          - PLASTIC
          - BILLING
          - STATEMENT
          - LETTERS
        categoryCode:
          type: string
          description: Defines if the address is temporary, permanent or repeating.
          example: TEMPORARY
          enum:
          - TEMPORARY
          - PERMANENT
          - REPEATING
        beginDate:
          type: string
          description: The date from which the address is valid. Mainly used when categoryCode - Permanent, Temporary or Repeating.
          format: date
        endDate:
          type: string
          description: The date until which the address is valid. Mainly used when categoryCode - Temporary or Repeating. For Permanent address, there is a default value of endDate provided.
          format: date
    AddCardResponseCreditCardholderAddressRequestV2:
      title: Address
      required:
      - addressLine1
      - addressLine2
      - addressType
      - city
      - country
      - state
      - zipCode
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value taken is false.
          example: false
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: Apt 100
        addressLine3:
          type: string
          description: Line 3 of address.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Line 4 of address.
          example: AVENUE
        city:
          type: string
          description: Name of city.
          example: Newark
        countryCode:
          type: string
          description: Country code for address.
          example: USA
        stateCode:
          type: string
          description: Name of state. For credit, state values are applicable only for USA.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "12345"
        addressType:
          type: string
          description: "The type of address. Following are the valid values -  \nType 'BILLING' is applicable for any of the cardholders (primary, secondary and authorized).  \nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          example: PLASTIC
          enum:
          - PLASTIC
          - BILLING
          - STATEMENT
          - LETTERS
        categoryCode:
          type: string
          description: Defines if the address is temporary, permanent or repeating.
          example: TEMPORARY
          enum:
          - TEMPORARY
          - PERMANENT
          - REPEATING
        beginDate:
          type: string
          description: The date from which the address is valid. Mainly used when categoryCode - Permanent, Temporary or Repeating.
          format: date
        endDate:
          type: string
          description: The date until which the address is valid. Mainly used when categoryCode - Temporary or Repeating. For Permanent address, there is a default value of endDate provided.
          format: date
    CreditCardholderAddressRequestV2:
      title: Address
      required:
      - addressLine1
      - addressLine2
      - addressType
      - city
      - countryCode
      - stateCode
      - zipCode
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value taken is false.
          example: false
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: Apt 100
        addressLine3:
          type: string
          description: Line 3 of address.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Line 4 of address.
          example: AVENUE
        city:
          type: string
          description: Name of city.
          example: Newark
        countryCode:
          type: string
          description: Country code for address.
          example: USA
        stateCode:
          type: string
          description: Name of state. For credit, state values are applicable only for USA.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "12345"
        addressType:
          type: string
          description: "The type of address. Following are the valid values -  \nType 'BILLING' is applicable for any of the cardholders (primary, secondary and authorized).  \nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          example: PLASTIC
          enum:
          - PLASTIC
          - BILLING
          - STATEMENT
          - LETTERS
        categoryCode:
          type: string
          description: Defines if the address is temporary, permanent or repeating.
          example: TEMPORARY
          enum:
          - TEMPORARY
          - PERMANENT
          - REPEATING
        beginDate:
          type: string
          description: The date from which the address is valid. Mainly used when categoryCode - Permanent, Temporary or Repeating.
          format: date
        endDate:
          type: string
          description: The date until which the address is valid. Mainly used when categoryCode - Temporary or Repeating. For Permanent address, there is a default value of endDate provided.
          format: date
    DebitCardholderAddressRequest:
      title: Address
      required:
      - addressLine1
      - addressType
      - city
      - country
      type: object
      properties:
        addressLine1:
          type: string
          description: First address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: Apt 100
        city:
          type: string
          description: City of the cardholder's primary address. Maximum 21 characters.
          example: Newark
        country:
          type: string
          description: Country associated with the cardholder's primary address.
          example: USA
        state:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "123451234"
        addressType:
          type: string
          description: Indicates corresponding address associated with cardholder record.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        cardMailerIndicator:
          type: boolean
          description: |
            Indicates the card mailer for all card orders are sent to the primary address.
          example: true
        pinMailerIndicator:
          type: boolean
          description: |
            Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
          example: false
    DebitCardholderPrimaryAddressRequestV2:
      title: PrimaryAddress
      required:
      - addressLine1
      - addressType
      - city
      - countryCode
      type: object
      properties:
        addressLine1:
          type: string
          description: First address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Lane
        city:
          type: string
          description: City of the cardholder's primary address. Maximum 21 characters.
          example: Newark
        countryCode:
          type: string
          description: Country associated with the cardholder's primary address.
          example: USA
        stateCode:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "12345"
        cardMailerIndicator:
          type: boolean
          description: |
            Indicates the card mailer for all card orders are sent to the primary address.
          example: true
        pinMailerIndicator:
          type: boolean
          description: |
            Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
          example: true
    DebitCardholderAlternateAddressRequestV2:
      title: AlternateAddress
      required:
      - addressLine1
      - addressType
      - city
      - countryCode
      type: object
      properties:
        addressLine1:
          type: string
          description: First address line of cardholder's primary address. Maximum 33 characters.
          example: 456 Any Street
        addressLine2:
          type: string
          description: Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: 456 Any Lane
        city:
          type: string
          description: City of the cardholder's primary address. Maximum 21 characters.
          example: Naples
        countryCode:
          type: string
          description: Country associated with the cardholder's primary address.
          example: USA
        stateCode:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: FL
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "33962"
        cardMailerIndicator:
          type: boolean
          description: |
            Indicates the card mailer for all card orders are sent to the primary address.
          example: false
        pinMailerIndicator:
          type: boolean
          description: |
            Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
          example: false
    CreditPINInfo:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Defaults to 0000. Should not be left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum pin tries allowed for the cardholder.
          example: "4"
    DebitPINInfo:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Defaults to 0000 when left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum amount of failed pin tries allowed for the cardholder.
          example: "4"
        pinOffsetChangeDate:
          type: string
          description: Personal identification number offset changed. Displays the date of the most recent PIN Offset change.
          format: date
    DebitPINInfoV2:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Defaults to 0000 when left blank.
          example: "1234"
    CreditOnly:
      required:
      - association
      - cardStatus
      - cardStock
      type: object
      properties:
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued.
          example: "00"
        cardStatus:
          type: string
          description: Status of card. Refer to statusReasonCode field description for updating the status.
          example: NORMAL
          enum:
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated with the card status.
          example: NORMAL
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
        association:
          type: string
          description: Type of association.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary    \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "1"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card.
          example: "00"
        producePlasticIdentifier:
          type: string
          description: Indicates if a new plastic card was generated when a card is marked Lost/Stolen.
          example: "Y"
        creditPINInfo:
          $ref: '#/components/schemas/CreditPINInfo'
        creditCardholderAddress:
          $ref: '#/components/schemas/CreditCardholderAddressRequest'
        creditCardholderName:
          $ref: '#/components/schemas/CreditCardholderName'
        creditContactInfo:
          $ref: '#/components/schemas/CreditContactInfo'
        creditAssociatedAccounts:
          $ref: '#/components/schemas/CreditAssociatedAccount'
    CreditOnlyV2:
      required:
      - association
      - cardStatus
      - cardStock
      type: object
      properties:
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued.
          example: "00"
        cardStatus:
          type: string
          description: Status of card. Refer to statusReasonCode field description for updating the status.
          example: NORMAL
          enum:
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated with the card status.
          example: NORMAL
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
        association:
          type: string
          description: Type of association.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary    \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "02"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card.
          example: "00"
        producePlasticIdentifier:
          type: string
          description: Indicates if a new plastic card was generated when a card is marked Lost/Stolen.
          example: "Y"
        creditCardholderAddress:
          $ref: '#/components/schemas/CreditCardholderAddressRequestV2'
        creditCardholderName:
          $ref: '#/components/schemas/CreditCardholderNameV2'
        creditContactInfo:
          $ref: '#/components/schemas/CreditContactInfoV2'
        creditAssociatedAccounts:
          $ref: '#/components/schemas/CreditAssociatedAccountV2'
    DebitOnly:
      required:
      - cardStatus
      type: object
      properties:
        cardStatus:
          type: string
          description: Current status of the selected card.
          example: ACTIVE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
        statusReasonCode:
          type: string
          description: |
            Reason for the current status of the selected card.
            One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.
            All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.
            Keep this field as NONE when updating to any other statuses.
          example: NONE
          enum:
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
          - REVOKED
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. Editable when adding a record.
            If the member number is not passed, defaults to 0 (zero).
            Applies to debit cards only.
          example: "0"
        oldCardExpirationDate:
          maxLength: 5
          type: string
          description: |
            Previous expiration date of the selected card. This date could possibly be greater than the date in the Expiration Date field.
          format: MM/YY
          example: 10/23
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
        memberSinceDate:
          type: string
          description: |
            Month and year when the card record was added. This date may or may not correspond to the open date of the card record. If not provided, the value will default to current the month and year.
          format: MM/YY
          example: 03/22
        branch:
          maxLength: 4
          type: string
          description: Unique number FI/institution assigns to identify a specific branch. The default value is 0000.
          example: "0000"
        reissuePerCardClass:
          type: string
          description: Indicates if the expiration date of card will be rolled over to the next expiration date after month end and a new card will be reissued. The value depends on the card setup.
          example: "true"
          enum:
          - "true"
          - "false"
        updaterServiceOptOut:
          type: string
          description: "Applicable when cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. \nIf the cardbase does not participate in AUS, the fields can be blank. Opting out of AUS ensures Fiserv does not send future card number updates to Mastercard or Visa; it does not delete any information previously sent to merchants.\nThe fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system.\n"
          example: "true"
          enum:
          - "true"
          - "false"
        debitPINInfo:
          $ref: '#/components/schemas/DebitPINInfo'
        debitPriorCardInfo:
          $ref: '#/components/schemas/DebitPriorCardInfo'
        debitCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardholderAddressRequest'
        debitCardholderName:
          $ref: '#/components/schemas/DebitCardholderName'
        debitContactInfo:
          $ref: '#/components/schemas/DebitContactInfo'
        debitAssociatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/DebitAssociatedAccount'
    DebitOnlyV2:
      required:
      - cardStatus
      type: object
      properties:
        cardStatus:
          type: string
          description: Current status of the selected card.
          example: ACTIVE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
        statusReasonCode:
          type: string
          description: |
            Reason for the current status of the selected card.
            One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.
            All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.
            Keep this field as NONE when updating to any other statuses.
          example: NONE
          enum:
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
          - REVOKED
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. Editable when adding a record.
            If the member number is not passed, defaults to 0 (zero).
            Applies to debit cards only.
          example: "0"
        expirationDate:
          type: string
          description: |
            Month and year the card record is set to expire.
          format: MM/YY
          example: 10/23
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
          example: AAA00
        memberSinceDate:
          type: string
          description: |
            Month and year when the card record was added. This date may or may not correspond to the open date of the card record. If not provided, the value will default to current the month and year.
          format: MM/YY
          example: 09/23
        branch:
          maxLength: 4
          type: string
          description: Unique number FI/institution assigns to identify a specific branch. The default value is 0000.
          example: "0000"
        reissuePerCardClass:
          type: boolean
          description: Indicates if the expiration date of card will be rolled over to the next expiration date after month end and a new card will be reissued. The value depends on the card setup.
          example: true
        updaterServiceOptOut:
          type: boolean
          description: "Applicable when cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. \nIf the cardbase does not participate in AUS, the fields can be blank. Opting out of AUS ensures Fiserv does not send future card number updates to Mastercard or Visa; it does not delete any information previously sent to merchants.\nThe fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system.\n"
          example: false
        debitPINInfo:
          $ref: '#/components/schemas/DebitPINInfoV2'
        debitPriorCardInfo:
          $ref: '#/components/schemas/DebitPriorCardInfoV2'
        debitCardholderAddressPrimary:
          $ref: '#/components/schemas/DebitCardholderPrimaryAddressRequestV2'
        debitCardholderAddressAlternate:
          $ref: '#/components/schemas/DebitCardholderAlternateAddressRequestV2'
        debitCardholderName:
          $ref: '#/components/schemas/DebitCardholderNameV2'
        debitContactInfo:
          $ref: '#/components/schemas/DebitContactInfoV2'
        debitAssociatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/DebitAssociatedAccountV2'
    CreditAssociatedAccount:
      title: Account
      required:
      - accountNumber
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Account type. \nValid values -\n- C - Control  \n- I - Individual Pay  \n- S - Sub-Account, Consumer.\n"
          example: Individual
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
    AddCardResponseCreditAssociatedAccountV2:
      title: Account
      required:
      - accountNumber
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Account type. \nValid values -\n- C - Control  \n- I - Individual Pay  \n- S - Sub-Account, Consumer.\n"
          example: Individual
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
    CreditAssociatedAccountV2:
      title: Account
      required:
      - accountNumber
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Account type. \nValid values -\n- C - Control  \n- I - Individual Pay  \n- S - Sub-Account, Consumer.\n"
          example: Individual
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
    CreditContactInfo:
      type: object
      properties:
        allowVoiceCommunication:
          type: boolean
          description: Consent to Communicate—Consent to contact customer through phone
          example: false
        allowTextCommunication:
          type: boolean
          description: Consent to Communicate—Consent to contact customer through text.
          example: false
        homePhone:
          type: string
          description: Home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the primary account owner.
          example: "1005550001"
        emailAddress:
          type: string
          description: Email address of the cardholder.
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: "123005678"
        taxIdType:
          type: string
          description: Indicates which value to updated - SSN or EIN number. Valid values are - SSN or EIN
          example: EIN
        motherMaidenName:
          type: string
          description: Mother's maiden name
          example: Smith
      description: Contact Information of the cardholder. One of the phone numbers among homePhone, workPhone and cellPhone is required.
    AddCardResponseCreditContactInfoV2:
      type: object
      properties:
        homePhone:
          type: string
          description: Home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the primary account owner.
          example: "1005550001"
        emailAddress:
          type: string
          description: Email address of the cardholder.
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: "123005678"
        taxIdType:
          type: string
          description: Indicates which value to updated - SSN or EIN number. Valid values are - SSN or EIN
          example: EIN
        motherMaidenName:
          type: string
          description: Mother's maiden name
          example: Smith
      description: Contact Information of the cardholder. One of the phone numbers among homePhone, workPhone and cellPhone is required.
    CreditContactInfoV2:
      type: object
      properties:
        homePhone:
          type: string
          description: Home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the primary account owner.
          example: "1005550001"
        emailAddress:
          type: string
          description: Email address of the cardholder.
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: "123005678"
        taxIdType:
          type: string
          description: Indicates which value to updated - SSN or EIN number. Valid values are - SSN or EIN
          example: EIN
        motherMaidenName:
          type: string
          description: Mother's maiden name
          example: Smith
      description: Contact Information of the cardholder. One of the phone numbers among homePhone, workPhone and cellPhone is required.
    DebitAssociatedAccount:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Account type. \nValues are -  \n- SAVINGS  \n- CHECKING  \n- CREDIT  \n- IRA  \n- NOW  \n- MONEY_MARKET  \n- CREDIT_LINE  \n- INSTALLMENT_LOAN  \n- MORTGAGE_LOAN\n"
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account.
          example: Main account
        primaryAccount:
          type: string
          description: Indicates if account is primary or not. Values are Y or N.
          example: "Y"
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - RESTRICTED
          - INACTIVE
    DebitAssociatedAccountV2:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "987654321"
        accountType:
          type: string
          description: "Account type. \nValues are -  \n- SAVINGS  \n- CHECKING  \n- CREDIT  \n- IRA  \n- NOW  \n- MONEY_MARKET  \n- CREDIT_LINE  \n- INSTALLMENT_LOAN  \n- MORTGAGE_LOAN\n"
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account.
          example: Main account
        primaryAccount:
          type: string
          description: Indicates if account is primary or not. Values are Y or N.
          example: "Y"
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - RESTRICTED
          - INACTIVE
    DebitContactInfo:
      type: object
      properties:
        homePhone:
          type: string
          description: Home phone number of the cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the cardholder.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the cardholder.
          example: "1005550001"
        alternateContactName:
          type: string
          description: Indicates the alternate contact name of the cardholder.
          example: Doe, John J
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email address of the cardholder.
          format: email
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        taxIdOrSsn:
          type: string
          description: Indicates the social security number or tax id number. Max length for SSN- 9 and for Tax ID-20. Formats listed in the example.
          example: "123005678"
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification, example - Driver's license number.
        motherMaidenName:
          type: string
          description: Mother's Maiden Name
          example: Smith
        activationType:
          type: string
          description: Used to activate the card.
          example: MOTHERS_MAIDEN_NAME
          enum:
          - SOCIAL_SECURITY_NUMBER
          - MOTHERS_MAIDEN_NAME
          - BIRTH_DATE
          - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: "SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  \nMOTHERS_MAIDEN_NAME should be less than or equal to six characters.  \nBIRTH_DATE format MM/DD/YYYY  \nUSER_SELECTED_SECURITY_CODE One to six characters.  \n"
          example: Smith
      description: Contact Information of the cardholder. One of the phone numbers among homePhone, workPhone and cellPhone is required.
    DebitContactInfoV2:
      type: object
      properties:
        homePhone:
          type: string
          description: Home phone number of the cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the cardholder.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the cardholder.
          example: "1005550001"
        alternateContactName:
          type: string
          description: Indicates the alternate contact name of the cardholder.
          example: Doe, John H
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email address of the cardholder.
          format: email
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        taxIdOrSsn:
          type: string
          description: Indicates the social security number or tax id number. Max length for SSN- 9 and for Tax ID-20. Formats listed in the example.
          example: "123005678"
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification, example - Driver's license number.
          example: Driver's license
        motherMaidenName:
          type: string
          description: Mother's Maiden Name
          example: Smith
        activationType:
          type: string
          description: Used to activate the card.
          example: SOCIAL_SECURITY_NUMBER
          enum:
          - SOCIAL_SECURITY_NUMBER
          - MOTHERS_MAIDEN_NAME
          - BIRTH_DATE
          - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: "SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  \nMOTHERS_MAIDEN_NAME should be less than or equal to six characters.  \nBIRTH_DATE format MM/DD/YYYY  \nUSER_SELECTED_SECURITY_CODE One to six characters.  \n"
          example: "5678"
      description: Contact Information of the cardholder. One of the phone numbers among homePhone, workPhone and cellPhone is required.
    AddCardResponseDebitContactInfoV2:
      type: object
      properties:
        homePhone:
          type: string
          description: Home phone number of the cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the cardholder.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the cardholder.
          example: "1005550001"
        alternateContactName:
          type: string
          description: Indicates the alternate contact name of the cardholder.
          example: Doe, John H
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email address of the cardholder.
          format: email
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder. If no date is present in request, DOB on record will remain unchanged.
          format: date
        taxIdOrSsn:
          type: string
          description: Indicates the social security number or tax id number. Max length for SSN- 9 and for Tax ID-20. Formats listed in the example.
          example: "123005678"
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification, example - Driver's license number.
          example: Driver's license
        motherMaidenName:
          type: string
          description: Mother's Maiden Name
          example: Smith
        activationType:
          type: string
          description: Used to activate the card.
          example: SOCIAL_SECURITY_NUMBER
          enum:
          - SOCIAL_SECURITY_NUMBER
          - MOTHERS_MAIDEN_NAME
          - BIRTH_DATE
          - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: "SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  \nMOTHERS_MAIDEN_NAME should be less than or equal to six characters.  \nBIRTH_DATE format MM/DD/YYYY  \nUSER_SELECTED_SECURITY_CODE One to six characters.  \n"
          example: "5678"
      description: Contact Information of the cardholder. One of the phone numbers among homePhone, workPhone and cellPhone is required.
    CreditCardholderName:
      title: CardholderName
      required:
      - specialHandling
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: "Embossed Line or ID used to add photo image to card.\nValid values are   \n- A-Z  \n- 0-9  \n- & (Ampersand)  \n- , (Comma)  \n- / (Forward Slash)  \n- (Apostrophe)  \n- -(Hyphen, minus symbol)  \n- (Period)\n"
          example: Home Team
        specialHandling:
          type: string
          description: Identifies how the replacement card will be delivered to the cardholder.
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
    AddCardResponseCreditCardholderNameV2:
      title: CardholderName
      required:
      - specialHandling
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: "Embossed Line or ID used to add photo image to card.\nValid values are   \n- A-Z  \n- 0-9  \n- & (Ampersand)  \n- , (Comma)  \n- / (Forward Slash)  \n- (Apostrophe)  \n- -(Hyphen, minus symbol)  \n- (Period)\n"
          example: Home Team
        specialHandling:
          type: string
          description: Identifies how the replacement card will be delivered to the cardholder.
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
    CreditCardholderNameV2:
      title: CardholderName
      required:
      - specialHandling
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: "Embossed Line or ID used to add photo image to card.\nValid values are   \n- A-Z  \n- 0-9  \n- & (Ampersand)  \n- , (Comma)  \n- / (Forward Slash)  \n- (Apostrophe)  \n- -(Hyphen, minus symbol)  \n- (Period)\n"
          example: Home Team
        specialHandling:
          type: string
          description: Identifies how the replacement card will be delivered to the cardholder.
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
    DebitCardholderName:
      title: CardholderName
      required:
      - cardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
        rushType:
          type: string
          description: |
            Only for Order or Card Add maintenance. Controls Rush Order processing for card and PIN orders.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder.
          example: CARD
          enum:
          - NONE
          - CARD
          - PIN
          - CARD_AND_PIN
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
    DebitCardholderNameV2:
      title: CardholderName
      required:
      - cardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        additionalEmbossLine:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
        rushType:
          type: string
          description: |
            Only for Order or Card Add maintenance. Controls Rush Order processing for card and PIN orders.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder.
          example: CARD
          enum:
          - NONE
          - CARD
          - PIN
          - CARD_AND_PIN
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
          example: MD
    NewCardRequest:
      title: NewCardRequest
      required:
      - cardType
      type: object
      properties:
        cardNumber:
          type: string
          description: "Unique number assigned to each cardholder. \n- If your card prefix is set up for auto-number generation or system-generated card numbers, this field is read-only and displays the words System Generated in place of a card number.\n- If your FI is set up for system generated card numbers, then the Card Management application assigns a card number in sequential order.\n"
          example: "4000100020003000"
        nonTransTokenFlag:
          type: boolean
          description: Flag indicates the request is from a tokenized client or not.
          example: true
        responseFormat:
          type: string
          description: |
            Determines the format of Card number and/or Non-transactional token in the response.
            Values are -
            - MASKED_CARD_ONLY - Masked Card
            - FULL_CARD_ONLY - Clear Card
            - TOKEN_ONLY - Non-transactional token only
            - MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token
            - FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
        expirationDate:
          type: string
          description: |
            Month and year the card record is set to expire.
          format: MM/YY
          example: 10/23
        emvCard:
          type: string
          description: "EMV chip card.\nValues are - \n- CONTACT — Card issued as a Contact EMV chip card.\n- CONTACTLESS — Card issued as a Contactless EMV chip card.\n- false - Card is a magstripe-only card and cannot perform an EMV transaction. \n"
          enum:
          - CONTACT
          - CONTACTLESS
          - "false"
        debitOnly:
          $ref: '#/components/schemas/DebitOnly'
        creditOnly:
          $ref: '#/components/schemas/CreditOnly'
    NewCardRequestV2:
      title: NewCardRequest
      required:
      - cardType
      type: object
      properties:
        cardNumber:
          type: string
          description: "Unique number assigned to each cardholder. \n- If your card prefix is set up for auto-number generation or system-generated card numbers, this field is read-only and displays the words System Generated in place of a card number.\n- If your FI is set up for system generated card numbers, then the Card Management application assigns a card number in sequential order.\n"
          example: "4000200030004000"
        nonTransTokenFlag:
          type: boolean
          description: Flag indicates the request is from a tokenized client or not.
          example: true
        responseFormat:
          type: string
          description: |
            Determines the format of Card number and/or Non-transactional token in the response.
            Values are -
            - MASKED_CARD_ONLY - Masked Card
            - FULL_CARD_ONLY - Clear Card
            - TOKEN_ONLY - Non-transactional token only
            - MASKED_CARD_AND_TOKEN - Both Masked Card and Non-transactional token
            - FULL_CARD_AND_TOKEN - Both Clear Card and Non-transactional token
          example: MASKED_CARD_ONLY
          enum:
          - MASKED_CARD_ONLY
          - FULL_CARD_ONLY
          - TOKEN_ONLY
          - MASKED_CARD_AND_TOKEN
          - FULL_CARD_AND_TOKEN
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
        debitOnly:
          $ref: '#/components/schemas/DebitOnlyV2'
        creditOnly:
          $ref: '#/components/schemas/CreditOnlyV2'
    NewCardResponse:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/AddCardDetailsResponse'
        cardholderName:
          $ref: '#/components/schemas/AddCardholderNameResponse'
        contactInfo:
          $ref: '#/components/schemas/AddContactInfoResponse'
        associatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/AddAccountResponse'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    NewCardResponseV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: "Unique number assigned to each cardholder. \n- If your card prefix is set up for auto-number generation or system-generated card numbers, this field is read-only and displays the words System Generated in place of a card number.\n- If your FI is set up for system generated card numbers, then the Card Management application assigns a card number in sequential order..\n"
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          example: piUVBJKZGfks4000
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
        emvCard:
          type: string
          description: "EMV chip card.\nValues -\n- CONTACT — Card issued as a Contact EMV chip card.\n- CONTACTLESS — Card issued as a Contactless EMV chip card.\n- false - Card is a magstripe-only card and cannot perform an EMV transaction. \n"
          enum:
          - CONTACT
          - CONTACTLESS
          - "false"
        debitOnly:
          $ref: '#/components/schemas/DebitOnlyAddResponseV2'
        creditOnly:
          $ref: '#/components/schemas/CreditOnlyAddResponseV2'
    PartialNewCardResponseV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: "Unique number assigned to each cardholder. \n- If your card prefix is set up for auto-number generation or system-generated card numbers, this field is read-only and displays the words System Generated in place of a card number.\n- If your FI is set up for system generated card numbers, then the Card Management application assigns a card number in sequential order..\n"
          example: 400020XXXXXX4000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          example: piUVBJKZGfks4000
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        emvCard:
          type: string
          description: "EMV chip card.\nValues -\n- CONTACT — Card issued as a Contact EMV chip card.\n- CONTACTLESS — Card issued as a Contactless EMV chip card.\n- false - Card is a magstripe-only card and cannot perform an EMV transaction. \n"
          enum:
          - CONTACT
          - CONTACTLESS
          - "false"
        debitOnly:
          $ref: '#/components/schemas/DebitOnlyAddResponseV2'
        creditOnly:
          $ref: '#/components/schemas/CreditOnlyAddResponseV2'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    DebitOnlyAddResponseV2:
      type: object
      properties:
        cardStatus:
          type: string
          description: "Current status of the selected card.\nValues are -  \n- ACTIVE\n- CAPTURE\n- DEACTIVATE\n- ISSUED\n- RESTRICTED\n"
          example: ACTIVE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
        statusReasonCode:
          type: string
          description: "Indicates the reason code associated to the card status.\nOne of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.\nAll the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.\nKeep this field as NONE when updating to any other statuses.\nValues for Debit -  \n- ABUSED  \n- CLOSED  \n- CUSTOMER_REQUEST  \n- DAMAGED  \n- LOST   \n- REVOKED  \n- STOLEN  \nValues For Credit - \n- CLOSED_BY_FI  \n- CLOSED_BY_CUSTOMER  \n- DECEASED  \n- LOST  \n- REVOKED  \n- STOLEN  \n- TEMP_BLOCK_BY_FI  \n- TEMP_BLOCK_AGENT\n"
          example: NONE
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. Editable when adding a record.
            If the member number is not passed, defaults to 0 (zero).
            Applies to debit cards only.
          example: "0"
        expirationDate:
          type: string
          description: |
            Month and year the card record is set to expire.
          format: MM/YY
          example: 10/23
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
          example: AAA00
        memberSinceDate:
          type: string
          description: |
            Month and year when the card record was added. This date may or may not correspond to the open date of the card record.
          format: MM/YY
          example: 09/23
        branch:
          maxLength: 4
          type: string
          description: |
            Unique number FI/institution assigns to identify a specific branch. The default value is 0000.
          example: "0000"
        reissuePerCardClass:
          type: boolean
          description: Reissue of the new card depending on the card class.
          example: true
        updaterServiceOptOut:
          type: boolean
          description: "Applicable when cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. \nIf the cardbase does not participate in AUS, the fields can be blank. Opting out of AUS ensures Fiserv does not send future card number updates to Mastercard or Visa; it does not delete any information previously sent to merchants.\nThe fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system.\n"
          example: false
        debitPINInfo:
          $ref: '#/components/schemas/DebitPINInfoAddCardResponseV2'
        debitPriorCardInfo:
          $ref: '#/components/schemas/DebitPriorCardInfoAddCardResponseV2'
        debitCardholderAddressPrimary:
          $ref: '#/components/schemas/DebitCardholderPrimaryAddressAddCardResponseV2'
        debitCardholderAddressAlternate:
          $ref: '#/components/schemas/DebitCardholderAlternateAddressAddCardResponseV2'
        debitCardholderName:
          $ref: '#/components/schemas/DebitCardholderNameAddResponseV2'
        debitContactInfo:
          $ref: '#/components/schemas/AddCardResponseDebitContactInfoV2'
        debitAssociatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/DebitAssociatedAccountAddCardResponseV2'
    CreditOnlyAddResponseV2:
      type: object
      properties:
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued.
          example: "00"
        cardStatus:
          type: string
          description: |
            Current status of the selected card.
            Values are -
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
          example: NORMAL
          enum:
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated with the card status.
          example: NORMAL
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
        expirationDate:
          type: string
          description: |
            Month and year the card record is set to expire.
          format: MM/YY
          example: 10/23
        association:
          type: string
          description: Type of association.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary    \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "02"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card.
          example: "00"
        producePlasticIdentifier:
          type: string
          description: Indicates if a new plastic card was generated when a card is marked Lost/Stolen.
          example: "Y"
        creditCardholderAddress:
          $ref: '#/components/schemas/AddCardResponseCreditCardholderAddressRequestV2'
        creditCardholderName:
          $ref: '#/components/schemas/AddCardResponseCreditCardholderNameV2'
        creditContactInfo:
          $ref: '#/components/schemas/AddCardResponseCreditContactInfoV2'
        creditAssociatedAccounts:
          $ref: '#/components/schemas/AddCardResponseCreditAssociatedAccountV2'
    DebitPINInfoAddCardResponseV2:
      type: object
      properties:
        pinOffset:
          type: string
          description: |
            Used by the card vendor to calculate the PIN number for the card. Defaults to 0000 when left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: |
            Maximum amount of failed pin tries allowed for the cardholder.
          example: "4"
        pinOffsetChangeDate:
          type: string
          description: |
            Personal identification number offset changed. Displays the date of the most recent PIN Offset change.
          format: date
    DebitPriorCardInfoAddCardResponseV2:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: |
            Populated only when the current card number is replacing one that is no longer used. Some examples are when card numbers are reissued due to fraud and an issuer reissues card numbers under a new BIN.
          example: 400010XXXXXX4000
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-transactional token associated with the prior card number
          example: WUPIL5DQTZGM4000
        priorMemberNumber:
          type: string
          description: |
            Member number associated with the prior card number. If available from the cardholder record, the member number displays, else field is blank.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: |
            Expiration date of the prior card number.
          format: MM/YY
          example: 10/23
    DebitCardholderPrimaryAddressAddCardResponseV2:
      title: PrimaryAddress
      type: object
      properties:
        addressLine1:
          type: string
          description: First address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Lane
        city:
          type: string
          description: City of the cardholder's primary address. Maximum 21 characters.
          example: Newark
        countryCode:
          type: string
          description: Country associated with the cardholder's primary address.
          example: USA
        stateCode:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: NJ
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "12345"
        cardMailerIndicator:
          type: boolean
          description: |
            Indicates the card mailer for all card orders are sent to the primary address.
          example: true
        pinMailerIndicator:
          type: boolean
          description: |
            Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
          example: true
    DebitCardholderAlternateAddressAddCardResponseV2:
      title: AlternateAddress
      type: object
      properties:
        addressLine1:
          type: string
          description: First address line of cardholder's primary address. Maximum 33 characters.
          example: 456 Any Street
        addressLine2:
          type: string
          description: Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: 456 Any Lane
        city:
          type: string
          description: City of the cardholder's primary address. Maximum 21 characters.
          example: Naples
        countryCode:
          type: string
          description: Country associated with the cardholder's primary address.
          example: USA
        stateCode:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: FL
        zipCode:
          type: string
          description: |
            Zip code of the given location. This field is mandatory if the country is USA.
            - For USA- This must be a zip code of 5 or 9 numeric digits.
            - For Non-USA country code- This field is optional (can be blank).It can be populated with up to 15 alpha numeric characters (- is allowed).
          example: "33962"
        cardMailerIndicator:
          type: boolean
          description: |
            Indicates the card mailer for all card orders are sent to the primary address.
          example: false
        pinMailerIndicator:
          type: boolean
          description: |
            Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
          example: false
    DebitCardholderNameAddResponseV2:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        additionalEmbossLine:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
        rushType:
          type: string
          description: |
            Only for Order or Card Add maintenance. Controls Rush Order processing for card and PIN orders.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup but you can change the order type.The field is for Debit only.
          example: CARD
          enum:
          - NONE
          - CARD
          - PIN
          - CARD_AND_PIN
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
          example: MD
    DebitAssociatedAccountAddCardResponseV2:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "987654321"
        accountType:
          type: string
          description: "Account type. Applies for Credit and Debit.  \nValues for Credit -  \n- C - Control  \n- I - Individual Pay  \n- S - Sub-Account Consumer  \nValues for Debit -  \n- SAVINGS  \n- CHECKING  \n- CREDIT  \n- IRA  \n- NOW  \n- MONEY_MARKET  \n- CREDIT_LINE  \n- INSTALLMENT_LOAN  \n- MORTGAGE_LOAN\n"
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account. Applies only to Debit.
          example: Main account
        primaryAccount:
          type: string
          description: Indicates if Account is Primary or not. Possible values Y or N. Applies only to Debit.
          example: "Y"
        accountStatus:
          type: string
          description: Status of the account. Applies only to Debit.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - RESTRICTED
          - INACTIVE
    NewCardTemplateRequest:
      title: NewCardTemplateRequest
      type: object
      properties:
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
          example: AAA00
        priorCardNumber:
          maxLength: 19
          type: string
          description: |
            Populated only when the current card number is replacing one that is no longer used. Some examples are when card numbers are reissued due to fraud and an issuer reissues card numbers under a new BIN.
          example: "4000100020003000"
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-transactional token generated and associated with each card number.
          example: WUPIL5DQTZGM3000
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          example: "0"
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
      description: Used to generate the template to add a card. The request must include one of the fields - cardClass, or priorCardNumber or accountNumber or priorNonTransToken.
    NewCardTemplateRequestV2:
      title: NewCardTemplateRequest
      type: object
      properties:
        debitOnly:
          $ref: '#/components/schemas/DebitOnlyTemplateRequestV2'
        creditOnly:
          $ref: '#/components/schemas/CreditOnlyTemplateRequestV2'
      description: Used to generate the template to add a card. The request must include one of the fields - cardClass, or cardNumber or accountNumber or nonTransToken.
    NewCardTemplateResponse:
      title: NewCardTemplateResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          example: 400010xxxxxx3000
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          example: WUPIL5DQTZGM3000
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        expirationDate:
          type: string
          description: Month and year the card record is set to expire.
          format: MM/YY
          example: 10/23
        emvCard:
          type: string
          description: |
            EMV chip card.
            Values are -
            - CONTACT — Card issued as a Contact EMV chip card.
            - CONTACTLESS — Card issued as a Contactless EMV chip card.
            - false - Card is a magstripe-only card and cannot perform an EMV transaction.
          enum:
          - CONTACT
          - CONTACTLESS
          - "false"
        debitOnly:
          $ref: '#/components/schemas/DebitOnlyTemplateResponse'
        creditOnly:
          $ref: '#/components/schemas/CreditOnlyTemplateResponse'
    NewCardTemplateResponseV2:
      title: NewCardTemplateResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          example: ""
        cardType:
          type: string
          description: Indicates the type of card associated with this card class.
          example: DEBIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        cardGeneratorIndicator:
          type: string
          description: |
            Indicates the card generator type for the given card. Possible values are
              - M - Manual Entry
              - S - System Generated - Sequential
              - R - System Generated - Random
              - H - Hybrid - Sequential
              - Q - Hybrid - Random
          example: S
        nonTransTokenFlag:
          type: boolean
          description: Flag indicates the request is from a tokenized client or not.
          example: true
        tspUpdateFlag:
          type: boolean
          description: The indicator which mentions whether cardHolder participiates in TSP or not.
          example: true
        debitOnly:
          $ref: '#/components/schemas/DebitOnlyTemplateResponseV2'
        creditOnly:
          $ref: '#/components/schemas/CreditOnlyTemplateResponseV2'
    CreditCardholderAddressTemplateResponse:
      title: Address
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value is false.
          example: false
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: Apt 100
        addressLine3:
          type: string
          description: Line 3 of address.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Line 4 of address.
          example: AVENUE
        city:
          type: string
          description: Name of city.
          example: Newark
        country:
          type: string
          description: Country code for Address.
          example: US
        state:
          type: string
          description: Name of state. For credit, state values are applicable only for USA.
          example: New Jersey
        zipCode:
          type: string
          description: ZIP code for Address.
          example: "12345"
        addressType:
          type: string
          description: "The type of address. Following are the valid values - \nType 'BILLING' is applicable for any of the cardholders (primary, secondary and authorized).\nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          example: PLASTIC
          enum:
          - PLASTIC
          - BILLING
          - STATEMENT
          - LETTERS
        categoryCode:
          type: string
          description: Defines if the address is temporary, permanent or repeating.
          example: TEMPORARY
          enum:
          - TEMPORARY
          - PERMANENT
          - REPEATING
        beginDate:
          type: string
          description: The date from which the address is valid. Mainly used when categoryCode - Permanent, Temporary or Repeating.
          format: date
        endDate:
          type: string
          description: The date until which the address is valid. Mainly used when categoryCode - Temporary or Repeating. For Permanent address, there is a default value of endDate provided.
          format: date
    CreditCardholderAddressTemplateResponseV2:
      title: Address
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value is false.
          example: false
        addressLine1:
          type: string
          description: Line 1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line 2 of address.
          example: Apt 100
        addressLine3:
          type: string
          description: Line 3 of address.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Line 4 of address.
          example: AVENUE
        city:
          type: string
          description: Name of city.
          example: Newark
        countryCode:
          type: string
          description: Country code for Address.
          example: USA
        stateCode:
          type: string
          description: Name of state. For credit, state values are applicable only for USA.
          example: NJ
        zipCode:
          type: string
          description: ZIP code for Address.
          example: "12345"
        addressType:
          type: string
          description: "The type of address. Following are the valid values - \nType 'BILLING' is applicable for any of the cardholders (primary, secondary and authorized).\nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.\n"
          example: PLASTIC
          enum:
          - PLASTIC
          - BILLING
          - STATEMENT
          - LETTERS
        categoryCode:
          type: string
          description: Defines if the address is temporary, permanent or repeating.
          example: TEMPORARY
          enum:
          - TEMPORARY
          - PERMANENT
          - REPEATING
        beginDate:
          type: string
          description: The date from which the address is valid. Mainly used when categoryCode - Permanent, Temporary or Repeating.
          format: date
        endDate:
          type: string
          description: The date until which the address is valid. Mainly used when categoryCode - Temporary or Repeating. For Permanent address, there is a default value of endDate provided.
          format: date
    DebitCardholderAddressTemplateResponse:
      title: Address
      type: object
      properties:
        addressLine1:
          type: string
          description: First address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: Apt 100
        city:
          type: string
          description: City of the cardholder's primary address. Maximum 21 characters.
          example: Newark
        country:
          type: string
          description: Country associated with the cardholder's primary address.
          example: USA
        state:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: NJ
        zipCode:
          type: string
          description: |
            Postal code of the cardholder's primary address.
            This field is mandatory if the country is USA. For U.S. country code, ZIP code must be of length 5 or 9 numeric digits with no dashes.
            When entering a code for a country other than U.S., this field may be 1 to 15 alphanumeric character.
          example: "12345"
        addressType:
          type: string
          description: Indicates if the address is primary or alternate.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
        cardMailerIndicator:
          type: boolean
          description: Indicates the card mailer for all card orders are sent to the primary address.
          example: true
        pinMailerIndicator:
          type: boolean
          description: Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
          example: true
    DebitCardholderPrimaryAddressTemplateResponseV2:
      title: PrimaryAddress
      type: object
      properties:
        addressLine1:
          type: string
          description: |
            First address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Street
        addressLine2:
          type: string
          description: |
            Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: 123 Any Lane
        city:
          type: string
          description: |
            City of the cardholder's primary address. Maximum 21 characters.
          example: Newark
        countryCode:
          type: string
          description: |
            Country associated with the cardholder's primary address.
          example: USA
        stateCode:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: NJ
        zipCode:
          type: string
          description: |
            Postal code of the cardholder's primary address.
            This field is mandatory if the country is USA. For U.S. country code, ZIP code must be of length 5 or 9 numeric digits with no dashes.
            When entering a code for a country other than U.S., this field may be 1 to 15 alphanumeric character.
          example: "12345"
        cardMailerIndicator:
          type: boolean
          description: Indicates the card mailer for all card orders are sent to the primary address.
          example: true
        pinMailerIndicator:
          type: boolean
          description: Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
          example: true
    DebitCardholderAlternateAddressTemplateResponseV2:
      title: AlternateAddress
      type: object
      properties:
        addressLine1:
          type: string
          description: |
            First address line of cardholder's primary address. Maximum 33 characters.
          example: 456 Any Street
        addressLine2:
          type: string
          description: |
            Continuation of address line of cardholder's primary address. Maximum 33 characters.
          example: 456 Any Lane
        city:
          type: string
          description: |
            City of the cardholder's primary address. Maximum 21 characters.
          example: Naples
        countryCode:
          type: string
          description: |
            Country associated with the cardholder's primary address.
          example: USA
        stateCode:
          type: string
          description: Required if U.S. address. State code of the cardholder's primary address.
          example: FL
        zipCode:
          type: string
          description: |
            Postal code of the cardholder's primary address.
            This field is mandatory if the country is USA. For U.S. country code, ZIP code must be of length 5 or 9 numeric digits with no dashes.
            When entering a code for a country other than U.S., this field may be 1 to 15 alphanumeric character.
          example: "33962"
        cardMailerIndicator:
          type: boolean
          description: Indicates the card mailer for all card orders are sent to the primary address.
          example: false
        pinMailerIndicator:
          type: boolean
          description: Personal identification number mailer. Indicates the PIN mailer for all PIN orders are sent to the primary address.
          example: false
    CreditPINInfoTemplateResponse:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Defaults to 0000. Should not be left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum pin tries allowed for the cardholder.
          example: "4"
    DebitPINInfoTemplateResponse:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Defaults to 0000 when left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum amount of failed pin tries allowed for the cardholder.
          example: "4"
        pinOffsetChangeDate:
          type: string
          description: Personal identification number offset changed. Displays the date of the most recent PIN Offset change.
          format: date
    DebitPINInfoTemplateResponseV2:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Defaults to 0000 when left blank.
          example: "1234"
    CreditOnlyTemplateResponse:
      type: object
      properties:
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued
          example: "00"
        cardStatus:
          type: string
          description: Status of card. Refer to statusReasonCode field description for updating the status.
          example: NORMAL
          enum:
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated to the card status.
          example: NORMAL
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
        association:
          type: string
          description: Type of association.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "1"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card.
          example: "00"
        producePlasticIdentifier:
          type: string
          description: Indicates if a new plastic card was generated when a card is marked Lost/Stolen.
          example: "Y"
        creditPINInfo:
          $ref: '#/components/schemas/CreditPINInfoTemplateResponse'
        creditCardholderAddress:
          $ref: '#/components/schemas/CreditCardholderAddressTemplateResponse'
        creditCardholderName:
          $ref: '#/components/schemas/CreditCardholderNameTemplateResponse'
        creditContactInfo:
          $ref: '#/components/schemas/CreditContactInfoTemplateResponse'
        creditAssociatedAccounts:
          $ref: '#/components/schemas/CreditAssociatedAccountTemplateResponse'
    CreditOnlyTemplateResponseV2:
      type: object
      properties:
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued
          example: "00"
        cardStatus:
          type: string
          description: Status of card. Refer to statusReasonCode field description for updating the status.
          example: NORMAL
          enum:
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated to the card status.
          example: NORMAL
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
        association:
          type: string
          description: Type of association.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: "Role type code of a customer.  \n- 01 - Primary  \n- 02 - Secondary  \n- 03 - Auth user\n"
          example: "02"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card.
          example: "00"
        producePlasticIdentifier:
          type: string
          description: Indicates if a new plastic card was generated when a card is marked Lost/Stolen.
          example: "Y"
        creditCardholderAddress:
          $ref: '#/components/schemas/CreditCardholderAddressTemplateResponseV2'
        creditCardholderName:
          $ref: '#/components/schemas/CreditCardholderNameTemplateResponseV2'
        creditContactInfo:
          $ref: '#/components/schemas/CreditContactInfoTemplateResponseV2'
        creditAssociatedAccounts:
          $ref: '#/components/schemas/CreditAssociatedAccountTemplateResponseV2'
    DebitOnlyTemplateResponse:
      type: object
      properties:
        cardStatus:
          type: string
          description: Current status of the selected card.
          example: ACTIVE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
        statusReasonCode:
          type: string
          description: |
            Reason for the current status of the selected card.
            One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.
            All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.
            Keep this field as NONE when updating to any other statuses.
          example: NONE
          enum:
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
          - REVOKED
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          example: "0"
        oldCardExpirationDate:
          maxLength: 5
          type: string
          description: |
            Previous expiration date of the selected card. This date could possibly be greater than the date in the Expiration Date field.
          format: MM/YY
          example: 10/23
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
        memberSinceDate:
          type: string
          description: Month and year when the card record was added. This date may or may not correspond to the open date of the card record.
          format: MM/YY
          example: 03/22
        branch:
          maxLength: 4
          type: string
          description: Unique number FI/institution assigns to identify a specific branch. The default value is 0000.
          example: "0000"
        reissuePerCardClass:
          type: string
          description: Indicates if the expiration date of card will be rolled over to the next expiration date after month end and a new card will be reissued. The value depends on the card setup.
          example: "true"
          enum:
          - "true"
          - "false"
        updaterServiceOptOut:
          type: string
          description: "Applicable when cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. \nIf the cardbase does not participate in AUS, the fields can be blank. Opting out of AUS ensures Fiserv does not send future card number updates to Mastercard or Visa; it does not delete any information previously sent to merchants.\nThe fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system.\n"
          example: "true"
          enum:
          - "true"
          - "false"
        debitPINInfo:
          $ref: '#/components/schemas/DebitPINInfoTemplateResponse'
        debitPriorCardInfo:
          $ref: '#/components/schemas/DebitPriorCardInfoTemplateResponse'
        debitCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardholderAddressTemplateResponse'
        debitCardholderName:
          $ref: '#/components/schemas/DebitCardholderNameTemplateResponse'
        debitContactInfo:
          $ref: '#/components/schemas/DebitContactInfoTemplateResponse'
        debitAssociatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/DebitAssociatedAccountTemplateResponse'
    DebitOnlyTemplateRequestV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            Unique number assigned to each cardholder record. Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used. Maximum length 19 digits.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            Non-transactional token associated with a card. Non-transactional token associated with a card.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used. Length can be between 16 and 19.
          format: alphanumeric
          example: piUVBJKZGfks4000
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
          example: AAA00
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          example: "0"
    CreditOnlyTemplateRequestV2:
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
    DebitOnlyTemplateResponseV2:
      type: object
      properties:
        cardStatus:
          type: string
          description: Current status of the selected card.
          example: ACTIVE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
        statusReasonCode:
          type: string
          description: |
            Reason for the current status of the selected card.
            One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE.
            All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.
            Keep this field as NONE when updating to any other statuses.
          example: NONE
          enum:
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
          - REVOKED
        memberNumber:
          type: string
          description: |
            Unique number associated with each member of the card. Based on the card prefix setup. If the member number is not passed, defaults to 0 (zero).  Applies to debit cards only.
          example: ""
        expirationDate:
          type: string
          description: Month and year the card record is set to expire.
          format: MM/YY
          example: 10/23
        cardClass:
          type: string
          description: |
            Displays the description and 5-character alphanumeric identifier for the card class selected for the new card. Indicates a client-defined group of cardholders with common characteristics, such as card type (ADMIN), card stock, image cards or withdrawal limits.
          example: AAA00
        memberSinceDate:
          type: string
          description: Month and year when the card record was added. This date may or may not correspond to the open date of the card record.
          format: MM/YY
          example: 09/23
        branch:
          maxLength: 4
          type: string
          description: Unique number FI/institution assigns to identify a specific branch. The default value is 0000.
          example: "0000"
        reissuePerCardClass:
          type: boolean
          description: Indicates if the expiration date of card will be rolled over to the next expiration date after month end and a new card will be reissued. The value depends on the card setup.
          example: true
        updaterServiceOptOut:
          type: boolean
          description: "Applicable when cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. \nIf the cardbase does not participate in AUS, the fields can be blank. Opting out of AUS ensures Fiserv does not send future card number updates to Mastercard or Visa; it does not delete any information previously sent to merchants.\nThe fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system.\n"
          example: false
        debitPINInfo:
          $ref: '#/components/schemas/DebitPINInfoTemplateResponseV2'
        debitPriorCardInfo:
          $ref: '#/components/schemas/DebitPriorCardInfoTemplateResponseV2'
        debitCardholderAddressPrimary:
          $ref: '#/components/schemas/DebitCardholderPrimaryAddressTemplateResponseV2'
        debitCardholderAddressAlternate:
          $ref: '#/components/schemas/DebitCardholderAlternateAddressTemplateResponseV2'
        debitCardholderName:
          $ref: '#/components/schemas/DebitCardholderNameTemplateResponseV2'
        debitContactInfo:
          $ref: '#/components/schemas/DebitContactInfoTemplateResponseV2'
        debitAssociatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/DebitAssociatedAccountTemplateResponseV2'
    CreditAssociatedAccountTemplateResponse:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Account type. \nValues are - \n- C - Control  \n- I - Individual Pay  \n- S - Sub-Account Consumer.\n"
          example: Individual
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
    CreditAssociatedAccountTemplateResponseV2:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Account type. \nValues are - \n- C - Control  \n- I - Individual Pay  \n- S - Sub-Account Consumer.\n"
          example: Individual
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
    CreditContactInfoTemplateResponse:
      type: object
      properties:
        allowVoiceCommunication:
          type: boolean
          description: Consent to Communicate—Consent to contact customer through phone.
          example: false
        allowTextCommunication:
          type: boolean
          description: Consent to Communicate—Consent to contact customer through text.
          example: false
        homePhone:
          type: string
          description: Home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the primary account owner.
          example: "1005550001"
        emailAddress:
          type: string
          description: Email address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: xxxxx5678
        taxIdType:
          type: string
          description: Indicates which value to updated - SSN or EIN number. Valid values are - SSN or EIN.
          example: EIN
        motherMaidenName:
          type: string
          description: Mother's Maiden Name
          example: Smith
    CreditContactInfoTemplateResponseV2:
      type: object
      properties:
        homePhone:
          type: string
          description: Home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the primary account owner.
          example: "1005550001"
        emailAddress:
          type: string
          description: Email address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: XXXXX5678
        taxIdType:
          type: string
          description: Indicates which value to updated - SSN or EIN number. Valid values are - SSN or EIN.
          example: EIN
        motherMaidenName:
          type: string
          description: Mother's Maiden Name
          example: Smith
    DebitAssociatedAccountTemplateResponse:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: "Account type.\nValues are -  \n- SAVINGS  \n- CHECKING  \n- CREDIT  \n- IRA  \n- NOW  \n- MONEY_MARKET  \n- CREDIT_LINE  \n- INSTALLMENT_LOAN  \n- MORTGAGE_LOAN\n"
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account.
          example: Main account
        primaryAccount:
          type: string
          description: Will define if Account is Primary or not. Possible values Y or N.
          example: "Y"
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
    DebitAssociatedAccountTemplateResponseV2:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: "987654321"
        accountType:
          type: string
          description: "Account type.\nValues are -  \n- SAVINGS  \n- CHECKING  \n- CREDIT  \n- IRA  \n- NOW  \n- MONEY_MARKET  \n- CREDIT_LINE  \n- INSTALLMENT_LOAN  \n- MORTGAGE_LOAN\n"
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account.
          example: Main account
        primaryAccount:
          type: string
          description: Will define if Account is Primary or not. Possible values Y or N.
          example: "Y"
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
          - ACTIVE
          - CLOSED
          - INACTIVE
          - RESTRICTED
    DebitContactInfoTemplateResponse:
      type: object
      properties:
        homePhone:
          type: string
          description: This indicates the home phone number of the  cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the cardholder.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the cardholder.
          example: "1005550001"
        alternateContactName:
          type: string
          description: Indicates the alternate contact name of the cardholder.
          example: Doe, John H
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder. If no date is present in request, the date on record will remain unchanged.
          format: date
        taxIdOrSsn:
          type: string
          description: Indicates the social security number or tax id number. Max length for SSN is 9. Max length for Tax ID is 20.
          example: xxxxx5678
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification, such as driver's license number.
        motherMaidenName:
          type: string
          description: Mother's Maiden Name
          example: Smith
        activationType:
          type: string
          description: Used to activate the card.
          example: MOTHERS_MAIDEN_NAME
          enum:
          - SOCIAL_SECURITY_NUMBER
          - MOTHERS_MAIDEN_NAME
          - BIRTH_DATE
          - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: "SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  \nMOTHERS_MAIDEN_NAME should be less than or equal to six characters.  \nBIRTH_DATE format MM/DD/YYYY  \nUSER_SELECTED_SECURITY_CODE One to six characters.\n"
          example: Smith
    DebitContactInfoTemplateResponseV2:
      type: object
      properties:
        homePhone:
          type: string
          description: This indicates the home phone number of the  cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number of the cardholder.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile phone number of the cardholder.
          example: "1005550001"
        alternateContactName:
          type: string
          description: Indicates the alternate contact name of the cardholder.
          example: Doe, John H
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder. If no date is present in request, the date on record will remain unchanged.
          format: date
        taxIdOrSsn:
          type: string
          description: Indicates the social security number or tax id number. Max length for SSN is 9. Max length for Tax ID is 20.
          example: XXXXX5678
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification, such as driver's license number.
          example: Driver's license
        motherMaidenName:
          type: string
          description: Mother's Maiden Name
          example: Smith
        activationType:
          type: string
          description: Used to activate the card.
          example: SOCIAL_SECURITY_NUMBER
          enum:
          - SOCIAL_SECURITY_NUMBER
          - MOTHERS_MAIDEN_NAME
          - BIRTH_DATE
          - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: "SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  \nMOTHERS_MAIDEN_NAME should be less than or equal to six characters.  \nBIRTH_DATE format YYYY-MM-DD  \nUSER_SELECTED_SECURITY_CODE One to six characters.\n"
          example: ""
    CreditCardholderNameTemplateResponse:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: "Embossed Line or ID used to add photo image to card. \nValid Values are -  \n- A-Z  \n- 0-9 \n- & (Ampersand)  \n- , (Comma)\n- / (Forward Slash)  \n- (Apostrophe)  \n- -(Hyphen, minus symbol)  \n- (Period)\n"
          example: Home Team
        specialHandling:
          type: string
          description: Identifies how the replacement card will be delivered to the cardholder.
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
    CreditCardholderNameTemplateResponseV2:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: "Embossed Line or ID used to add photo image to card. \nValid Values are -  \n- A-Z  \n- 0-9 \n- & (Ampersand)  \n- , (Comma)\n- / (Forward Slash)  \n- (Apostrophe)  \n- -(Hyphen, minus symbol)  \n- (Period)\n"
          example: Home Team
        specialHandling:
          type: string
          description: Identifies how the replacement card will be delivered to the cardholder.
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
    DebitCardholderNameTemplateResponse:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
        rushType:
          type: string
          description: Type of rush to send plastic to the cardholder.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Ordering options.
          example: CARD
          enum:
          - NONE
          - CARD
          - PIN
          - CARD_AND_PIN
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
    DebitCardholderNameTemplateResponseV2:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        additionalEmbossLine:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: |
            If supported by the institution, should contain the alphanumeric identifier sent to the card vendor with the photo to identify the photo associated with name/plastic. Displays on card class setup. Max length is 10.
          example: EFGH
        plasticId:
          type: string
          description: |
            If supported by the institution, field supports card collection stock ID number assigned by card vendor to the type of plastic used in card production. This field overrides the default stock ID defined for the card class. The field has format of 3 digits proceeded by PM. This field is applicable for non-EMV Debit program only. Max length is 5.
          example: PM001
        rushType:
          type: string
          description: Type of rush to send plastic to the cardholder.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Ordering options.
          example: CARD
          enum:
          - NONE
          - CARD
          - PIN
          - CARD_AND_PIN
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name. The maximum length is 6.
          example: MD
    CardOrderSearchRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number. Length is between 16 to 19.
          example: "4000100020003000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0. Applies to debit cards only.
          example: "0"
    CardOrdersSearchResponse:
      title: CardOrdersSearchResponse
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CardOrderInfo'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    CardOrderInfo:
      title: CardOrderInfo
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits. The cardNumber will be masked, except the first 6 and last 4 digits.
          example: 400020XXXXXX4000
        transactionCode:
          type: string
          description: Applies to credit only. Possible values are 200 and 194.
          example: "200"
        cardPlasticsCount:
          type: string
          description: Indicates if a plastic card was issued. Applies to credit cards only.
          example: "00"
        specialHandling:
          type: string
          description: Sets special handling options for the plastic card. Applies to credit only.
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        orderStatus:
          type: string
          description: The status of the order.
          enum:
          - ACTIVE
          - PROCESSED
          - CANCELLED
        orderType:
          type: string
          description: Ordering options.
          example: CARD
          enum:
          - NONE
          - CARD
          - CARD_AND_PIN
          - PIN
        rushType:
          type: string
          description: Indicates the rush type to send plastic to the cardholder. Applies to debit only.
          example: REGULAR
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        processedDate:
          type: string
          description: Date the order was processed.
          format: date
        orderId:
          type: string
          description: The unique record key for the card order to be updated/cancelled. Applies to debit only.
          example: "436"
        orderDate:
          type: string
          description: Date the order was placed.
          format: date
        orderReason:
          type: string
          description: Reason for the order.
          example: NEW
          enum:
          - NEW
          - REPLACEMENT
          - ADDITIONAL
        orderedBy:
          type: string
          description: User ID of the person who placed the order.
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder.
        logo:
          type: string
          description: Unique 4-character alphanumeric identifier assigned by Fiserv for the selected institution.
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
        lastMaintainanceDate:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: YYYY-MM-DD
        lastMaintainanceTime:
          type: string
          description: Time of last maintenance performed on this cardholder account balance record.
          format: HH:mm:ss:ssZ
        cardholderOrderInfo:
          $ref: '#/components/schemas/CardholderName'
        orderAddress:
          $ref: '#/components/schemas/CardOrderAddress'
        cardMiscellaneous:
          $ref: '#/components/schemas/CardMiscellaneous'
    CardholderName:
      title: CardholderName
      type: object
      properties:
        nameSequenceNumber:
          type: string
        cardholderName:
          type: string
          description: Name of the Cardholder. Applies to credit and debit cards.
          example: Doe, John H
        personalizedEmbossingText:
          type: string
          description: Personalized text to emboss on card.
        photoId:
          type: string
          description: ID of photo to place on card. This field may or may not display depending on setup. Applies to Debit only.
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock. The field has format of 3 digits preceded by 'PM'.
        nameSuffix:
          type: string
          description: Cardholder suffix associated with the name.
    CardMiscellaneous:
      title: CardMiscellaneous
      type: object
      properties:
        cardClass:
          type: string
          description: Unique 5-character alphanumeric identifier that represents a client-defined group of cardholders with common characteristics, such as card stock, withdrawal limits, or processing days.
        emv:
          type: string
        pinVendor:
          type: string
        vendor:
          type: string
    CardOrderAddress:
      title: Address
      type: object
      properties:
        addressLine1:
          type: string
          description: Line 1 for address.
          example: 2921 CARLISLE BLVD NL
        addressLine2:
          type: string
          description: Line 2 for address.
          example: 2921 CARLISLE BLVD NL
        addressLine3:
          type: string
          description: Line 3 for address. Optional. Applies to credit only.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Line 4 for address.
          example: AVENUE
        city:
          type: string
          description: City name for address.
          example: ALBUQUERQUE
        country:
          type: string
          description: Country code for Address.
          example: BG
        state:
          type: string
          description: State code for address. Required. For credit, state values are applicable only for USA.
          example: NM
        zipCode:
          type: string
          description: ZIP code for address. ZIP code or ZIP+4 format. Required.
          example: "87110"
        addressType:
          type: string
          description: Indicates if the address is primary or alternate.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
      description: Order address. Applies to debit only.
    CardOrderSearchRequestV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: "Card number of primary cardholder.  \nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used.\n"
          format: numeric
          example: "4000200010003000"
        nonTransToken:
          type: string
          description: "Non-transactional token associated with a card.  \nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used.\n"
          format: numeric
          example: WUPIL5DQTZGM3000
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
    CardOrderSearchRequestV3:
      type: object
      properties:
        cardNumber:
          type: string
          description: "Card number of primary cardholder.  \nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used.\n"
          format: numeric
          example: "4000200010003000"
        nonTransToken:
          type: string
          description: "Non-transactional token associated with a card.  \nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used.\n"
          format: numeric
          example: WUPIL5DQTZGM3000
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
    CardOrdersSearchResponseV2:
      title: CardOrdersSearchResponse
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CardOrderInfoV2'
    CardOrdersSearchResponseV3:
      title: CardOrdersSearchResponse
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CardOrderInfoV3'
    CardOrderInfoV2:
      title: CardOrderInfo
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: 400020xxxxxx3000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non-transactional token associated with a card.
          format: numeric
          example: WUPIL5DQTZGM3000
        transactionCode:
          type: string
          description: Transaction code provided for each transaction.
          example: "200"
        cardPlasticsCount:
          type: string
          description: Indicates if a plastic card was issued. Applies to credit only.
          example: "00"
        specialHandling:
          type: string
          description: Sets special handling options for the plastic card. Applies to credit only.
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        orderStatus:
          type: string
          description: The status of the order.
          enum:
          - ACTIVE
          - PROCESSED
          - CANCELLED
        rushIND:
          type: string
          enum:
          - "Y"
          - "N"
        orderType:
          type: string
          description: Ordering options.
          example: CARD
          enum:
          - NONE
          - CARD
          - CARD_AND_PIN
          - PIN
        rushType:
          type: string
          description: Rush type to send plastic to the cardholder. Applies to debit only.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        processedDate:
          type: string
          description: Date the order was processed.
          format: date
        orderId:
          type: string
          description: The unique record key for the card order. Applies to debit only.
          example: "436"
        orderDate:
          type: string
          description: Date the order was placed.
          format: date
        orderReason:
          type: string
          description: Reason for the order.
          example: NEW
          enum:
          - NEW
          - REPLACEMENT
          - ADDITIONAL
        orderedBy:
          type: string
          description: User ID of the person who placed the order.
          example: FGSTETS01
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
        logo:
          type: string
          description: Unique 4-character alphanumeric identifier assigned by Card Services for the selected institution.
          example: AH03
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDate:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date
        lastMaintainanceTime:
          type: string
          description: Time of last maintenance performed on this cardholder account balance record
          format: HH:mm
          example: 07:46
        cardholderOrderInfo:
          $ref: '#/components/schemas/CardholderNameV2'
        orderAddress:
          $ref: '#/components/schemas/CardOrderAddressV2'
        cardMiscellaneous:
          $ref: '#/components/schemas/CardMiscellaneousV2'
    CardOrderInfoV3:
      title: CardOrderInfo
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: 400020xxxxxx3000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non-transactional token associated with a card.
          format: numeric
          example: WUPIL5DQTZGM3000
        transactionCode:
          type: string
          description: Transaction code provided for each transaction.
          example: "200"
        cardPlasticsCount:
          type: string
          description: Indicates if a plastic card was issued. Applies to credit only.
          example: "00"
        specialHandling:
          type: string
          description: Sets special handling options for the plastic card. Applies to credit only.
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        orderStatus:
          type: string
          description: The status of the order.
          enum:
          - ACTIVE
          - PROCESSED
          - CANCELLED
        rushIND:
          type: string
          enum:
          - "Y"
          - "N"
        orderType:
          type: string
          description: Ordering options.
          example: CARD
          enum:
          - NONE
          - CARD
          - CARD_AND_PIN
          - PIN
        rushType:
          type: string
          description: Rush type to send plastic to the cardholder. Applies to debit only.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        processedDate:
          type: string
          description: Date the order was processed.
          format: date
        orderId:
          type: string
          description: The unique record key for the card order. Applies to debit only.
          example: "436"
        orderDate:
          type: string
          description: Date the order was placed.
          format: date
        orderReason:
          type: string
          description: Reason for the order.
          example: NEW
          enum:
          - NEW
          - REPLACEMENT
          - ADDITIONAL
        orderedBy:
          type: string
          description: User ID of the person who placed the order.
          example: FGSTETS01
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
        logo:
          type: string
          description: Unique 4-character alphanumeric identifier assigned by Card Services for the selected institution.
          example: AH03
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDate:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date
        lastMaintainanceTime:
          type: string
          description: Time of last maintenance performed on this cardholder account balance record
          format: HH:mm
          example: 07:46
        cardholderOrderInfo:
          $ref: '#/components/schemas/CardholderNameV3'
        orderAddress:
          $ref: '#/components/schemas/CardOrderAddressV3'
        cardMiscellaneous:
          $ref: '#/components/schemas/CardMiscellaneousV3'
        cardMailStatusDetails:
          $ref: '#/components/schemas/CardMailShipmentDetailsV1'
    CardholderNameV2:
      title: CardholderName
      type: object
      properties:
        nameSequenceNumber:
          type: string
          description: This is the sequence number associated with each cardholder name
          example: "1"
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: ID of photo to place on the card. This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock.The field has format of 3 digits preceded by 'PM'.
          example: PM001
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
          example: JR
    CardholderNameV3:
      title: CardholderName
      type: object
      properties:
        nameSequenceNumber:
          type: string
          description: This is the sequence number associated with each cardholder name
          example: "1"
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        additionalEmbossLine:
          maxLength: 26
          type: string
          description: Conditional and optional field that is only returned if the Card Class is set up for it. An additional emboss line that is printed on the plastic below the name.  Typically used for business cards. Applies to Debit only.
          example: Home Town Bakery
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text, such as a corporation name, that appears on the card below the name. Based on your institution’s setup, this field may or may not display.
          example: Home Team
        photoId:
          type: string
          description: ID of photo to place on the card. This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock.The field has format of 3 digits preceded by 'PM'.
          example: PM001
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
          example: JR
    CardMailShipmentDetailsV1:
      title: ShipmentDetails
      type: object
      properties:
        embossingFacilityShipDate:
          type: string
          description: Date the plastic was shipped.
          format: date
        trackingNumber:
          type: string
          description: Tracking Number used for UPService.Field will be NULL for USPostal.
          example: "94001000200030004000500"
        carrier:
          type: string
          description: Mail carrier used for the order.
          example: USPS
        shipmentStatus:
          type: string
          description: Status of the shipment.
          example: CARD SHIPPED
        shipmentMethod:
          type: string
          description: Method of shipment.
          example: NEXT DAY AIR
        expectedDeliveryDate:
          type: string
          description: Date the plastic is expected to be delivered.
          format: date
        productType:
          type: string
          description: Type of card being ordered.  ATM, Visa or Mastercard.
          example: Visa Debit
          enum:
          - ATM
          - VISA DEBIT
          - MASTERCARD DEBIT
    CardMiscellaneousV2:
      title: CardMiscellaneous
      type: object
      properties:
        cardClass:
          type: string
          description: Unique 5-character alphanumeric identifier that represents a client-defined group of cardholders with common characteristics, such as card stock, withdrawal limits, or processing days.
          example: AAA00
        emv:
          type: string
        pinVendor:
          type: string
        vendor:
          type: string
    CardMiscellaneousV3:
      title: CardMiscellaneous
      type: object
      properties:
        cardClass:
          type: string
          description: Unique 5-character alphanumeric identifier that represents a client-defined group of cardholders with common characteristics, such as card stock, withdrawal limits, or processing days.
          example: AAA00
        emv:
          type: string
        pinVendor:
          type: string
        vendor:
          type: string
    CardOrderAddressV2:
      title: Address
      type: object
      properties:
        addressLine1:
          type: string
          description: First line of the cardholder's address
          example: 2921 CARLISLE BLVD NL
        addressLine2:
          type: string
          description: Second line of the cardholder's address.
          example: 2921 CARLISLE BLVD NL
        addressLine3:
          type: string
          description: Third line of the cardholder's address.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Fourth line of the cardholder's address.
          example: AVENUE
        city:
          type: string
          description: City of the cardholder's address.
          example: NEW YORK
        country:
          type: string
          description: Country associated with the cardholder's address.
          example: USA
        state:
          type: string
          description: State code of the cardholder's address.
          example: NY
        zipCode:
          type: string
          description: ZIP code of the cardholder's primary address.
          example: "87110"
        addressType:
          type: string
          description: Indicate if the address is primary or alternate.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
      description: Order address. For debit only.
    CardOrderAddressV3:
      title: Address
      type: object
      properties:
        addressLine1:
          type: string
          description: First line of the cardholder's address
          example: 2921 CARLISLE BLVD NL
        addressLine2:
          type: string
          description: Second line of the cardholder's address.
          example: 2921 CARLISLE BLVD NL
        addressLine3:
          type: string
          description: Third line of the cardholder's address.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Fourth line of the cardholder's address.
          example: AVENUE
        city:
          type: string
          description: City of the cardholder's address.
          example: NEW YORK
        country:
          type: string
          description: Country associated with the cardholder's address.
          example: USA
        state:
          type: string
          description: State code of the cardholder's address.
          example: NY
        zipCode:
          type: string
          description: ZIP code of the cardholder's primary address.
          example: "87110"
        addressType:
          type: string
          description: Indicate if the address is primary or alternate.
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
      description: Order address. For debit only.
    OrderResponse:
      type: object
      properties:
        warningInfo:
          $ref: '#/components/schemas/Warning'
    OrderRequest:
      title: OrderRequest
      required:
      - action
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of the cardholder.
          example: "4000100020003000"
        action:
          type: string
          description: Action to be performed. The two possible actions are Update order or Cancel order. Update is applicable only for Debit. Cancel is applicable for both debit and Credit. No default.
          example: UPDATE
          enum:
          - UPDATE
          - CANCEL
        debitOnly:
          $ref: '#/components/schemas/OrderDebitRequest'
    OrderDebitRequest:
      title: OrderDebitRequest
      required:
      - orderId
      type: object
      properties:
        memberNumber:
          type: string
          description: Member number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
        orderId:
          type: string
          description: The unique record key for the card order.
          example: "436"
        rushType:
          type: string
          description: This field indicates the type to send plastic to the cardholder. Required when the action is "UPDATE". For action "CANCEL" this field is not applicable.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
      description: Debit only fields required to update or cancel an order. This object is mandatory if the action is Update or Cancel for a debit card.
    OrderResponseV2:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/orderCardResponseV2'
    orderCardResponseV2:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: 400020xxxxxx4000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non-transactional token associated with a card.
          format: numeric
          example: WUPIL5DQTZGM3000
        orderId:
          type: string
          description: The unique record key for the card order. This field is required for debit only
          example: "436"
        action:
          type: string
          description: Action to be performed. The two possible actions are Update order or Cancel order. Update is applicable only for Debit. Cancel is applicable for both debit and Credit. No default.
          example: UPDATE
    OrderRequestV2:
      title: OrderRequest
      required:
      - action
      - orderId
      type: object
      properties:
        cardNumber:
          type: string
          description: "Card number of primary cardholder.  \nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used.\n"
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: "Non-transactional token associated with a card.  \nEither cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber is used.\n"
          format: numeric
          example: WUPIL5DQTZGM3000
        orderId:
          type: string
          description: The unique record key for the card order. Applies to debit only.
          example: "436"
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
        action:
          type: string
          description: Action to be performed. The two possible actions are Update order or Cancel order. Update is applicable only for Debit. Cancel is applicable for both debit and Credit. No default.
          example: UPDATE
          enum:
          - UPDATE
          - CANCEL
        rushType:
          type: string
          description: Indicates the rush type to send plastic to the cardholder. Applies to debit only.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        orderType:
          type: string
          description: Ordering options.
          example: CARD
          default: CARD_AND_PIN
          enum:
          - NONE
          - CARD
          - PIN
          - CARD_AND_PIN
    Warning:
      type: object
      properties:
        message:
          type: string
          description: An explanation specific to this occurrence of the problem.
        spanId:
          type: string
          description: Id generated on each service.
        traceId:
          type: string
          description: Id generated from a request on the first service and passed to other downstream services.
        warningDetails:
          type: array
          description: List of multiple errors that may cause/trigger the general error.
          items:
            $ref: '#/components/schemas/WarningDetail'
    WarningDetail:
      type: object
      properties:
        code:
          type: string
          description: Unique code for error [artifact Id] - [code of the error(logic, action, etc)].
        detail:
          type: string
          description: Details of the error.
          example: Please refine your search criteria, Search results are >=250
        spanId:
          type: string
          description: Id generated per request on each service.
        timestamp:
          type: string
          description: Date time of the error from a services.
    WarningV2:
      type: object
      properties:
        message:
          type: string
          description: An explanation specific to this occurrence of the problem.
        spanId:
          type: string
          description: Id generated on each service.
        traceId:
          type: string
          description: Id generated from a request on the first service and passed to other downstream services.
        warningDetails:
          type: array
          description: List of multiple errors that may cause/trigger the general error.
          items:
            $ref: '#/components/schemas/WarningDetailV2'
    WarningReplacement:
      type: object
      properties:
        message:
          type: string
          description: An explanation specific to this occurrence of the problem.
          example: 9000:PLASTIC ID MISSING OR INVALID!
        warningDetails:
          type: array
          description: List of multiple errors that may cause/trigger the general error.
          items:
            $ref: '#/components/schemas/WarningReplacementDetail'
    WarningReplacementDetail:
      type: object
      properties:
        code:
          type: string
          description: Unique code for error [artifact Id] - [code of the error(logic, action, etc)].
          example: "705"
        detail:
          type: string
          description: Details of the error.
          example: 9000:PLASTIC ID MISSING OR INVALID!
        timestamp:
          type: string
          description: Date time of the error from a services.
          example: 2023-01-11T02:36:54.620+0000
    WarningDetailV2:
      type: object
      properties:
        code:
          type: string
          description: Unique code for error [artifact Id] - [code of the error(logic, action, etc)].
        detail:
          type: string
          description: Details of the error.
          example: Please refine your search criteria, Search results are >=250
        spanId:
          type: string
          description: Id generated per request on each service.
        timestamp:
          type: string
          description: Date time of the error from a services.
    "400Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: Input Validation Exception
        title:
          type: string
          description: Short summary of the problem.
          example: Bad Request
        detail:
          type: string
          description: Specific explanation to the occurrence of the problem.
          example: CONTENT-TYPE header required. Supported content-type is application/json
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 400
    "401Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#unauthorized
        title:
          type: string
          description: Short summary of the problem.
          example: Unauthorized
        detail:
          type: string
          description: Specific explanation to the occurrence of the problem.
          example: Invalid Access Token
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 401
    "403Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#forbidden
        title:
          type: string
          description: Short summary of the problem.
          example: Forbidden
        detail:
          type: string
          description: Specific explanation to the occurrence of the problem.
          example: Authorization failure
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 403
    "404Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: Resource does not exists
        title:
          type: string
          description: Short summary of the problem.
          example: Resource Not found
        detail:
          type: string
          description: Specific explanation to the occurrence of the problem.
          example: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 404
    "415Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title:
          type: string
          description: Short summary of the problem.
          example: Unsupported Media Type
        detail:
          type: string
          description: Specific explanation to the occurrence of the problem.
          example: unsupported Media Type
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 415
    "4xxError":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#invalid-request
        title:
          type: string
          description: Short summary of the problem.
          example: Invalid Request
        detail:
          type: string
          description: Specific explanation to the occurrence of the problem.
          example: We had a problem getting your credit and debit card information.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /v1/cards/details
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 400
    "4xxErrorV2":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#invalid-request
        title:
          type: string
          description: Short summary of the problem.
          example: Invalid Request
        detail:
          type: string
          description: Specific explanation to the occurrence of the problem.
          example: We had a problem getting your credit and debit card information.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /v1/cards/details
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 400
  parameters:
    userIdParam:
      name: userId
      in: header
      description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
      required: false
      style: simple
      explode: false
      schema:
        type: string
      example: johndoe
    authorizationParam:
      name: Authorization
      in: header
      description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
    clientIdParam:
      name: x-fapi-financial-id
      in: header
      description: Required. Provide 8 digit client id
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: 12345678
  examples:
    InstantIssuance400:
      value:
        type: https://card.developer.fiserv.com/cards/error#bad-request
        title: Bad Request
        detail: Invalid input cardholderName.
        instance: /v1/cards/instantIssuance
        status: 400
    InstantIssuance401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v1/cards/instantIssuance
        status: 401
    InstantIssuance403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v1/cards/instantIssuance
        status: 403
    InstantIssuance404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v1/cards/instantIssuance
        status: 404
    InstantIssuance405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v1/cards/instantIssuance
        status: 405
    InstantIssuance406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v1/cards/instantIssuance
        status: 406
    InstantIssuance415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v1/cards/instantIssuance
        status: 415
    InstantIssuance422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v1/cards/instantIssuance
        status: 422
    InstantIssuance429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v1/cards/instantIssuance
        status: 429
    ReplacementOrder400:
      value:
        type: https://card.developer.fiserv.com/cards/error#bad-request
        title: Bad Request
        detail: Invalid input cardholderName.
        instance: /v3/cards/replacement
        status: 400
    ReplacementOrder401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v3/cards/replacement
        status: 401
    ReplacementOrder403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v3/cards/replacement
        status: 403
    ReplacementOrder404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v3/cards/replacement
        status: 404
    ReplacementOrder405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v3/cards/replacement
        status: 405
    ReplacementOrder406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v3/cards/replacement
        status: 406
    ReplacementOrder415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v3/cards/replacement
        status: 415
    ReplacementOrder422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v3/cards/replacement
        status: 422
    ReplacementOrder429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v3/cards/replacement
        status: 429
    ReplacementV2Order400:
      value:
        type: https://card.developer.fiserv.com/cards/error#bad-request
        title: Bad Request
        detail: Invalid input cardholderName.
        instance: /v2/cards/replacement
        status: 400
    ReplacementV2Order401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/replacement
        status: 401
    ReplacementV2Order403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/replacement
        status: 403
    ReplacementV2Order404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/replacement
        status: 404
    ReplacementV2Order405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/replacement
        status: 405
    ReplacementV2Order406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/replacement
        status: 406
    ReplacementV2Order415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/replacement
        status: 415
    ReplacementV2Order422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/replacement
        status: 422
    ReplacementV2Order429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cards/replacement
        status: 429
    CardholdersDemographicsSearch400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v3/cardholders/demographics/search
        status: 400
    CardholdersDemographicsSearch401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v3/cardholders/demographics/search
        status: 401
    CardholdersDemographicsSearch403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v3/cardholders/demographics/search
        status: 403
    CardholdersDemographicsSearch404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v3/cardholders/demographics/search
        status: 404
    CardholdersDemographicsSearch405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v3/cardholders/demographics/search
        status: 405
    CardholdersDemographicsSearch406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v3/cardholders/demographics/search
        status: 406
    CardholdersDemographicsSearch415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v3/cardholders/demographics/search
        status: 415
    CardholdersDemographicsSearch422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v3/cardholders/demographics/search
        status: 422
    CardholdersDemographicsSearch429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v3/cardholders/demographics/search
        status: 429
    CardholdersAdditionalInfoSearch400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v1/cardholders/additionalInfo/search
        status: 400
    CardholdersAdditionalInfoSearch401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v1/cardholders/additionalInfo/search
        status: 401
    CardholdersAdditionalInfoSearch403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v1/cardholders/additionalInfo/search
        status: 403
    CardholdersAdditionalInfoSearch404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v1/cardholders/additionalInfo/search
        status: 404
    CardholdersAdditionalInfoSearch405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v1/cardholders/additionalInfo/search
        status: 405
    CardholdersAdditionalInfoSearch406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v1/cardholders/additionalInfo/search
        status: 406
    CardholdersAdditionalInfoSearch415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v1/cardholders/additionalInfo/search
        status: 415
    CardholdersAdditionalInfoSearch422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v1/cardholders/additionalInfo/search
        status: 422
    CardholdersAdditionalInfoSearch429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v1/cardholders/additionalInfo/search
        status: 429
    AtmPreferencesSearch400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v1/cards/atmPreferences/search
        status: 400
    AtmPreferencesSearch401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v1/cards/atmPreferences/search
        status: 401
    AtmPreferencesSearch403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v1/cards/atmPreferences/search
        status: 403
    AtmPreferencesSearch404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v1/cards/atmPreferences/search
        status: 404
    AtmPreferencesSearch405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v1/cards/atmPreferences/search
        status: 405
    AtmPreferencesSearch406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v1/cards/atmPreferences/search
        status: 406
    AtmPreferencesSearch415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v1/cards/atmPreferences/search
        status: 415
    AtmPreferencesSearch422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v1/cards/atmPreferences/search
        status: 422
    AtmPreferencesSearch429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v1/cards/atmPreferences/search
        status: 429
    CardholdersDemographicsV4Search400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v4/cardholders/demographics/search
        status: 400
    CardholdersDemographicsV4Search401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v4/cardholders/demographics/search
        status: 401
    CardholdersDemographicsV4Search403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v4/cardholders/demographics/search
        status: 403
    CardholdersDemographicsV4Search404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v4/cardholders/demographics/search
        status: 404
    CardholdersDemographicsV4Search405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v4/cardholders/demographics/search
        status: 405
    CardholdersDemographicsV4Search406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v4/cardholders/demographics/search
        status: 406
    CardholdersDemographicsV4Search415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v4/cardholders/demographics/search
        status: 415
    CardholdersDemographicsV4Search422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v4/cardholders/demographics/search
        status: 422
    CardholdersDemographicsV4Search429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v4/cardholders/demographics/search
        status: 429
    CardholdersContact400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v3/cardholders/contact
        status: 400
    CardholdersContact401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v3/cardholders/contact
        status: 401
    CardholdersContact403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v3/cardholders/contact
        status: 403
    CardholdersContact404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v3/cardholders/contact
        status: 404
    CardholdersContact405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v3/cardholders/contact
        status: 405
    CardholdersContact406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v3/cardholders/contact
        status: 406
    CardholdersContact415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v3/cardholders/contact
        status: 415
    CardholdersContact422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v3/cardholders/contact
        status: 422
    CardholdersContact429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v3/cardholders/contact
        status: 429
    CardholdersAddress400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cardholders/address
        status: 400
    CardholdersAddress401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cardholders/address
        status: 401
    CardholdersAddress403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cardholders/address
        status: 403
    CardholdersAddress404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cardholders/address
        status: 404
    CardholdersAddress405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cardholders/address
        status: 405
    CardholdersAddress406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cardholders/address
        status: 406
    CardholdersAddress415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cardholders/address
        status: 415
    CardholdersAddress422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cardholders/address
        status: 422
    CardholdersAddress429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cardholders/address
        status: 429
    V3CardholdersAddress400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v3/cardholders/address
        status: 400
    V3CardholdersAddress401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v3/cardholders/address
        status: 401
    V3CardholdersAddress403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v3/cardholders/address
        status: 403
    V3CardholdersAddress404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v3/cardholders/address
        status: 404
    V3CardholdersAddress405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v3/cardholders/address
        status: 405
    V3CardholdersAddress406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v3/cardholders/address
        status: 406
    V3CardholdersAddress415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v3/cardholders/address
        status: 415
    V3CardholdersAddress422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v3/cardholders/address
        status: 422
    V3CardholdersAddress429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v3/cardholders/address
        status: 429
    CardholdersAdditionalInfo400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cardholders/additionalInfo
        status: 400
    CardholdersAdditionalInfo401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cardholders/additionalInfo
        status: 401
    CardholdersAdditionalInfo403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cardholders/additionalInfo
        status: 403
    CardholdersAdditionalInfo404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cardholders/additionalInfo
        status: 404
    CardholdersAdditionalInfo405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cardholders/additionalInfo
        status: 405
    CardholdersAdditionalInfo406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cardholders/additionalInfo
        status: 406
    CardholdersAdditionalInfo415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cardholders/additionalInfo
        status: 415
    CardholdersAdditionalInfo422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cardholders/additionalInfo
        status: 422
    CardholdersAdditionalInfo429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cardholders/additionalInfo
        status: 429
    V3CardholdersAdditionalInfo400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v3/cardholders/additionalInfo
        status: 400
    V3CardholdersAdditionalInfo401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v3/cardholders/additionalInfo
        status: 401
    V3CardholdersAdditionalInfo403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v3/cardholders/additionalInfo
        status: 403
    V3CardholdersAdditionalInfo404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v3/cardholders/additionalInfo
        status: 404
    V3CardholdersAdditionalInfo405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v3/cardholders/additionalInfo
        status: 405
    V3CardholdersAdditionalInfo406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v3/cardholders/additionalInfo
        status: 406
    V3CardholdersAdditionalInfo415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v3/cardholders/additionalInfo
        status: 415
    V3CardholdersAdditionalInfo422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v3/cardholders/additionalInfo
        status: 422
    V3CardholdersAdditionalInfo429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v3/cardholders/additionalInfo
        status: 429
    AtmPreferences400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/atmPreferences
        status: 400
    AtmPreferences401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/atmPreferences
        status: 401
    AtmPreferences403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/atmPreferences
        status: 403
    AtmPreferences404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/atmPreferences
        status: 404
    AtmPreferences405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/atmPreferences
        status: 405
    AtmPreferences406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/atmPreferences
        status: 406
    AtmPreferences415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/atmPreferences
        status: 415
    AtmPreferences422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/atmPreferences
        status: 422
    AtmPreferences429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cards/atmPreferences
        status: 429
    AccountsSearch400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/accounts/search
        status: 400
    AccountsSearch401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/accounts/search
        status: 401
    AccountsSearch403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/accounts/search
        status: 403
    AccountsSearch404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/accounts/search
        status: 404
    AccountsSearch405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/accounts/search
        status: 405
    AccountsSearch406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/accounts/search
        status: 406
    AccountsSearch415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/accounts/search
        status: 415
    AccountsSearch422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/accounts/search
        status: 422
    AccountsSearch429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cards/accounts/search
        status: 429
    AccountsAssociationsAdd400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/accounts/associations
        status: 400
    AccountsAssociationsAdd401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/accounts/associations
        status: 401
    AccountsAssociationsAdd403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/accounts/associations
        status: 403
    AccountsAssociationsAdd404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/accounts/associations
        status: 404
    AccountsAssociationsAdd405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/accounts/associations
        status: 405
    AccountsAssociationsAdd406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/accounts/associations
        status: 406
    AccountsAssociationsAdd415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/accounts/associations
        status: 415
    AccountsAssociationsAdd422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/accounts/associations
        status: 422
    AccountsAssociationsAdd429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cards/accounts/associations
        status: 429
    AccountsAssociationsUpdate400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/accounts/associations
        status: 400
    AccountsAssociationsUpdate401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/accounts/associations
        status: 401
    AccountsAssociationsUpdate403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/accounts/associations
        status: 403
    AccountsAssociationsUpdate404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/accounts/associations
        status: 404
    AccountsAssociationsUpdate405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/accounts/associations
        status: 405
    AccountsAssociationsUpdate406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/accounts/associations
        status: 406
    AccountsAssociationsUpdate415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/accounts/associations
        status: 415
    AccountsAssociationsUpdate422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/accounts/associations
        status: 422
    AccountsAssociationsUpdate429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cards/accounts/associations
        status: 429
    AccountsUnassociate400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/accounts/associations/unassociate
        status: 400
    AccountsUnassociate401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/accounts/associations/unassociate
        status: 401
    AccountsUnassociate403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/accounts/associations/unassociate
        status: 403
    AccountsUnassociate404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/accounts/associations/unassociate
        status: 404
    AccountsUnassociate405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/accounts/associations/unassociate
        status: 405
    AccountsUnassociate406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/accounts/associations/unassociate
        status: 406
    AccountsUnassociate415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/accounts/associations/unassociate
        status: 415
    AccountsUnassociate422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/accounts/associations/unassociate
        status: 422
    AccountsUnassociate429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cards/accounts/associations/unassociate
        status: 429
    AuthDetailsV2Search400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/authDetails
        status: 400
    AuthDetailsV2Search401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/authDetails
        status: 401
    AuthDetailsV2Search403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/authDetails
        status: 403
    AuthDetailsV2Search404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/authDetails
        status: 404
    AuthDetailsV2Search405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/authDetails
        status: 405
    AuthDetailsV2Search406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/authDetails
        status: 406
    AuthDetailsV2Search415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/authDetails
        status: 415
    AuthDetailsV2Search422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/authDetails
        status: 422
    AuthDetailsV2Search429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v2/cards/authDetails
        status: 429
    NonTransToken400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Invalid Card Number
        instance: /v1/cards/ntt
        status: 400
    NonTransToken401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v1/cards/ntt
        status: 401
    NonTransToken403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v1/cards/ntt
        status: 403
    NonTransToken404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v1/cards/ntt
        status: 404
    NonTransToken405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v1/cards/ntt
        status: 405
    NonTransToken406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v1/cards/ntt
        status: 406
    NonTransToken415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v1/cards/ntt
        status: 415
    NonTransToken422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v1/cards/ntt
        status: 422
    NonTransToken429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your credit and debit card information.
        instance: /v1/cards/ntt
        status: 429
    V2LimitOpenToBuy400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/limits/openToBuy
        status: 400
    V2LimitOpenToBuy401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/limits/openToBuy
        status: 401
    V2LimitOpenToBuy403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/limits/openToBuy
        status: 403
    V2LimitOpenToBuy404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/limits/openToBuy
        status: 404
    V2LimitOpenToBuy405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/limits/openToBuy
        status: 405
    V2LimitOpenToBuy406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/limits/openToBuy
        status: 406
    V2LimitOpenToBuy415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/limits/openToBuy
        status: 415
    V2LimitOpenToBuy422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/limits/openToBuy
        status: 422
    V2LimitOpenToBuy429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your debit card information.
        instance: /v2/cards/limits/openToBuy
        status: 429
    V2LimitDefault400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/limits/default
        status: 400
    V2LimitDefault401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/limits/default
        status: 401
    V2LimitDefault403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/limits/default
        status: 403
    V2LimitDefault404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/limits/default
        status: 404
    V2LimitDefault405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/limits/default
        status: 405
    V2LimitDefault406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/limits/default
        status: 406
    V2LimitDefault415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/limits/default
        status: 415
    V2LimitDefault422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/limits/default
        status: 422
    V2LimitDefault429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your debit card information.
        instance: /v2/cards/limits/default
        status: 429
    V2LimitSearch400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/limits/search
        status: 400
    V2LimitSearch401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/limits/search
        status: 401
    V2LimitSearch403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/limits/search
        status: 403
    V2LimitSearch404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/limits/search
        status: 404
    V2LimitSearch405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/limits/search
        status: 405
    V2LimitSearch406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/limits/search
        status: 406
    V2LimitSearch415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/limits/search
        status: 415
    V2LimitSearch422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/limits/search
        status: 422
    V2LimitSearch429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your debit card information.
        instance: /v2/cards/limits/search
        status: 429
    V2LimitVelocity400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/limits/velocity
        status: 400
    V2LimitVelocity401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/limits/velocity
        status: 401
    V2LimitVelocity403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/limits/velocity
        status: 403
    V2LimitVelocity404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/limits/velocity
        status: 404
    V2LimitVelocity405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/limits/velocity
        status: 405
    V2LimitVelocity406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/limits/velocity
        status: 406
    V2LimitVelocity415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/limits/velocity
        status: 415
    V2LimitVelocity422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/limits/velocity
        status: 422
    V2LimitVelocity429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your debit card information.
        instance: /v2/cards/limits/velocity
        status: 429
    V2LimitDaily400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/limits/daily
        status: 400
    V2LimitDaily401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/limits/daily
        status: 401
    V2LimitDaily403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/limits/daily
        status: 403
    V2LimitDaily404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/limits/daily
        status: 404
    V2LimitDaily405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/limits/daily
        status: 405
    V2LimitDaily406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/limits/daily
        status: 406
    V2LimitDaily415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/limits/daily
        status: 415
    V2LimitDaily422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/limits/daily
        status: 422
    V2LimitDaily429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your debit card information.
        instance: /v2/cards/limits/daily
        status: 429
    V2cardTemplate400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/template
        status: 400
    V2cardTemplate401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/template
        status: 401
    V2cardTemplate403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/template
        status: 403
    V2cardTemplate404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/template
        status: 404
    V2cardTemplate405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/template
        status: 405
    V2cardTemplate406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/template
        status: 406
    V2cardTemplate415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/template
        status: 415
    V2cardTemplate422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/template
        status: 422
    V2TransactionSearch400:
      value:
        type: https://card.developer.fiserv.com/cards/error#invalid-request
        title: Invalid Request
        detail: Either cardNumber or nonTransToken should be included
        instance: /v2/cards/transactions/search
        status: 400
    V2TransactionSearch401:
      value:
        type: https://card.developer.fiserv.com/cards/error#unauthorized
        title: Unauthorized
        detail: Invalid Access Token
        instance: /v2/cards/transactions/search
        status: 401
    V2TransactionSearch403:
      value:
        type: https://card.developer.fiserv.com/cards/error#forbidden
        title: Forbidden
        detail: Unauthorized to perform request.
        instance: /v2/cards/transactions/search
        status: 403
    V2TransactionSearch404:
      value:
        type: https://card.developer.fiserv.com/cards/error#resource-not-found
        title: Resource Not Found
        detail: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance: /v2/cards/transactions/search
        status: 404
    V2TransactionSearch405:
      value:
        type: https://card.developer.fiserv.com/cards/error#method-not-allowed
        title: Method Not Allowed
        detail: The HTTP method requested is not acceptable for this endpoint.
        instance: /v2/cards/transactions/search
        status: 405
    V2TransactionSearch406:
      value:
        type: https://card.developer.fiserv.com/cards/error#not-acceptable
        title: Not Acceptable
        detail: The content type being requested is not provided by this service.
        instance: /v2/cards/transactions/search
        status: 406
    V2TransactionSearch415:
      value:
        type: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title: Unsupported Media type
        detail: The payload format is unsupported.
        instance: /v2/cards/transactions/search
        status: 415
    V2TransactionSearch422:
      value:
        type: https://card.developer.fiserv.com/cards/error#unprocessable-content
        title: Unprocessable Content
        detail: The service was not able to process this request.
        instance: /v2/cards/transactions/search
        status: 422
    V2TransactionSearch429:
      value:
        type: https://card.developer.fiserv.com/cards/error#TooManyRequests
        title: Too Many Requests
        detail: We had a problem getting your debit card information.
        instance: /v2/cards/transactions/search
        status: 429
  headers:
    interactionId:
      description: unique transaction ID created for each request for tracking purposes
      style: simple
      explode: false
      schema:
        type: string
        example: 95ad42fb-afd1-2121-b794-3ed29342ks42
  securitySchemes:
    BearerAuth:
      type: http
      description: Enter 'Bearer ' followed by the access token.
      scheme: bearer
