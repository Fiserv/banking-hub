---
openapi: 3.0.1
info:
  title: Card Service
  description: ' The Card service provides administration in respect to creation, modification, inquiry, and deletion of any type of EFT cards used by the holders. It supports operations managing the credit, debit, prepaid and private label cards.'
  version: 11.0.0_PRC
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/CardService/11.0.0_PRC
  description: SwaggerHub API Auto Mocking
paths:
  /cardservice/cards/cards:
    put:
      tags:
      - Update Card
      summary: Update Card
      description: "Update Card API modifies details of a ATM/debit card, such as card status, transaction limits, and card usage fee information.<br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: CardModOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardModOperRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardModOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardModOperResponse'
      x-group-name: Card Service
      x-proxy-name: Update Card
      x-child-product-name: Debit Cards
      x-core: Precision
    post:
      tags:
      - Add Card
      summary: Add Card
      description: "Add Card API creates a request for the new ATM/debit card and allocates accounts that the card can access.<br>If the card number is not sent in the request, then this API sends a request to Precision to have it generated automatically.<br>Precision has the ability to insert default values defined for the selected Card Type Code (Product Type).<br>This API supports the Open Verification Method (OVM), as Precision defines, to insert the default values.<br>This means, while creating a new card with the fields sent in the Add Card request, the card default types defined within the Precision parameters may get overridden. It depends on the setting of the New Account Override attribute for each field where a default value has been defined.<br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: CardAddOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardAddOperRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAddOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardAddOperResponse'
      x-group-name: Card Service
      x-proxy-name: Add Card
      x-child-product-name: Debit Cards
      x-core: Precision
  /cardservice/cards/cards/secured:
    post:
      tags:
      - Get Card
      summary: Get Card
      description: "Get Card API retrieves details of a ATM/debit card, such as card status, transaction limits and card usage fee information.<br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: CardInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInqOperSecuredRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInqOperSecuredResponse'
      x-group-name: Card Service
      x-proxy-name: Get Card
      x-child-product-name: Debit Cards
      x-core: Precision
components:
  schemas:
    CardAddOperRequest:
      required:
      - CardInfo
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: |-
            Value to indicate that the system should auto-acknowledge the exceptions. If this value is set to "true", then the exceptions that cannot be overridden are returned in the Status aggregate of the response message.
        PartyCardRelInfo:
          type: array
          description: |-
            Details of the parties and their relationship with the card.

            **Note:** A primary and a secondary owner can be assigned to the card. Maximum two customers can be assigned.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_PartyCardRelInfo'
        CardInfo:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo'
    CardAddOperResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardStatusRec:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec'
    CardInqOperSecuredRequest:
      required:
      - CardSel
      properties:
        CardSel:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel'
    CardInqOperSecuredResponse:
      required:
      - CardRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardRec:
          type: array
          description: |-
            Details of the card record.

            **Note:** If the user is restricted from viewing the selected accounts for a channel that is bank-employee facing (such as Engage), the system returns only CardKeys, RestrictedInd, and RestrictedDesc.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardRec'
    CardModOperRequest:
      required:
      - CardInfo
      - CardKeys
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardModOperRequest_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo'
    CardModOperResponse:
      required:
      - CardStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        CardStatusRec:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          type: string
        TrnId:
          maxLength: 30
          type: string
        VendorId:
          type: string
          description: An identifier, supplied by Fiserv, that represents the vendor using  this API service.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Client Application Name of the application making the service request (e.g. Architect, Commercial Center, etc.).
        Channel:
          type: string
          description: Indicates the channel used by the client application.
        ClientDateTime:
          type: string
          description: Client date and time as reported by the client application that is making the service request.
          format: date-time
        ClientTerminalSeqNum:
          maxLength: 36
          type: string
          description: Also known as Trace Number or Sequence in some systems. Used to allow the client terminal to set a unique identifier for the transaction. When used by a Network defined transaction the value of this identifier is typically set to narrow character of 12.
        OriginatorType:
          type: integer
          description: "\"The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.\nOriginator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial\ninstitution—home banking\""
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor locatio (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
        TerminalAddr2:
          maxLength: 64
          type: string
        TerminalAddr3:
          maxLength: 64
          type: string
        TerminalAddr4:
          maxLength: 64
          type: string
        TerminalCity:
          maxLength: 32
          type: string
        TerminalCounty:
          maxLength: 32
          type: string
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State Province. ISO 3166-2:US codes.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: Postal Code is ZipCode in the US.
        TerminalCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - ISO3166Numeric
          - ISO3166Alpha3
        TerminalCountryCodeValue:
          maxLength: 80
          type: string
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifies the acquirer of the authorization or financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          maxLength: 23
          type: string
          description: Merchant Number. For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: This is the date on which the transaction will be settled. Used by ISO 8583 (DE63)
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          type: string
          description: This is the identification of the settlement account in which the transaction will be settled.
        BranchIdent:
          maxLength: 22
          type: string
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          enum:
          - Manual
          - Auto
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: 
           Value that indicates if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.
      description: Details of the exceptions that can be manually acknowledged by the client.
    OverrideExceptionType:
      title: OverrideExceptionType
      type: object
      properties:
        SubjectRole:
          type: string
          description: Role of the subject who is overriding the exception.
        SubjectIdent:
          maxLength: 36
          type: string
          description: Subject identification value to identify the subject who is overriding the exception.
        OvrdExceptionCode:
          maxLength: 40
          type: string
          description: Override exception code to be overridden. This can be the ServerStatusCode from the Message Status section.
        OvrdElement:
          $ref: '#/components/schemas/OvrdElementType'
    OvrdElementType:
      title: OvrdElementType
      type: object
      description: Information about the elements that corresponds to the override exception code.
      allOf:
      - $ref: '#/components/schemas/SubjectElementType'
      - type: object
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Value that indicates to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggrigate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Value that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    CardAddOperRequest_PartyRef_PartyKeys:
      type: object
      properties:
        PartyId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a party record.

            **Note:** Key to identify the customer.
      description: Unique information to identify the party record.
    CardAddOperRequest_PartyRef:
      required:
      - PartyKeys
      type: object
      properties:
        PartyKeys:
          $ref: '#/components/schemas/CardAddOperRequest_PartyRef_PartyKeys'
      description: Reference information of the party object that is part of the relationship.
    CardAddOperRequest_PartyCardRelInfo:
      required:
      - PartyCardRelType
      - PartyRef
      properties:
        PartyRef:
          $ref: '#/components/schemas/CardAddOperRequest_PartyRef'
        PartyCardRelType:
          type: string
          description: |-
            Type of relationship between party and a card.



            **Note:** Primary and secondary customer (if any) are considered to be owners.
          enum:
          - Owner
        PrimaryOwnerInd:
          type: boolean
          description: "Value to indicate if an owner is primary.\n\n**Note:** Value should be set to true for one party. If this field is true for multiple parties or no party has this field set to true, the first party instance is assigned the role of primary owner. The other party is assigned as secondary owner. "
    CardAddOperRequest_CardInfo_RelationshipMgr:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |-
            Client-defined responsibility code to identify the officer responsible for the account.

            **Note:** Values are client-defined.
        RelationshipRole:
          type: string
          description: "Role of a relationship manager. \n\n"
          enum:
          - Officer
          - SecondOfficer
          - ThirdOfficer
          - FourthOfficer
    CardAddOperRequest_CardInfo_CardFee:
      required:
      - CardFeeType
      properties:
        CardFeeType:
          type: string
          description: |-
            Type of a card fee.



            **Note:** Value of ForeignFee refers to international fee, whereas TrnFee refers to usage fee.
          enum:
          - AccessFee
          - ForeignFee
          - TrnFee
        FeeOption:
          type: string
          description: |-
            Processing option or method used for the fee type.

            **Note:** The AccessFee, ForeignFee and TrnFee codes are client-defined.
    CardAddOperRequest_CardInfo_PersonEmbossingName:
      type: object
      properties:
        FamilyName:
          maxLength: 40
          type: string
          description: |-
            Family name or last name of the cardholder.

            **Note:** If the vendor is LE, total number of characters for the suffix and last name together should not be more than 20.
        GivenName:
          maxLength: 40
          type: string
          description: |-
            First name of the cardholder. The first name can include initial of middle name as well.

            **Note:** If the vendor is LE, total number of characters for the first name and middle name should not be more than 16.
        MiddleName:
          maxLength: 40
          type: string
          description: |-
            Middle name of a person.

            **Note:** If the vendor is LE, total number of characters for the first name and middle name should not be more than 16.
        NamePrefix:
          type: string
          description: "Name prefix added before the name of cardholder. \n\n**Note:** Valid only if the primary or secondary vendor ATM is LE. Refers to salutation. The freeform text up to four characters is used."
        NameSuffix:
          type: string
          description: "Name suffix added after the name of a person. \n\n**Note:** The freeform text of up to six characters is used. If the vendor is LE, total number of characters for the suffix and last name together should not be more than 20."
      description: |+
        Details of the name to be embossed on the card.

        **Note:** Should be provided only if primary or secondary ATM vendor is L or LE, as established in General Setting ATM Parameters. If the vendor is LE, total number of characters for all PersonEmbossingName fields should not exceed 40.



    CardAddOperRequest_CardInfo_PostAddr:
      required:
      - AddrType
      properties:
        AddressIdent:
          maxLength: 36
          type: string
          description: "Unique address identification value.\n\n**Note:** Used to identify the primary customer's address to use for an account. Send '0' to use the customer-level address (which may be the CIF primary address or a CIF alternate address). Send 1-99 to identify the primary customer's alternate address to use for account correspondence. The alternate address should already exist for the customer. \n\n"
        AddrType:
          type: string
          description: |+
            Type of the address.

          enum:
          - Primary
    CardAddOperRequest_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: "Type of the transaction limit.  \n\n"
          enum:
          - Withdrawal
          - PreAuth
          - Transfer
          - All
          - None
        TrnSrc:
          type: string
          description: |+
            Source of the transaction to apply the transaction limit.



        LimitType:
          type: string
          description: 'Type of the transaction limit. '
          enum:
          - DailyMax
          - ThreeDayMax
          - CycleMax
        DaysInCycle:
          type: integer
          description: Number of days in the cycle.
          format: int64
    CardAddOperRequest_CardInfo_CardPref:
      type: object
      properties:
        Language:
          maxLength: 17
          type: string
          description: 'Preferred language to provide the card-related information. '
      description: Details of card preference to use the card.
    CardAddOperRequest_CardInfo_DateData:
      properties:
        DateType:
          type: string
          description: |+
            Type of date associated with the transaction.





            **Note:** Value of RewardsExpDt refers to participation end date and valid only if the primary vendor or secondary vendor ATM is  L - Fiserv Base24, as established in General Setting ATM Parameters.

          enum:
          - RewardsExpDt
        DateValue:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Value of date.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
    CardAddOperRequest_CardInfo_PreviousCardData:
      type: object
      properties:
        ISOCode:
          type: string
          description: |-
            The ISO code of the card that is replaced or reissued.

            **Note:** The ISO code of the card that is replaced or reissued.
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number assigned to the card known as card account number and is of up to 10 digits.



            **Note:** The card number of the card that is replaced or reissued.
      description: |-
        Details of the previous card.

        **Note:** If the UpdaterSvcOptOutInd is false, the PreviousCardData may be sent to Visa/Mastercard.
    CardAddOperRequest_CardInfo_ClientDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          type: string
          description: |-
            Unique data identifier to identify the client-defined data item.

            **Note:** Used to identify the ATM user-defined code. Maximum three codes for the ATM module is supported, each of which can have a client-defined field label, as defined in Parameters>Bank Information>User Defined Codes.
          enum:
          - UserCode1
          - UserCode2
          - UserCode3
        Value:
          maxLength: 256
          type: string
          description: |-
            Value of the client-defined data item.

            **Note:** Values for each UserCode list 1-3 are client-defined.
    CardAddOperRequest_CardInfo_RefData:
      required:
      - RefType
      properties:
        RefType:
          type: string
          description: |+
            Reference type used to further identify the amount.

            **Note:** Value of CardImage is valid only if the Primary Vendor or Secondary Vendor ATM is  L - Fiserv Base24 or LE - Fiserv EPOC, as established in General Setting ATM Parameters.





          enum:
          - CardImage
        RefIdent:
          maxLength: 36
          type: string
          description: |+
            Reference number is used in combination with reference type to further identify the amount.

            Example: 1234588

            **Note:** Disbursement reference number is displayed on customer statement for B2C transaction.

            Values of CardImage are client-defined.



    CardAddOperRequest_CardInfo_AccessLevelData:
      properties:
        AccessLevelType:
          type: string
          description: Type of access level.
        AccessLevelCode:
          type: string
          description: |-
            Security code to indicate access level.

            **Note:** Refers to security code. Values are client-defined.
    CardAddOperRequest_CardInfo_AcctRef_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of an account record.





        AcctType:
          type: string
          description: |+
            Type of an account.

            For more information on account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md"  title="Click to open"> Glossary</a>.

          enum:
          - DDA
          - SDA
      description: Unique information to identify the account record.
    CardAddOperRequest_CardInfo_AcctRef:
      required:
      - AcctKeys
      type: object
      properties:
        AcctKeys:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctRef_AcctKeys'
      description: Account reference information.
    CardAddOperRequest_CardInfo_AcctLinkData:
      properties:
        AcctRef:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctRef'
        OtherAcctRel:
          type: integer
          description: "Value to define the Other Account Relationship (OAR) with the card.\n\n \n\n\n\n**Note:** One primary account per AcctType is allowed. If more than one account of the same AcctType is sent with this field set to 1, the first instance will be set as the primary. At least one account per AcctType must be set to 1.\n\nAn OAR value of 1 identifies the account as the primary account for this account type. An OAR of 2 or greater identifies the account as secondary for this account type."
          format: int64
        FinancialTrnOption:
          type: string
          description: Code to identify the type of transactions this card can perform on an account.
          enum:
          - AllowAllTrn
          - BlockDeposit
          - BlockWithdrawal
          - BlockXferDeposit
          - BlockXferWithdrawal
          - BlockAllTrn
    CardAddOperRequest_CardInfo:
      type: object
      properties:
        Brand:
          type: string
          description: |-
            Code to identify the brand.

            **Note:** Values between (1-9999) are client-defined.
        RewardsProgramInd:
          type: boolean
          description: |+
            Value to indicate if rewards program is applicable.

            **Note:** Only valid if the primary or secondary vendor ATM is  L - Fiserv Base24, is established in general setting ATM parameters.

        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number assigned to the card known as card account number of up to 10 digits.



            **Note:** If CardNum is not provided, system will request an auto-generated card number. The CardNum should not include the ISO number and/or check digit.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable only if supported by the card type.\n\n\n\n**Note:** Maximum two digits are accepted. This field is valid only when the primary vendor or secondary vendor ATM is C - CSFI, as established in precision general setting ATM parameters."
        CardType:
          type: string
          description: |+
            Type of a card.



            **Note:** Class of the card, plastic type used for the card order.

            Values are client-defined. Only valid if the primary or secondary vendor ATM  L - Fiserv Base24 or LE - Fiserv EPOC, is established in general setting ATM parameters.

        ISOCode:
          type: string
          description: |-
            Code to identify the ISO number of card.

            **Note:** *Required field*

            Client-defined value (1-99) to identify the processing parameters of the card, including the ISO number (identifies the card to your ATM processor), the term of the card, card number length, and card number auto-generation preferences.
        ProductIdent:
          maxLength: 42
          type: string
          description: |-
            Unique identifier of a product to indicate the processing options of the card.

            **Note:** *Required field*

            Used to identify the card product to which the card belongs. Values (1-99) are client-defined.
        InstantIssuedInd:
          type: boolean
          description: |-
            Value to indicate if the card is instant issued.

            **Note:** Only valid if the organization has licensed instant issue.
        RelationshipMgr:
          type: array
          description: Information about financial institution officers who have management-related responsibilities of the party, account or card.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_RelationshipMgr'
        CardDtlStatus:
          type: string
          description: |-
            Current status of the card.



            **Note:** If value is not provided, status is set to 'Active'.
          enum:
          - Active
          - Lockout
          - HotCard
          - Closed
          - Other
          - New
          - Dormant
          - ClosedToday
        CardFee:
          type: array
          description: Details of the charges and fees applicable to the card.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardFee'
        OpenDt:
          type: string
          description: Card opening date when the card record was created.
          format: date
        ExpDt:
          type: string
          description: |+
            Card expiration date after which the card becomes inactive.

          format: date
        PersonEmbossingName:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_PersonEmbossingName'
        EmbossingName:
          maxLength: 80
          type: string
          description: |+
            Name embossed on the front side of the card.

            **Note:** Valid only if the primary or secondary vendor ATM is C - CSFI, and neither vendor LE nor L is the other vendor.

        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: |+
            Additional description line that appears on the front side of the card.

            **Note:** Valid only if the primary or secondary vendor ATM is C - CSFI, L - Fiserv Base24 or LE - Fiserv EPOC, as established in general setting ATM parameters.



        PostAddr:
          type: array
          description: |+
            Details of the cardholders postal address.

            **Note:** Ability for one of the primary owner's postal addresses to be assigned at the account-level is supported. If more than one PostAddr instance is sent in the request, the system will record only the first instance.

          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_PostAddr'
        UseSecondaryOwnerAddrInd:
          type: array
          description: |+
            Value to indicate if the address of secondary customer should be used as alternate address for an account.

            **Note:** Provide the value of 'true' to  use the address of secondary customer as the  alternate address for an account. Valid only for ATM vendors L - Fiserv Base24 and LE - Fiserv EPOC. If this field is provided in request, the Secondary customer should be included and value of CardInfo/PostAddr/AddressIdent field should be 0 .

          items: {}
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardTrnLimit'
        DenyThresholdScore:
          type: integer
          description: 'Score used as threshold. If the transaction score is greater or equal to this threshold all subsequent transactions are denied. '
          format: int64
        FasCashAmt:
          type: number
          description: 'Value used to indicate the amount dispensed by ATM if the option of fast cash is selected by the customer. '
        CardsInUseNum:
          type: integer
          description: |-
            Number of cards issued.

            **Note:** Value up to 99 can be entered.
          format: int64
        GenerateCardNum:
          maxLength: 1
          type: string
          description: Number of plastic cards that need to be generated.
        GenerateCardOrder:
          type: string
          description: |-
            Value that generate card order to replace the existing EFT card issued to the cardholder.

            **Note:** Used in combination with the PINMailer to define issue-cd.

            Remake is to make card without new number.
          enum:
          - IssueCard
          - ReIssueCard
          - RemakeCard
          - NewCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: "Field to enable or disable the generation of a PIN mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholders address. \n\n**Note:** Used to request the mailer of card PIN. The value of 'GeneratePINMailer' is used to advice the core system to generate the PIN mailer whereas, value of 'DoNotGenerate' ensures that the PIN is not mailed to user."
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_CardPref'
        DateData:
          type: array
          description: Details of transactions done on a particular date.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_DateData'
        PreviousCardData:
          $ref: '#/components/schemas/CardAddOperRequest_CardInfo_PreviousCardData'
        UpdaterSvcOptOutInd:
          type: boolean
          description: Value to indicate if updater service is to be opt out.
        ExpediteInd:
          type: boolean
          description: Value to indicate if new card order should be expedited.
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** Branch assigned to the card. Values (1-9999) are client-defined.
        ClassCode:
          type: string
          description: |-
            Code to indicate the class.

            **Note:** Refers to customer type. Values are client-defined.
        ClientDefinedData:
          type: array
          description: Details of the client-defined data whose value, data type and definition are defined by the client or user.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_ClientDefinedData'
        Nickname:
          maxLength: 80
          type: string
          description: |-
            Name that customer can assign to the cards for easy identification.

            **Note:** Maximum 50 characters are accepted.
        ReportGroupCode:
          type: string
          description: |-
            Client-defined code to group the accounts for reporting purposes.

            **Note:** Refers to customer number. Values are client-defined.
        PINOffset:
          maxLength: 10
          type: string
          description: "PIN offset number assigned to the card. \n\n**Note:** An offset value is allowed only if the ISO code is defined to allow PIN offset. \n\nPIN offset is not the actual PIN of the card."
        PINInvalidEntryAllowedNum:
          type: integer
          description: |-
            Maximum number of allowed attempts for invalid PIN entry.

            **Note:** Allowed values (0-9) are client-enabled, for example, an organization can enable 1,2, 3 and 4 but not enable values 5-9.
          format: int64
        RefData:
          type: array
          description: |-
            Details of the Reference data to further identify the amount.

            **Note:** Applicable for B2C transaction type.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_RefData'
        AccessLevelData:
          type: array
          description: Details of access level.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AccessLevelData'
        AcctLinkData:
          type: array
          description: Details of the accounts to be linked to a debit card.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AcctLinkData'
      description: Detailed information about the card.
    CardAddOperResponse_CardStatusRec_CardKeys:
      type: object
      properties:
        ISOCode:
          type: string
          description: Code to indicate the ISO.
        CardNum:
          maxLength: 32
          type: string
          description: |+
            Number assigned to the card also known as account number and is of up to 10 digits.

      description: Unique information to identify a card record.
    CardAddOperResponse_CardStatusRec_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: |+
            Status code of the card.

          enum:
          - Valid
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
      description: Details of the card status returned in the result of API call.
    CardAddOperResponse_CardStatusRec:
      required:
      - CardKeys
      - CardStatus
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardKeys'
        CardStatus:
          $ref: '#/components/schemas/CardAddOperResponse_CardStatusRec_CardStatus'
      description: Details of the card status record.
    CardInqOperSecuredRequest_CardSel_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** Refers to PAN. PAN is required if CardNum and ISOCode are not sent. 

            For PAN, consumer should send the entire card number, including the ISO code and check digit.

        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number assigned to the card also known as account number and is of up to 10 digits.



            **Note:** Card number or PAN. For PAN, send the entire card number including the ISO code and check digit.
        ISOCode:
          type: string
          description: |-
            Code to identify the ISO number of card.

            **Note:** Should be provided if card number is sent in the CardNum field. ISO Code is not required if PAN is sent. Values are client-defined.
      description: Unique information to identify a card record.
    CardInqOperSecuredRequest_CardSel:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredRequest_CardSel_CardKeys'
      description: |+
        Criteria to select the card record.

    CardInqOperSecuredResponse_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.
        ISOCode:
          type: string
          description: |-
            Code to identify the ISO number of card.

            **Note:** The ISOCode along with CardNum uniquely identifies the card. ISO Code values are client-defined.
        CardNum:
          maxLength: 32
          type: string
          description: |+
            Number assigned to the card also known as account number and is of up to 10 digits.

      description: Unique information to identify a card record.
    CardInqOperSecuredResponse_CardInfo_RelationshipMgr:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |-
            Client-defined Responsibility Code to identify the officer responsible for the account.

            **Note:** Values are client-defined by account type and officer type.
        RelationshipRole:
          type: string
          description: "Role of a relationship manager. \n\n"
          enum:
          - Officer
          - SecondOfficer
          - ThirdOfficer
          - FourthOfficer
    CardInqOperSecuredResponse_CardInfo_CardFee:
      required:
      - CardFeeType
      properties:
        CardFeeType:
          type: string
          description: |+
            Type of a card fee.

          enum:
          - AccessFee
          - ForeignFee
          - TrnFee
        FeeOption:
          type: string
          description: ' Processing option or method used for the fee type.'
    CardInqOperSecuredResponse_CardInfo_PersonEmbossingName:
      type: object
      properties:
        FamilyName:
          maxLength: 40
          type: string
          description: Family name or last name of the cardholder.
        GivenName:
          maxLength: 40
          type: string
          description: First name of the cardholder. The first name can include initial of middle name as well.
        MiddleName:
          maxLength: 40
          type: string
          description: Middle name of a person.
        NamePrefix:
          type: string
          description: "Name prefix to add before the name of the cardholder. \n\n\n\n\n\n**Note:** Refers to the salutation. The freeform text is used. "
        NameSuffix:
          type: string
          description: "Name suffix to add after the name of a person. \n\n**Note:** The freeform text is used. "
      description: Details of the name to be embossed on the issuing card.
    CardInqOperSecuredResponse_CardInfo_PostAddr:
      required:
      - AddrType
      properties:
        AddressIdent:
          maxLength: 36
          type: string
          description: Unique address identification value.
        AddrType:
          type: string
          description: |+
            Type of the address.

    CardInqOperSecuredResponse_CardInfo_CurAmt_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: |-
            Standard ISO currency code format.

            Refer to the <a href="https://en.wikipedia.org/wiki/ISO_4217" target="_blank" title="Click to open in a new tab">ISO 4217 codes </a> to view the list of all currency codes.
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\n\n\nPlease note that presently only USD currency code is supported."
      description: |+
        Details of the currency code.

    CardInqOperSecuredResponse_CardInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Transaction limit amount in the decimal format.

            Example: 200.00
        CurCode:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CurAmt_CurCode'
      description: Details of the transaction limit amount applicable for the party.
    CardInqOperSecuredResponse_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: "Type of the transaction limit.  \n\n\n\n"
          enum:
          - Withdrawal
          - PreAuth
          - Transfer
          - All
          - None
        TrnSrc:
          type: string
          description: Source of the transaction to apply the transaction limit.
          enum:
          - POS
          - Combined
          - ATM
          - ATMOffline
          - POSOffline
        TempLimitInd:
          type: boolean
          description: Value that indicates if temporary limit is applicable on card.
        LimitType:
          type: string
          description: "Type of the transaction limit. \n\n\n\n"
          enum:
          - DailyMax
          - ThreeDayMax
          - CycleMax
        DaysInCycle:
          type: integer
          description: Number of days in the cycle.
          format: int64
        CurAmt:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CurAmt'
        LimitCount:
          type: integer
          description: 'Number of limits. '
          format: int64
        TempTrnLimitExpDt:
          type: string
          description: "Date on which the temporary transaction limit becomes inactive.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
    CardInqOperSecuredResponse_CardInfo_CardPref:
      type: object
      properties:
        Language:
          maxLength: 17
          type: string
          description: Preferred language to provide the card-related information.
      description: Details of card preference to use the card.
    CardInqOperSecuredResponse_CardInfo_DateData:
      properties:
        DateType:
          type: string
          description: |-
            Type of date associated with the transaction.





            **Note:** Refers to date field Date Last Used, Date Closed, Date Last Maintenance, or Participation End Date.
          enum:
          - LastActivity
          - Closed
          - LastFileMaint
          - RewardsExpDt
        DateValue:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date value.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
    CardInqOperSecuredResponse_CardInfo_ClientDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          type: string
          description: |-
            Unique data identifier to identify the client-defined data item.

            **Note:** Maximum three CRD user-defined codes are supported. User-defined fields are not supported for CRD.
          enum:
          - UserCode1
          - UserCode2
          - UserCode3
        DataType:
          type: string
          description: |+
            Type of client-defined data.



          enum:
          - Numeric
        Value:
          maxLength: 256
          type: string
          description: Value of the client-defined data item.
        DataLength:
          type: integer
          description: Maximum allowed length of the client-defined data entered in the Value field.
          format: int64
        Desc:
          maxLength: 100
          type: string
          description: |-
            Description of the client defined data.

            **Note:** Refers to field label which is a user-friendly description of the field that can be used in the UI .
        RequiredFlag:
          type: boolean
          description: |+
            Value that indicates if data value is required for the client-defined data.

    CardInqOperSecuredResponse_CardInfo_CardPeriodData:
      properties:
        CardAmtType:
          type: string
          description: |+
            Type of amount processed using card in the mentioned period.

          enum:
          - Deposit
          - CardAccess
          - CardUse
          - Withdrawal
          - Debit
          - Credit
          - Inquiry
        CardAmtSource:
          type: string
          description: Type of source for the amount.
          enum:
          - POS
          - ATM
        CardPeriodType:
          type: string
          description: |+
            Indicator to define the type of date range for the card period.

          enum:
          - MTD
          - PriorMonth
          - YTD
          - PriorYr
          - LTD
          - Today
        LastOccurInd:
          type: boolean
          description: Value that indicates if the data refers to a last occurrence.
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
        Amt:
          type: number
          description: |-
            Transaction limit amount in the decimal format.

            Example: 200.00
        Count:
          type: integer
          description: Number of occurrences with respect to the specified unit value.
          format: int64
    CardInqOperSecuredResponse_CardInfo_RefData:
      required:
      - RefType
      properties:
        RefType:
          type: string
          description: |+
            Reference type used to further identify the amount.



          enum:
          - CardImage
        RefIdent:
          maxLength: 36
          type: string
          description: |-
            Reference number is used in combination with reference type to further identify the amount.

            Example: 1234588

            **Note:** Disbursement reference number is displayed on customer statement for B2C transaction.
    CardInqOperSecuredResponse_CardInfo_TextAlertData_PhoneNum:
      required:
      - PhoneType
      type: object
      properties:
        PhoneType:
          type: string
          description: "Type of a phone.\n\n\n\n**Note:** DayPhone refers to WorkPhone - Foreign.\n\nEvePhone refers to HomePhone - Foreign.\n\nOther refers to Cell Phone - Foreign.\n\nForeign is interpreted to mean outside the US.\n\nAdditional phone types may be client-defined. "
          enum:
          - EvePhone
          - DayPhone
          - EveFax
          - DayFax
          - Home
          - Work
          - Mobile
        PhoneIdent:
          type: integer
          description: Unique identifier of phone used if more than one occurrence of a phone type (for example 5 mobile phones) is available.
          format: int64
        Phone:
          type: string
          description: "Phone number to search the cardholder records.\n\n**Note:** US phone numbers have international dial code that is '1'. "
      description: Phone number details of cardholder.
    CardInqOperSecuredResponse_CardInfo_TextAlertData_Email:
      type: object
      properties:
        EmailIdent:
          maxLength: 36
          type: string
          description: Unique identifier of the email address.
        EmailAddr:
          maxLength: 254
          type: string
          description: Email address to search the cardholder records.
      description: Email address details of cardholder.
    CardInqOperSecuredResponse_CardInfo_TextAlertData_AlertContact:
      properties:
        PhoneNum:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_TextAlertData_PhoneNum'
        Email:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_TextAlertData_Email'
    CardInqOperSecuredResponse_CardInfo_TextAlertData:
      type: object
      properties:
        AlertContact:
          type: array
          description: Contact details of alerts.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_TextAlertData_AlertContact'
      description: Details of text alert notifications.
    CardInqOperSecuredResponse_CardInfo:
      type: object
      properties:
        Brand:
          type: string
          description: Code to identify the brand.
        RewardsProgramInd:
          type: boolean
          description: Value that indicates if rewards program is applicable.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued.\n\n\n\n**Note:** Refers to member number. \n\nApplicable if supported by the card type."
        ProductIdent:
          maxLength: 42
          type: string
          description: "Unique identifier of a product. This value is used to indicate the processing options of the card.\n\n**Note:** Values are client-defined. "
        Desc:
          maxLength: 100
          type: string
          description: Description of the product identifier.
        InstantIssuedInd:
          type: boolean
          description: Value that indicates if the card is instant issued.
        RelationshipMgr:
          type: array
          description: Information about financial institution officers who have management-related responsibilities of the party, account or card.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_RelationshipMgr'
        CardDtlStatus:
          type: string
          description: |+
            Current status of the card.

          enum:
          - Active
          - Lockout
          - HotCard
          - Closed
        CardDtlStatusEnumDesc:
          maxLength: 80
          type: string
          description: Description of the enumeration value in the CardDtlStatus field.
        CardFee:
          type: array
          description: Details of the charges and fees applicable to the card.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardFee'
        OpenDt:
          type: string
          description: Card opening date when the card record was created.
          format: date
        IssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Card issuing date when the current card was issued.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
        ExpDt:
          type: string
          description: "Card expiration date after which the card becomes inactive.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
        PersonEmbossingName:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_PersonEmbossingName'
        EmbossingName:
          maxLength: 80
          type: string
          description: Name embossed on the front side of the card.
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: Additional description line that appears on the front side of the card.
        PostAddr:
          type: array
          description: Details of the cardholders postal address.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_PostAddr'
        UseSecondaryOwnerAddrInd:
          type: array
          description: Value that indicates if the address of secondary customer should be used as alternate address for an account.
          items: {}
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardTrnLimit'
        DenyThresholdScore:
          type: integer
          description: 'Score used as threshold. If the transaction score is greater or equal to this threshold all subsequent transactions are denied. '
          format: int64
        FasCashAmt:
          type: number
          description: 'Value used to indicate the amount dispensed by ATM if the option of fast cash is selected by the customer. '
        GenerateCardNum:
          maxLength: 1
          type: string
          description: "Number of plastic cards that need to be generated. Valid value are 0 or 1.\n\n**Note:** Refers to cards issued. "
        GenerateCardOrder:
          type: string
          description: |-
            Value that generate card order to replace the existing EFT card issued to the cardholder.



            **Note:** Used in combination with PINMailer to define issue-cd.

            Remake refers to make card without new number.
          enum:
          - IssueCard
          - ReIssueCard
          - RemakeCard
          - NewCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: "Field to enable or disable the generation of a PIN mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholders address. \n\n"
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardPref'
        DateData:
          type: array
          description: Details of transactions done at a particular date.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_DateData'
        PreviousExpDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Expiry date of the previous card. This date is used as a reference to order a new card and sometimes to verify the expiry date of the issued card if the card is not in use.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
        OriginatingBranch:
          maxLength: 32
          type: string
          description: Branch that primarily created the account with the party.
        OriginatingBranchEnumDesc:
          maxLength: 80
          type: string
          description: Description of the enumeration value in the OriginatingBranch field.
        ClassCode:
          type: string
          description: |-
            Code to indicate the class.

            **Note:** Refers to customer type. Values are client-defined.
        ClientDefinedData:
          type: array
          description: Details of the client-defined data whose value, data type and definition are defined by the client or user.
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_ClientDefinedData'
        CardPeriodData:
          type: array
          description: Periodic details of a card recurring at regular intervals
          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_CardPeriodData'
        Nickname:
          maxLength: 80
          type: string
          description: Name that customer can assign to the cards for easy identification.
        ReportGroupCode:
          type: string
          description: |-
            Client-defined code to group the accounts for reporting purposes.

            **Note:** Refers to customer number. Values are client-defined.
        PINOffset:
          maxLength: 10
          type: string
          description: "PIN offset number assigned to the card.\n\n**Note:** PIN offset is not the actual PIN of the card. "
        PINInvalidEntryNum:
          type: integer
          description: ' Number of invalid PIN entry attempts.'
          format: int64
        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of allowed attempts for invalid PIN entry.
          format: int64
        RefData:
          type: array
          description: |+
            Details of the reference data to further identify the amount.

          items:
            $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_RefData'
        AccessLevelData:
          type: array
          description: Details of access level.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AccessLevelData'
        TextAlertData:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo_TextAlertData'
        RestrictedInd:
          type: boolean
          description: Value to indicate if account is restricted for view.
        RestrictedDesc:
          maxLength: 80
          type: string
          description: 'Description of the reason for restricted view. '
      description: Detailed information about the card.
    CardInqOperSecuredResponse_CardStatus:
      required:
      - CardStatusCode
      type: object
      properties:
        CardStatusCode:
          type: string
          description: |+
            Status code of the card.

        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the card status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-12-31T23:59:59.999"
      description: Details of the card status returned in the result of API call.
    CardInqOperSecuredResponse_CardRec:
      required:
      - CardInfo
      - CardKeys
      - CardStatus
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardKeys'
        CardInfo:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardInfo'
        CardStatus:
          $ref: '#/components/schemas/CardInqOperSecuredResponse_CardStatus'
    CardModOperRequest_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** Refers to PAN. PAN is required if CardNum and ISOCode are not sent. 

            For PAN, consumer should send the entire card number, including the ISO code and check digit.

        ISOCode:
          type: string
          description: |-
            Code to identify the ISO number of card.

            **Note:** Should be provided if CardNum is sent in request. ISO code is not required if PAN is sent in request. Values are client-defined.
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number assigned to the card also known as account number and is of up to 10 digits.



            **Note:** The CardNum and ISOCode are required if PAN is not sent in request.
      description: Unique information to identify a card record.
    CardModOperRequest_CardInfo_RelationshipMgr:
      required:
      - RelationshipMgrIdent
      properties:
        RelationshipMgrIdent:
          maxLength: 36
          type: string
          description: |-
            Client-defined responsibility code to identify the officer responsible for the account.

            **Note:** Value of officer is client-defined and are specific for each card account type and allows 4 different type of officers for cards or atm is allowed.
        RelationshipRole:
          type: string
          description: "Role of a relationship manager. \n\n"
          enum:
          - Officer
          - SecondOfficer
          - ThirdOfficer
          - FourthOfficer
    CardModOperRequest_CardInfo_CardFee:
      required:
      - CardFeeType
      properties:
        CardFeeType:
          type: string
          description: |+
            Type of a card fee.

        FeeOption:
          type: string
          description: |-
            Processing option or method used for the fee type.

            **Note:** The AccessFee, ForeignFee and TrnFee codes are client-defined.
    CardModOperRequest_CardInfo_PersonEmbossingName:
      type: object
      properties:
        FamilyName:
          maxLength: 40
          type: string
          description: Family name or last name of the cardholder.
        GivenName:
          maxLength: 40
          type: string
          description: First name of the cardholder. The first name can include initial of middle name as well.
        MiddleName:
          maxLength: 40
          type: string
          description: Middle name of a person.
        NamePrefix:
          type: string
          description: "Name prefix added before the name of cardholder. \n\n**Note:** Refers to salutation. The freeform text is used. "
        NameSuffix:
          type: string
          description: 'Name suffix added after the name of a person. '
      description: |-
        Details of the name to be embossed on the card.

        **Note:** Provide this aggregate to update the embossing name information for the card.
    CardModOperRequest_CardInfo_PostAddr:
      required:
      - AddrType
      properties:
        AddressIdent:
          maxLength: 36
          type: string
          description: Unique address identification value.
        AddrType:
          type: string
          description: |+
            Type of the address.

          enum:
          - Primary
          - Secondary
    CardModOperRequest_CardInfo_CurAmt_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\n\n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes."
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\n\n\nPlease note that presently only USD currency code is supported."
      description: |+
        Details of the currency code.

    CardModOperRequest_CardInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Transaction limit amount in the decimal format.

            Example: 200.00
        CurCode:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_CurAmt_CurCode'
      description: Details of the transaction limit amount applicable for the party.
    CardModOperRequest_CardInfo_CardTrnLimit:
      required:
      - TrnTypeValue
      properties:
        TrnTypeValue:
          type: string
          description: "Type of the transaction limit.  \n\n"
          enum:
          - Withdrawal
          - PreAuth
          - Transfer
          - All
          - None
        TrnSrc:
          type: string
          description: |+
            Source of the transaction to apply the transaction limit.



        TempLimitInd:
          type: boolean
          description: Value to indicate if temporary limit is applicable on card.
        LimitType:
          type: string
          description: 'Type of the transaction limit. '
          enum:
          - DailyMax
          - ThreeDayMax
          - CycleMax
        DaysInCycle:
          type: integer
          description: Number of days in the cycle.
          format: int64
        CurAmt:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_CurAmt'
        LimitCount:
          type: integer
          description: 'Number of limits. '
          format: int64
        TempTrnLimitExpDt:
          type: string
          description: "Date on which the temporary transaction limit becomes inactive.\n\nFormat: yyyy-mm-dd \n\nExample: 2021-11-20"
          format: date
    CardModOperRequest_CardInfo_CardPref:
      type: object
      properties:
        Language:
          maxLength: 17
          type: string
          description: "Preferred language to provide the card-related information. \n\n**Note:** Core system can configure the language code after interaction with the financial institution. This field is client-defined."
      description: Details of card preference to use the card.
    CardModOperRequest_CardInfo_DateData:
      properties:
        DateType:
          type: string
          description: |-
            Type of date associated with the transaction.





            **Note:** Refers to date field, date last used date closed, date last maintenance or participation end date.
        DateValue:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Value of date.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
    CardModOperRequest_CardInfo_ClientDefinedData:
      required:
      - DataIdent
      properties:
        DataIdent:
          type: string
          description: Unique data identifier to identify the client-defined data item.
          enum:
          - UserCode1
          - UserCode2
          - UserCode3
        Value:
          maxLength: 256
          type: string
          description: Value of the client-defined data item.
    CardModOperRequest_CardInfo_RefData:
      required:
      - RefType
      properties:
        RefType:
          type: string
          description: Reference type used to further identify the amount.
        RefIdent:
          maxLength: 36
          type: string
          description: |-
            Reference number is used in combination with reference type to further identify the amount.

            Example: 1234588
    CardModOperRequest_CardInfo_TextAlertData_PhoneNum:
      required:
      - PhoneType
      type: object
      properties:
        PhoneType:
          type: string
          description: "Type of a phone.\n\n**Note:** DayPhone refers to WorkPhone - Foreign.\n\nEvePhone refers to HomePhone - Foreign.\n\nOther refers to Cell Phone - Foreign.\n\nForeign is interpreted to mean outside the US.\n\nAdditional phone types may be client-defined. \n\n"
        PhoneIdent:
          type: integer
          description: |-
            Unique identifier of phone used if more than one occurrence of a phone type (for example 5 Mobile phones) is available.

            **Note:** The phone identifier for alerts/notifications.
          format: int64
      description: Phone number details of a party.
    CardModOperRequest_CardInfo_TextAlertData_Email:
      type: object
      properties:
        EmailIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identifier of the email address.

            **Note:** The email address for alerts/notifications.
      description: Email address details of a cardholder.
    CardModOperRequest_CardInfo_TextAlertData_AlertContact:
      properties:
        PhoneNum:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_TextAlertData_PhoneNum'
        Email:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_TextAlertData_Email'
    CardModOperRequest_CardInfo_TextAlertData:
      type: object
      properties:
        AlertContact:
          type: array
          description: Contact details of alerts.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_TextAlertData_AlertContact'
      description: Details of text alert notifications.
    CardModOperRequest_CardInfo:
      type: object
      properties:
        Brand:
          type: string
          description: |-
            Code to identify the brand.

            **Note:** The brand is client-defiend.
        RewardsProgramInd:
          type: boolean
          description: Value to indicate if rewards program is applicable.
        CardNum:
          maxLength: 32
          type: string
          description: |-
            Number assigned to the card known as card account number of up to 10 digits.



            **Note:** The CardNum and ISOCode are required if PAN is not sent in request.
        CardSeqNum:
          maxLength: 3
          type: string
          description: "Card Sequence Number that refers to the member number to whom the card is issued. \n\nApplicable only if supported by the card type.\n\n\n\n**Note:** Refers to member mumber."
        CardType:
          type: string
          description: |+
            Type of a card.

        ISOCode:
          type: string
          description: |-
            Code to identify the ISO number of card.

            **Note:** Should be provided if CardNum is sent in request. ISO Code is not required if PAN is sent in request. Values are client-defined.
        InstantIssuedInd:
          type: boolean
          description: Value to indicate if the card is instant issued.
        RelationshipMgr:
          type: array
          description: Information about financial institution officers who have management-related responsibilities of the party, account or card.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_RelationshipMgr'
        CardDtlStatus:
          type: string
          description: |+
            Current status of the card.

          enum:
          - Active
          - Lockout
          - HotCard
          - Closed
        CardFee:
          type: array
          description: Details of the charges and fees applicable to the card.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardFee'
        OpenDt:
          type: string
          description: Card opening date when the card record was created.
          format: date
        IssueDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Card issuing date when the current card was issued.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
        ExpDt:
          type: string
          description: |+
            Card expiration date after which the card becomes inactive.

          format: date
        PersonEmbossingName:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_PersonEmbossingName'
        SecondaryEmbossingName:
          maxLength: 80
          type: string
          description: Additional description line that appears on the front side of the card.
        PostAddr:
          type: array
          description: |-
            Details of the cardholders postal address.

            **Note:** Provide this aggregate to associate address information to a card.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_PostAddr'
        UseSecondaryOwnerAddrInd:
          type: array
          description: Value to indicate if the address of secondary customer should be used as alternate address for an account.
          items: {}
        CardTrnLimit:
          type: array
          description: Details of the card transaction limit.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardTrnLimit'
        DenyThresholdScore:
          type: integer
          description: 'Score used as threshold. If the transaction score is greater or equal to this threshold all subsequent transactions are denied. '
          format: int64
        FasCashAmt:
          type: number
          description: 'Value used to indicate the amount dispensed by ATM if the option of fast cash is selected by the customer. '
        GenerateCardNum:
          maxLength: 1
          type: string
          description: "Number of plastic cards that need to be generated.\n\n**Note:** Refers to cards issued. "
        GenerateCardOrder:
          type: string
          description: |-
            Value that generate card order to replace the existing EFT card issued to the cardholder.

            **Note:** Used in combination with the PINMailer to define issue-cd.

            Remake is to make card without new number.
          enum:
          - IssueCard
          - ReIssueCard
          - RemakeCard
          - NewCard
          - DoNotGenerate
        GeneratePINMailer:
          type: string
          description: "Field to enable or disable the generation of a PIN mailer. PIN mailer is used to hide the PIN number of a card sent to the cardholders address. \n\n**Note:** Used to request the mailer of card PIN. The value of 'GeneratePINMailer' is used to advice the core system to generate the PIN mailer whereas, value of 'DoNotGenerate' ensures that the PIN is not mailed to user."
          enum:
          - GeneratePINMailer
          - DoNotGenerate
        CardPref:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_CardPref'
        DateData:
          type: array
          description: Details of transactions done on a particular date.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_DateData'
        PreviousExpDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Expiry date of the previous card. This date is used as a reference to order a new card and sometimes to verify the expiry date of the issued card if the card is not in use.

            Format: yyyy-MM-ddTHH:mm:ss.SSS

            Example: 2021-01-31T23:59:59.999
        OriginatingBranch:
          maxLength: 32
          type: string
          description: |-
            Branch that primarily created the account with the party.

            **Note:** The branch is client-defined.
        ClassCode:
          type: string
          description: |-
            Code to indicate the class.

            **Note:** Customer type displays a list of customer type that are client-defined.
        ClientDefinedData:
          type: array
          description: Details of the client-defined data whose value, data type and definition are defined by the client or user.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_ClientDefinedData'
        Nickname:
          maxLength: 80
          type: string
          description: Name that customer can assign to the cards for easy identification.
        ReportGroupCode:
          type: string
          description: Client-defined code to group the accounts for reporting purposes.
        PINOffset:
          maxLength: 10
          type: string
          description: 'PIN offset number assigned to the card. '
        PINInvalidEntryNum:
          type: integer
          description: Number of invalid PIN entry attempts.
          format: int64
        PINInvalidEntryAllowedNum:
          type: integer
          description: Maximum number of allowed attempts for invalid PIN entry.
          format: int64
        RefData:
          type: array
          description: Details of the Reference data to further identify the amount.
          items:
            $ref: '#/components/schemas/CardModOperRequest_CardInfo_RefData'
        AccessLevelData:
          type: array
          description: Details of access level.
          items:
            $ref: '#/components/schemas/CardAddOperRequest_CardInfo_AccessLevelData'
        TextAlertData:
          $ref: '#/components/schemas/CardModOperRequest_CardInfo_TextAlertData'
      description: Detailed information about the card.
    CardModOperResponse_CardStatusRec_CardKeys:
      type: object
      properties:
        CardId:
          maxLength: 36
          type: string
          description: |+
            Unique identification number of a card maintained by financial institution. This number is printed on the front side of the card.

            **Note:** Refers to PAN. PAN is required if CardNum and ISOCode are not sent in request. 

            For PAN, consumer should send the entire card number, including the ISO code and check digit.

        ISOCode:
          type: string
          description: |-
            Code to identify the ISO number of card.

            **Note:** CardNum and ISOCode are required if PAN is not sent in request.
        CardNum:
          maxLength: 32
          type: string
          description: |+
            Number assigned to the card also known as account number and is of up to 10 digits.

      description: Unique information to identify a card record.
    CardModOperResponse_CardStatusRec:
      required:
      - CardKeys
      type: object
      properties:
        CardKeys:
          $ref: '#/components/schemas/CardModOperResponse_CardStatusRec_CardKeys'
      description: Details of the card status record.
