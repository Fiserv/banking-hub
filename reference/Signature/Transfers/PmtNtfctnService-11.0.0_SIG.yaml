---
openapi: 3.0.1
info:
  title: Payment Notification Service
  description: This service supports payment notifications. Payment notification include a set of transaction entries to one or several customers' account to debit principal, charge fees, credit pricicipal, refund fees including the corresponding G/L offset entries.
  version: 11.0.0_SIG
servers:
- url: https://swaggerhub.onefiserv.net/virts/Bank_Sol_Org/PmtNtfctnService/11.0.0_SIG
  description: SwaggerHub API Auto Mocking
paths:
  /pmtntfctn:
    post:
      tags:
      - Add Payment Notification
      summary: Adds a payment notification
      description: "Add Payment Notification API adds several notifications for principal/fees to one or multiple accounts and the corresponding General Ledger (G/L) offset entries. <br>Additionally, this API supports G/L to G/L transactions and transports the debtor and creditor data along with the SWIFT data. <br> <br> To download the API Specifications and Postman Collection, click <a href=\"../docs/?path=docs/resources/resources.md\" title=\"Click to open\">Resources</a>."
      operationId: PmtNtfctnAddOper
      parameters:
      - name: EFXHeader
        in: header
        description: EFX Header is a common and required component for all API calls, it contains client-related parameters. Please note that the header parameters should be sent as a JSON object under the EFXHeader parameter. To view the list of header parameters, <a href="../docs?path=docs/api-ref-EFX-header.md" title="Click to open"> click here.</a>
        required: true
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PmtNtfctnAddOperRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PmtNtfctnAddOperResponse'
        default:
          description: To view the complete list of response codes, <a href="../docs/?path=docs/response-codes.md" title="Click to open">click here.</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PmtNtfctnAddOperResponse'
      x-group-name: Payment Notification Service
      x-proxy-name: Add Payment Notification
      x-child-product-name: Transfers
      x-core: Signature
components:
  schemas:
    PmtNtfctnAddOperRequest:
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: |-
            Value to indicate that the system should auto-acknowledge the exceptions. If this value is set to "true", then the exceptions that cannot be overridden are returned in the Status aggregate of the response message.
        PmtNtfctnInfo:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo'
    PmtNtfctnAddOperResponse:
      required:
      - PmtNtfctnStatusRec
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        PmtNtfctnStatusRec:
          $ref: '#/components/schemas/PmtNtfctnAddOperResponse_PmtNtfctnStatusRec'
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          maxLength: 36
          type: string
          description: Organization Identifier is a unique identifier that represents the financial institution or holding company.  This identifier does not necessarily match the organization identifier or bank identifier in the backend system. To ensure uniqueness across all institutions in all parts of the world, use the Dun & Bradstreet number.
        TrnId:
          maxLength: 36
          type: string
          description: Transaction UUID (Universal Unique Identifier) of the current message.
        VendorId:
          maxLength: 255
          type: string
          description: Unique vendor identification number provided by Fiserv to identify the vendor.
        Context:
          $ref: '#/components/schemas/Context'
      example: '{ "TrnId": "622182", "OrganizationId": "PRMOrg10", "VendorId": "112233", "Context":{ "Channel": "WEB" } }'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Name of the client application that is used to send the service request, such as Architect, Commercial Center and others.
        Channel:
          maxLength: 80
          type: string
          description: Name of the channel used by the client application. * 'Online' * 'Phone'  * 'Branch' * 'EFT'
        TrnIdent:
          maxLength: 36
          type: string
          description: Unique identification value of transaction defined by the client.  Also known as Trace Number or Sequence in some systems. When used by a Network defined transaction,  the value of this identifier is typically set to narrow character of 12.
        ClientDateTime:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Client date and time as reported by the client application that is making the service request.
        ClientTerminalSeqNum:
          maxLength: 36
          description: 'Client terminal sequence number. type: string'
        OriginatorType:
          type: integer
          description: "The type of organization that the originator represents. This is usually a coded value representing the industry that the organization operates in. It contains the SIC code. For ISO 8583 (DE18) the element is restricted to narrow character of maximum length of 4.  Originator Type codes that apply to financialinstitutions are:\n  6010 - Financial institution—bank, savings and loan (S and L), or credit union  \n  6011 - Financial institution—ATM \n  6012 - Financial institution—merchandise sale \n  6999 - Financial institution—home banking"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor location (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41) the element is restricted to a narrow character with maximum length of 8.
        TerminalAddr1:
          maxLength: 64
          type: string
          description: Terminal address line 1.
        TerminalAddr2:
          maxLength: 64
          type: string
          description: Terminal address line 2.
        TerminalAddr3:
          maxLength: 64
          type: string
          description: Terminal address line 3.
        TerminalAddr4:
          maxLength: 64
          type: string
          description: Terminal address line 4.
        TerminalCity:
          maxLength: 32
          type: string
          description: Terminal city name.
        TerminalCounty:
          maxLength: 32
          type: string
          description: Terminal county name.
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State province value as per ISO 3166-2:US codes where the terminal is located.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: 'Postal Code where the terminal is located. '
        TerminalCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the terminal is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        TerminalCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value as per the ISO source code set in the TerminalCountryCodeSource field.
        PhoneType:
          maxLength: 80
          type: string
          description: 'Type of a phone. Valid values are: * ''EvePhone'' * ''DayPhone'' * ''EveFax'' * ''DayFax'' * ''Home'' * ''Work'' * ''Mobile'' * ''Fax'' * ''Pager'' * ''Modem'' * ''Other'''
        PhoneNum:
          type: string
          description: Phone number.
        PhoneExchange:
          maxLength: 80
          type: string
          description: Phone exchange.
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583 (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in identifying a transaction uniquely. The trace number remains unchanged for all messages throughout the life of a transaction. This number is not a terminal receipt number. The originating processor increments the trace number by one for each transaction sent to the switch. For ISO 8583 (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The transaction is applied to the specified network settlement counts and balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original source document and used to assist in locating that document. The acquirer of a transaction assigns this number. The issuer processor must retain it in the event that a chargeback is submitted for the transaction. For ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifier of the acquirer who processes the financial transaction. It is a mandatory element in all authorization and financial messages and does not change throughout the life of a transaction. EPOC considers the acquirer as the terminal owner for reporting purposes. For ISO 8583 (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          maxLength: 80
          type: string
          description: |-
            Standard country code format where the acquirer is located. Valid values are:
              * 'ISO3166-Numeric'
              * 'ISO3166-Alpha-3'
        AcquirerCountryCodeValue:
          maxLength: 20
          type: string
          description: Country code value of Acquirer as per the ISO source code set in the AcquirerCountryCodeSource field.
        MerchNum:
          maxLength: 23
          type: string
          description: Unique identification number of a merchant.  For ISO 8583 (DE42) the element is restricted to C-15
        SettlementDate:
          type: string
          description: Transaction settlement date. Used by ISO 8583 (DE63).
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: Identification of the settlement account in which the transaction will be settled.
        BusinessApplIdent:
          maxLength: 80
          type: string
          description: |-
            Identification of the business application. Valid values are:
              * 'P2P' - Person-to-Person
              * 'C2B' - Consumer-to-Business
              * 'A2A' - Account-to-Account
              * 'B2C' - Business-to-Consumer
              * 'B2B' - Business-to-Business
              * 'G2C' - Government-to-Consumer
              * 'C2G' - Consumer-to-Government
        BranchIdent:
          maxLength: 22
          type: string
          description: Branch identification number.
        TellerIdent:
          maxLength: 80
          type: string
          description: Teller identification number.
        TillIdent:
          maxLength: 80
          type: string
          description: Till identification number.
        AMPMCode:
          type: string
          description: 'Transaction posting code. '
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          description: Type of re-entry.
          enum:
          - Manual
          - Auto
        AdditionalSettings:
          type: object
          additionalProperties: true
          description: Contains additional information required to successfully process the transaction. Required By Cleartouch
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: Flag to indicate if the exceptions should be auto-acknowledged by the system. If this value is set to True, then any exception that can be overridden will be automatically acknowledged by the system and exceptions that cannot be overridden will be returned in the Status aggregate of the response message.
      description: Details of the exceptions that can be manually acknowledged by the client.
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
          description: Status identification number.
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              -  Cleartouch
              -  DNA
              -  Precision
              -  Premier
              -  Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server status code of the service provider's application.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag to indicate whether the exception can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Authorization level required to override, such as Teller and Supervisor.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Response status in HTML format. This parameter returns only in some cases.
        AdditionalStatus:
          type: array
          description: Details of the additional status of the response message. This aggregate can appear once for each additional status that the server is expected to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
      description: Details of the API response messages.
    SeverityType:
      title: SeverityType
      type: string
      description: Severity type of the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section for more information.
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path of the element (in XPath absolute notation format) where the error occurred.  If the error occurred at the top-level element, then name of the element is returned in the response.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the field in their schema, such as an XPath, field ID, or field name that is associated with the ServerStatusCode. If this element is set, it must be returned in the ServerPath element of the OvrdExceptionData aggregate if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Human readable information of the EFX data value of the element to be overridden. This value should not be provided for the fields that cannot be represented as a string, for example, binary data.
      description: Information about the subject element
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: EFX Standard Status code that indicates the result of API response. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> section to view the list of all possible status codes.
        StatusDesc:
          maxLength: 255
          type: string
          description: Brief information about the EFX status code. Refer to the <a href="../docs?path=docs/response-codes.md">Response Codes</a> for more information.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: |-
            Name of a service provider. Possible values are:
              - Cleartouch
              - DNA
              - Precision
              - Premier
              - Signature
        ServerStatusCode:
          maxLength: 20
          type: string
          description: 'Server status code of the service provider''s application.  '
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Description of the server status code of the service provider's application.
        OvrdExceptionInd:
          type: boolean
          description: Flag that indicates whether the exception can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Information about the elements that caused the status.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_AcctKeys_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\n\n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes.\n\n\n\n"
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\n\n\nPlease note that presently only USD currency code is supported.\n\n\n\n**Note:** Valid value: USD\n\nIf another currency is sent, then the service provider interprets it as USD. Therefore, foreign currency amounts should be excluded from the request."
      description: Details of currency code.
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        SubAcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of a sub-account record.

            **Note:** When it is a General Ledger account, some service provider may send the cost center number.

            Default value is cost center number.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md"  title="Click to open"> Glossary</a>.

            **Note:** For account types other than GLA, DDA and SDA, Signature returns "700 error - Unsupported function" .
          enum:
          - GLA
          - DDA
          - SDA
        CurCode:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_AcctKeys_CurCode'
        FIIdentType:
          type: string
          description: Identification type of a financial institution.
          enum:
          - ABA
        FIIdent:
          maxLength: 34
          type: string
          description: |-
            Unique identification number of a financial institution.

            **Note:** Required field when it is a single customer.
      description: Unique information to identify the account record.
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_ContraAccount:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number of an account record.

            **Note:** Refers to the account number that offset the account number being affected in this notification.

            It is expected that the Signature populates this field for all notifications.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md"  title="Click to open"> Glossary</a>.

            **Note:** Refers to the account number that offset the account number being affected in this notification.

            It is expected that the Signature populates this field for all notifications.

            For account types other than GLA, DDA and SDA, Signature returns "700 error - Unsupported function" .
          enum:
          - GLA
          - DDA
          - SDA
      description: "Details of the contra account.\n\n**Note:** If the account typee is a General Ledger (G/L) and the contra account type is not a G/L, then Signature validates whether a notification exists for that contra account. \n\nIf the notification is not found, then Signature considers this G/L transaction as an unmatched G/L transaction. Any reconciliation issues are handled on the core. It is the sender's responsibility to ensure balance transactions.\n\nIf the notification is for the fee against a customer's account, then Signature validates if the contra account for the principal exists in the request. If the notification is not found, then Signature returns a 700 error - Unsupported function, when it is a book transaction. However, if it is a single customer notification bundle, then Signature assumes a principal debit with a zero principal amount.\n\n"
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_CurAmt:
      type: object
      properties:
        Amt:
          type: number
          description: |-
            Amount in decimal format.

            **Note:** Refers to the amount to be credited or debited on the account.
        CurCode:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_AcctKeys_CurCode'
      description: Details of the currency amount that contains a monetary value of the transaction.
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_NtfctnCurAmt:
      required:
      - CurAmt
      properties:
        CurAmt:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_CurAmt'
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_NtfctnData:
      required:
      - AcctKeys
      - DrCrType
      - NtfctnCurAmt
      properties:
        PmtNtfctnId:
          maxLength: 36
          type: string
          description: |-
            Unique identification number to identify the payment notification.

            Format: <Eight-digit sequence number>YYYYMMDD
        DomainCode:
          type: string
          description: |-
            Code to indicate the domain or payment direction.

            **Note:** When the notification is a fee, the value 'ECHG' must populate in both the notifications for the customer's account and the notification for the corresponding G/L offset.



            ESF sends unmatched ECHG notifications to Signature unless it is a customer fee with no associated customer account because Signature's message does not support it.
          enum:
          - ECRO
          - ECRI
          - ECHG
          - ECRA
        FamilyCode:
          type: string
          description: Code to indicate the type of clearing.
          enum:
          - INTR
          - AFDW
          - NOSC
          - RTPC
        SubFamilyCode:
          type: string
          description: Code to indicate the type of notification.
          enum:
          - RTRC
          - BOOK
          - CANM
          - RVRS
          - RJTC
        AcctKeys:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_AcctKeys'
        ContraAccount:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_ContraAccount'
        DrCrType:
          type: string
          description: |-
            Type of notification entry.

            **Note:** This field indicates whether the notification will debit or credit the account with the amount provided.



            Following are the rules for DrCrType for the integration between the Signature and ESF:

            - For forward flows (new transaction) when NtfctnType is BOOK and for return scenarios when NtfctnType is RTRC or RVRS or RJTC then, fees against the customer’s account are always debited

            - For reversal flows when NtfctnType is CANM with ReversalInd as 'true' or for adjustment flows when NtfctnType is CANM with ReversalInd as 'false', then fees against the customer’s account are always credited

            - Signature doesn't support the integration of debit and credit fees in the same notification bundles



            Limitations:

            - Signature does not have an indicator in the API/Core corresponding to the DrCrType for the customer’s account fee

            - A logic for detecting inconsistencies in the above rules does not belong in ESF because it is a middleware and a passthrough. As a result, ESF does not include business logic to validate the DrCrType value in each notification received in the request. ESF will assume that the DrCrType rules (as stated above under Rules for DrCrType for the integration between the Signature and ESF) are followed in the incoming request from the service provider
          enum:
          - Debit
          - Credit
        FeeType:
          type: string
          description: "Type of a fee.\n\n**Note:** This field should be populated with the same value for both the customer notification and the corresponding G/L offset of that notification. \n\nDepending on the service provider, values can differ as per financial institution. Service providers should configure these values at the time of implementation. \n\n\n\nSignature supports fee type from 1 to 5. ESF passes the fee type value to Signature as received from the service provider. Signature only supports what the service provider refers as HARD fees.\n\n\n\nIf value other than 1 to 5 or null is sent, then Signature ignores these notifications. It is the client application's responsibility to send a value from the given range.\n\n\n\nESF sends the fee to Signature even if the service provider sends a different fee value. However, currently Signature Communicator drops the fee if the value is not from the given range. Therefore the fee is not posted to the customer's account. \n\nIf such condition occurs, it becomes a reconciliation issue and should be part of the Signature process. It is highly recommended that the service provider validates that only fees from 1 to 5 are passed to ESF to avoid any loss of data and reconciliation issues.\n\n\n\nIf the request contains multiple FeeType with the same FeeType against the same customer's account, then ESF sends the duplicate fee types to Signature Communicator. On other hand Signature Communicator only sends the first instance of the duplicate FeeType to the Signature core. The client application should ensure that only one notification pair (customer (debit/credit) - G/L (debit/credit)) of the same FeeType is present in the request for the same customer's account."
        TrnCode:
          type: string
          description: |-
            Transaction code to post the transaction.

            **Note:** Signature uses the transaction code for the notification that contains the principal amount. It is applicable when it is a single customer notification bundle.

            This field is not applicable when all account types are G/L or when it is an On-US transaction. It is only applicable to one sided credit or debit transactions.
        NtfctnCurAmt:
          type: array
          description: Details of the composite currency amount.
          items:
            $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_NtfctnCurAmt'
        Desc:
          maxLength: 200
          type: array
          description: "Description of the transaction.\n\n**Note:** Refers to the Reg-E description for the transaction. \n\nMax length: 80 characters\n\nESF does not truncate. Signature will drop any additional characters."
          items: {}
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_PostAddress_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: |-
            Standard format of country code.

            Refer to the <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2" target="_blank" title="Click to open in a new tab">ISO 3166 Alpha-2 codes </a> to view the list of all country codes.
          enum:
          - ISO3166-Alpha-2
        CountryCodeValue:
          type: string
          description: Country code value as per the country code format set in the CountryCodeSource field.
      description: Country code details of the debtor.
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_PostAddress:
      type: object
      properties:
        Addr1:
          maxLength: 70
          type: string
          description: |-
            Address line 1.

            **Note:** Max length: 64 characters

            Signature truncates the extra characters.

            If the client application sends more than 64 characters, then these extra data will be lost.
        Addr2:
          maxLength: 70
          type: string
          description: "Address line 2. \n\nTo enter Addr2, Addr1 field must be provided.\n\n**Note:** Max length: 64 characters\n\nSignature truncates the extra characters.\n\nIf the client application sends more than 64 characters, then these extra data will be lost."
        Addr3:
          maxLength: 70
          type: string
          description: "Address line 3. \n\nTo enter Addr3, Addr2 field must be provided.\n\n**Note:** Max length: 64 characters\n\nSignature truncates the extra characters.\n\nIf the client application sends more than 64 characters, then these extra data will be lost."
        City:
          maxLength: 32
          type: string
          description: Name of the city.
        StateProv:
          type: string
          description: State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.
        PostalCode:
          maxLength: 11
          type: string
          description: Postal code or zip code.
        CountryCode:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_PostAddress_CountryCode'
      description: "Postal address details of a debtor.\n\n**Note:** ESF supports up to six lines of customer addresses. \n\nSignature supports three lines of customer addresses."
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_AcctKeys_CurCode:
      required:
      - CurCodeValue
      type: object
      properties:
        CurCodeType:
          type: string
          description: "Standard ISO currency code format. \n\n\n\nRefer to the <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\" title=\"Click to open in a new tab\">ISO 4217 codes </a> to view the list of all currency codes.\n\n\n\n"
          enum:
          - ISO4217-Alpha
        CurCodeValue:
          type: string
          description: "Currency code value as per the ISO currency code format set in the CurCodeType field.\n\nFor example, currency code for the US Dollar in alpha and numeric formats are:\n\n- USD (in ISO4217-Alpha format) \n\n- 840 (in ISO4217-Numeric format)\n\n\n\nPlease note that presently only USD currency code is supported.\n\n"
      description: Details of currency code.
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md"  title="Click to open"> Glossary</a>.

            **Note:** It is possible that the clearing would not send the account type. In that case this information is not available in the request and not sent to Signature.
          enum:
          - DDA
          - SDA
        CurCode:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_AcctKeys_CurCode'
        FIIdentType:
          type: string
          description: Identification type of a financial institution.
          enum:
          - ABA
        FIIdent:
          maxLength: 34
          type: string
          description: |-
            Unique identification number of a financial institution.

            **Note:** The service provider sends identification when it is a single customer if DebtorData is populated. Signature only supports numeric ABA routing numbers.
      description: Unique information to identify the debtor's account record.
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData:
      type: object
      properties:
        Name:
          maxLength: 140
          type: string
          description: Name of the debtor.
        PostAddress:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_PostAddress'
        AcctKeys:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_AcctKeys'
      description: "Details of a debtor. This field contains the information to be printed on the customer's statement complying with US regulation REG-E for online transfers. This is the counter party details used for the customer's statement, in the case of a credit to the customer's account this is the sender data.\n\n**Note:** If all notifications are for G/L account application types, then the aggregate should not be present in the request. "
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_CreditorData_PostAddress_CountryCode:
      required:
      - CountryCodeValue
      type: object
      properties:
        CountryCodeSource:
          type: string
          description: |-
            Standard format of country code.

            Refer to the <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2" target="_blank" title="Click to open in a new tab">ISO 3166 Alpha-2 codes </a> to view the list of all country codes.
          enum:
          - ISO3166-Alpha-2
        CountryCodeValue:
          type: string
          description: Country code value as per the country code format set in the CountryCodeSource field.
      description: Country code details of the creditor.
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_CreditorData_PostAddress:
      type: object
      properties:
        Addr1:
          maxLength: 70
          type: string
          description: |-
            Address line 1.

            **Note:** Max length: 64 characters

            Signature truncates the extra characters.

            If the client application sends more than 64 characters, then the extra data is lost.
        Addr2:
          maxLength: 70
          type: string
          description: "Address line 2. \n\nTo enter Addr2, Addr1 field must be provided.\n\n**Note:** Max length: 64 characters\n\nSignature truncates the extra characters.\n\nIf the client application sends more than 64 characters, then the extra data is lost."
        Addr3:
          maxLength: 70
          type: string
          description: "Address line 3. \n\nTo enter Addr3, Addr2 field must be provided.\n\n**Note:** Max length: 64 characters\n\nSignature truncates the extra characters.\n\nIf the client application sends more than 64 characters, then the extra data is lost."
        City:
          maxLength: 32
          type: string
          description: Name of the city.
        StateProv:
          type: string
          description: State province name as per <a href="https://en.wikipedia.org/wiki/ISO_3166-2:US" title="Click to open" target="_blank" >ISO 3166-2:US codes</a>.
        PostalCode:
          maxLength: 11
          type: string
          description: Postal code or zip code.
        CountryCode:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_CreditorData_PostAddress_CountryCode'
      description: "Postal address details of a creditor.\n\n**Note:** ESF supports up to six lines of customer addresses. \n\nSignature supports three lines of customer addresses."
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_CreditorData_AcctKeys:
      required:
      - AcctId
      type: object
      properties:
        AcctId:
          maxLength: 36
          type: string
          description: Unique identification number of an account record.
        AcctType:
          type: string
          description: |-
            Type of an account.



            For more information about account types, refer to the Account Types section in <a href="../docs?path=docs/api-glossary.md"  title="Click to open"> Glossary</a>.

            **Note:** It is possible that the clearing would not send the account type. In that case this information is not available in the request and not sent to Signature.
          enum:
          - DDA
          - SDA
        CurCode:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData_AcctKeys_CurCode'
        FIIdentType:
          type: string
          description: Identification type of a financial institution.
          enum:
          - ABA
        FIIdent:
          maxLength: 34
          type: string
          description: |-
            Unique identification number of a financial institution.

            **Note:** The service provider sends identification when it is a single customer if DebtorData is populated. Signature only supports numeric ABA routing numbers.
      description: Unique information to identify the account record.
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_CreditorData:
      type: object
      properties:
        Name:
          maxLength: 140
          type: string
          description: |-
            Name of the creditor.

            **Note:** Max length: 80 characters

            Signature truncates the extra characters.

            If the client application sends more than 64 characters, then the extra data is lost.
        PostAddress:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_CreditorData_PostAddress'
        AcctKeys:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_CreditorData_AcctKeys'
      description: "Details of a creditor. This field contains the information to be printed on the customer's statement complying with US regulation REG-E for online transfers. This is the counter party details used for the customer's statement, in the case of a debit to the customer's account this is the recipient of the funds.\n\n**Note:** If all notifications are for G/L account application types, then the aggregate should not be present in the request. "
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_Reference:
      type: object
      properties:
        InstructionId:
          maxLength: 35
          type: string
          description: "Identifier to identify the instruction. This field is for sender's reference and the system generates this to send it to Dovetail. Corresponding to Fed tag 3320. Tag 20 for SWIFT. \n\n**Note:** Max length: 16 characters to fulfill MT940 and MT950"
        EndToEndId:
          maxLength: 35
          type: string
          description: "Identifier to identify the reference payment notification from end to end.\n\nIt comes from the initiating party and follows the payment all the way through its life cycle. Related information field coming from the fed for a fed payment. Fedwire tag 4320 Fedwire info. Can only be 16 for Fed payment but anything generated through ISO can be 35. Tag 70 for SWIFT, if it has code word RFB, then it is mapped to the field otherwise it will be in the remittance information. \n\n**Note:** Max length: 16 characters to fulfill MT940 and MT950"
      description: "Details of the SWIFT reference data.\n\n**Note:** If all notifications are for G/L account application types, then the aggregate should not be present in the request. "
    PmtNtfctnAddOperRequest_PmtNtfctnInfo_NetworkRefData:
      type: object
      properties:
        TrnIdent:
          maxLength: 36
          type: string
          description: |-
            Unique identification code used to identify a previously posted transaction.

            **Note:** This is the transaction identifier (also known as message ID) of the original transaction.



            For Signature, when the transaction is either a reversal, it is expected to be populated otherwise the transaction will fail. For cancellation (CANM) or a refund, Signature does not match the value.
        ClientDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: |-
            Date and time of the reference transaction as reported by the client.

            **Note:** Refers to the client date (Client/ClientDt) of the original transaction.



            For Signature, when the transaction is either a reversal, it is expected to be populated otherwise the transaction will fail. For cancellation (CANM) or a refund, Signature does not match the value.
      description: "Details of the network reference data to uniquely identify a previously posted transaction\n\n**Note:** If all notifications are for G/L account application types, then the aggregate should not be present in the request. \n\n\n\nApplicable when it is a return or reversal transaction."
    PmtNtfctnAddOperRequest_PmtNtfctnInfo:
      required:
      - NtfctnData
      type: object
      properties:
        PaymentDirection:
          type: string
          description: |-
            Direction of a payment that indicates whether the payment is incoming or outgoing.

            **Note:** The combination of this field with the SubFamilyCode field is used to determine if a payment is a refund or a return. It is applicable only when the SubFamilyCode field has the value as 'RTRC'.
          enum:
          - ECRO
          - ECRI
        PayType:
          type: string
          description: "Type of a clearing from which the payment is originated.\n\n**Note:** *Required field*\n\n\n\nValues other than the EFX allowed values are considered as a passthrough value and are configurable.\n\nThe EFX allowed values are the standard values for EPP and the following are the additional details:\n\n- When it is an on-us transaction or G/L to G/L only notifications are presents in the request, then the value of INTR is expected. No other PayType is considered by ESF to have accounts from the different customers (from account and to account customer account for principal account)\n\n\n\n- Based on the integration requirements, the only time when two customer's accounts will be in the request (on-us or book transaction) is when PayType is INTR. ESF uses that information for internal workflow and mapping to Signature. ESF considers all other PayType to contain only one customer's account"
          enum:
          - INTR
          - AFDW
          - NOSC
          - RTPC
        NtfctnType:
          type: string
          description: "Type of transaction notification that indicates if the nature of transaction, such as new, return, cancellation and rejection.\n\n**Note:** The following are the values:\n\n- RTRC: Signifies that it is a return. Based on the payment direction and service provider expectations, it can translate into either a refund or a return\n\n- RVRS, RJTC: Signifies that it is a return or refund. Based on payment direction and core support availablity, additional fees are considered as return or refund. Additional fees may be assessed to the customer's account \n\n- BOOK: Signifies that it is a new transaction. Applicable for G/L to G/L transaction only\n\n- CANM: Signifies that the transaction was canceled and therefore the fees is refunded to the customer. In other words, the debit/credit type for the customer account fee notification will be a credit. The amounts in each notification must be identical to the original notification bundle\n\n\n\nSignature adjustment transactions do not support debiting fees to the customers' account. All notification types such as RTRC, RVRS, RJTC are treated as new transaction. CANM is treated as an adjustment if the reversal indicator is set to false since the fees are credited back to the customer's account."
          enum:
          - RTRC
          - BOOK
          - CANM
          - RVRS
          - RJTC
        TxnStat:
          type: string
          description: Value to indicate the transaction is a hard post against the account (Book).
          enum:
          - BOOK
        NtfctnData:
          type: array
          description: "Details of the transaction notification.\n\n**Note:** Signature supports up to 12 occurrences of G/L to G/L notifications where the contra account and the account id of the notification are both G/L to G/L. \n\n\n\nIf more than 12 occurrences of G/L to G/L notifications are in the request, then Signature communicator ignores the remainder of the G/L to G/L notification and the request is not processed. It is the client application's responsibility to set the proper limit.\n\n\n\nSignature supports up to five fees. If notifications for more than five fees exist in the request, then the API sends the notification but they are ignored since schema validation is disabled. It is the client application's responsibility to ensure that a maximum of five fees are sent for each customer account.\n\n\n\nIf the API receives a notification for a fee against the customer's account and G/L account that does not have a matching credit or debit for the principal for the same account number, then the request is failed and the API returns a 700 error code for an unsupported value.\n\n\n\nAs the Signature integration supports debits and fees against the same account of the principal amount, it is the client application's responsibility to ensure that the request is valid in both cases."
          items:
            $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_NtfctnData'
        DebtorData:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_DebtorData'
        CreditorData:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_CreditorData'
        Reference:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_Reference'
        NetworkRefData:
          $ref: '#/components/schemas/PmtNtfctnAddOperRequest_PmtNtfctnInfo_NetworkRefData'
        ReversalInd:
          type: boolean
          description: "Flag to indicate that the notification bundle will be considered as a reversal.\n\n**Note:** If all notifications are for G/L account application types, then the value sent should be false.\n\n\n\nThe value is expected to be set to true when it is a same day reversal. For the service provider when it is a reversal, they consider the transaction as an auto-correct or as if it never happened. Therefore, it is expected that the amount would be identical as the original transactions but in the opposite direction, that is, if in the original transaction, a notification is a debit when reversal indicator is true, the same notification will not be a credit. It is expected that all fees will be a credit. "
        NtfctnReasonCode:
          type: string
          description: "Code to indicate the notification reason.\n\n**Note:** If all notifications are for G/L account application types, then any value should not be present in the request. \n\n\n\nIt would only be present when it is a reversal workflow (ReversalInd is set to 'true') or when it is a refund/return notification bundle (PmtNtfctnInfo/NtfctnType is either: RTRC, CANM, RVRS, or RJTC and ReversalInd is set to 'false').\n\n\n\nMax length: 4 digits\n\nAlphanumeric values are accepted. "
        NtfctnReasonDesc:
          maxLength: 200
          type: string
          description: |-
            Description of the notification reason.

            **Note:** If all notifications are for G/L account application types, then any value should not be present in the request.



            It should only be present in case of a reversal workflow (ReversalInd is set to 'true') or when it is a refund/return notification bundle (PmtNtfctnInfo/NtfctnType is either: RTRC, CANM, RVRS, or RJTC and ReversalInd is set to 'false').
      description: Information about the payment notification.
    PmtNtfctnAddOperResponse_PmtNtfctnStatusRec_PmtNtfctnStatus:
      required:
      - PmtNtfctnStatusCode
      type: object
      properties:
        PmtNtfctnStatusCode:
          type: string
          description: |-
            Code to indicate the status of the payment notification.

            **Note:** If the reversal indicator is set to true, then this API returns the value "Reversed" else it returns the value "posted".
          enum:
          - Posted
          - Reversed
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: "Effective date and time when the payment notification status is changed. \n\nFormat: yyyy-MM-ddTHH:mm:ss.SSS\n\nExample: 2021-01-31T23:59:59.999"
      description: Current status details of the payment notification.
    PmtNtfctnAddOperResponse_PmtNtfctnStatusRec:
      required:
      - PmtNtfctnStatus
      type: object
      properties:
        PmtNtfctnStatus:
          $ref: '#/components/schemas/PmtNtfctnAddOperResponse_PmtNtfctnStatusRec_PmtNtfctnStatus'
      description: Details of the payment notification record in response to add operation.
