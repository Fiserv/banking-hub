openapi: 3.0.0
info:
  title: DocumentService
  description: The DocumentService contains operations related to Document Image Management.
  contact:
    name: Tracy Dahle
    email: Tracy.Dahle@fiserv.com
  version: 11.0.0
servers:
- url: /
tags:
- name: Document Service
  description: The DocumentService contains operations related to Document Image Management.
paths:
  /document:
    get:
      tags:
      - document
      summary: /document/ - GET
      operationId: DocumentInqOper
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      - name: $limit
        in: query
        description: Maximum Record Limit. This is the maximum number of records that
          the server should add to the result set which is available to satisfy this
          request.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: documentId
        in: query
        description: This field is required if the document is being retrieved on
          the basis of document identifier. ESF DocumentListInq can be used to fetch
          the documentId (for the DocumentType).
        required: true
        style: form
        explode: true
        schema:
          maxLength: 36
          type: string
      - name: docSelType
        in: query
        description: Document Selection Type. Document can be searched by document
          Identifier, Type, Group or Query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - DocTypeId
          - DocTypeName
          - DocGroupId
          - DocGroupName
          - QueryId
          - QueryName
      - name: docSelValue
        in: query
        description: Document Selection Value.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: startDt
        in: query
        description: Start Date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: endDt
        in: query
        description: End Date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: useXferKeywordInd
        in: query
        description: Use Xfer Keyword Indicator. Use middleware transalation for keywords
          provided in the selection.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: keyword
        in: query
        description: |
          Case-sensitive keyword that the document would contain. For eg. Account Number, Check Number, etc.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: keywordValue
        in: query
        description: Keyword Value.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: operand
        in: query
        description: Operand.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - EQ
          - NOTEQ
          - GT
          - GTEQ
          - LT
          - TEQ
      - name: andorOr
        in: query
        description: And or Or. Connector used for multiple Keywords.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - AND
          - OR
      - name: docPropertyType
        in: query
        description: Document Property Type. Specifies the type of document property.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ID
          - Name
          - Date
          - Class
          - Type
      - name: incDocPropertyInd
        in: query
        description: |
          Include Document Property Indicator. A true value indicates that the property must be provided in the response.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: keywordsRequested
        in: query
        description: |
          Case-sensitive keyword that the document would contain. For eg. Account Number, Check Number, etc.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: pageFormat
        in: query
        description: Page Format.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - TXT
          - PDF
          - DOC
          - TIFF
          - JPG
          - BMP
          - PNG
          - DIB
          - GIF
          - Default
      - name: startPageNum
        in: query
        description: |
          "Start Page Number. It is the starting page for the page range being requested. Any value less than 1 will default to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: endPageNum
        in: query
        description: |
          "End Page Number. It is the Ending page for the page range being requested. In case a value larger than the document’s last page is provided in the request, then Director would default the value to the last page of the document."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: pageNum
        in: query
        description: |
          "Page Number. It contains the Page Number to be fetched within the document. All Pages can be requested by passing a '*'"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: incAllPagesInd
        in: query
        description: |
          "Include All Pages. If true, then it is used to request multiple pages in a single document link in the response (works as a wildcard '*' for PageNum field)."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: metaDataValue
        in: query
        description: |
          "Value. Contains a descriptor of other data requested. The provider Director offers the following options: Fields, Indices, Views, SearchFields, PageTotal, URL, etc.
          Specifies the document MetaData to be returned.  If you require the searchable keyword types for a document, set the value to 'Fields'. If you require the totalnumber of pages for the document and the document size in bytes, set the value to 'PageTotal'."
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: incMetaDataValueInd
        in: query
        description: |
          "Include Value Indicator. "If true, the response will include the types of metadata specified in the Value field i.e. Fields and/or PageTotal.
          For 'PageTotal', it returns the total number of pages for the document in the response and also the document size in bytes. For 'Fields', it returns the searchable keyword types for the document in the response (true = 1, false = 0)"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentInqRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentInqRsType'
      deprecated: false
    put:
      tags:
      - document
      summary: /document - PUT
      operationId: updateDocument
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentModRqType'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentModRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentModRsType'
      deprecated: false
    post:
      tags:
      - document
      summary: /document - POST
      operationId: createDocument
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentAddRqType'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAddRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAddRsType'
      deprecated: false
  /document/{documentId}:
    get:
      tags:
      - documentByDocumentId
      summary: /document/{documentId} - GET
      operationId: DocumentInqOperByPath
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      - name: documentId
        in: path
        description: This field is required if the document is being retrieved on
          the basis of document identifier. ESF DocumentListInq can be used to fetch
          the documentId (for the DocumentType).
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 36
          type: string
      - name: $limit
        in: query
        description: Maximum Record Limit. This is the maximum number of records that
          the server should add to the result set which is available to satisfy this
          request.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: docSelType
        in: query
        description: Document Selection Type. Document can be searched by document
          Identifier, Type, Group or Query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - DocTypeId
          - DocTypeName
          - DocGroupId
          - DocGroupName
          - QueryId
          - QueryName
      - name: docSelValue
        in: query
        description: Document Selection Value.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: startDt
        in: query
        description: Start Date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: endDt
        in: query
        description: End Date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: useXferKeywordInd
        in: query
        description: Use Xfer Keyword Indicator. Use middleware transalation for keywords
          provided in the selection.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: keyword
        in: query
        description: |
          Case-sensitive keyword that the document would contain. For eg. Account Number, Check Number, etc.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: keywordValue
        in: query
        description: Keyword Value.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: operand
        in: query
        description: Operand.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - EQ
          - NOTEQ
          - GT
          - GTEQ
          - LT
          - TEQ
      - name: andorOr
        in: query
        description: And or Or. Connector used for multiple Keywords.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - AND
          - OR
      - name: docPropertyType
        in: query
        description: Document Property Type. Specifies the type of document property.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ID
          - Name
          - Date
          - Class
          - Type
      - name: incDocPropertyInd
        in: query
        description: |
          Include Document Property Indicator. A true value indicates that the property must be provided in the response.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: keywordsRequested
        in: query
        description: |
          Case-sensitive keyword that the document would contain. For eg. Account Number, Check Number, etc.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: pageFormat
        in: query
        description: Page Format.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - TXT
          - PDF
          - DOC
          - TIFF
          - JPG
          - BMP
          - PNG
          - DIB
          - GIF
          - Default
      - name: startPageNum
        in: query
        description: |
          "Start Page Number. It is the starting page for the page range being requested. Any value less than 1 will default to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: endPageNum
        in: query
        description: |
          "End Page Number. It is the Ending page for the page range being requested. In case a value larger than the document’s last page is provided in the request, then Director would default the value to the last page of the document."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: pageNum
        in: query
        description: |
          "Page Number. It contains the Page Number to be fetched within the document. All Pages can be requested by passing a '*'"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: incAllPagesInd
        in: query
        description: |
          "Include All Pages. If true, then it is used to request multiple pages in a single document link in the response (works as a wildcard '*' for PageNum field)."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: metaDataValue
        in: query
        description: |
          "Value. Contains a descriptor of other data requested. The provider Director offers the following options: Fields, Indices, Views, SearchFields, PageTotal, URL, etc.
          Specifies the document MetaData to be returned.  If you require the searchable keyword types for a document, set the value to 'Fields'. If you require the totalnumber of pages for the document and the document size in bytes, set the value to 'PageTotal'."
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: incMetaDataValueInd
        in: query
        description: |
          "Include Value Indicator. "If true, the response will include the types of metadata specified in the Value field i.e. Fields and/or PageTotal.
          For 'PageTotal', it returns the total number of pages for the document in the response and also the document size in bytes. For 'Fields', it returns the searchable keyword types for the document in the response (true = 1, false = 0)"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentInqRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentInqRsType'
      deprecated: false
    delete:
      tags:
      - documentByDocumentId
      summary: /document/{documentId} - DELETE
      operationId: deleteDocument
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      - name: documentId
        in: path
        description: This field is required if the document is being retrieved on
          the basis of document identifier. ESF DocumentListInq can be used to fetch
          the documentId (for the DocumentType).
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 36
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDelRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDelRsType'
      deprecated: false
  /document/list:
    get:
      tags:
      - documentList
      summary: /document - GET
      description: This Service contains operations related to Document Management.
        Operations and messages supported in the Document Service are listed on the
        Team tab. These operations are supported by EFX objects as detailed below.
      operationId: DocumentListInqOper
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      - name: $limit
        in: query
        description: Maximum Record Limit. This is the maximum number of records that
          the server should add to the result set which is available to satisfy this
          request.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: docSelType
        in: query
        description: Document Selection Type. Document can be searched by document
          Identifier, Type, Group or Query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - DocTypeId
          - DocTypeName
          - DocGroupId
          - DocGroupName
          - QueryId
          - QueryName
      - name: docSelValue
        in: query
        description: Document Selection Value.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: startDt
        in: query
        description: Start Date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: endDt
        in: query
        description: End Date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: keyword
        in: query
        description: Case-sensitive keyword that the document would contain. For eg.
          Account Number, Check Number, etc.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: keywordValue
        in: query
        description: Keyword Value.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: operand
        in: query
        description: Operand.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - EQ
          - NOTEQ
          - GT
          - GTEQ
          - LT
          - TEQ
      - name: andorOr
        in: query
        description: And or Or. Connector used for multiple Keywords.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - AND
          - OR
      - name: docPropertyType
        in: query
        description: Document Property Type. Specifies the type of document property.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ID
          - Name
          - Date
          - Class
          - Type
      - name: incDocPropertyInd
        in: query
        description: Include Document Property Indicator. A true value indicates that
          the property must be provided in the response.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListInqRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListInqRsType'
      deprecated: false
  /document/secured:
    put:
      tags:
      - documentSecured
      summary: /document - DEL
      operationId: deleteDocumentSecured
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDelRqType'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDelRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDelRsType'
      deprecated: false
    post:
      tags:
      - documentSecured
      summary: /document/ - GET
      operationId: DocumentInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentInqRqType'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentInqRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentInqRsType'
      deprecated: false
  /document/list/secured:
    post:
      tags:
      - documentList
      summary: /document - GET
      operationId: DocumentListInqOperSecured
      parameters:
      - name: EFXHeader
        in: header
        description: |
          The message header request aggregate contains common information for all request messages
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EFXHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentListInqRqType'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListInqRsType'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListInqRsType'
      deprecated: false
components:
  schemas:
    EFXHeader:
      required:
      - OrganizationId
      type: string
      properties:
        OrganizationId:
          type: string
        TrnId:
          maxLength: 30
          type: string
        Context:
          $ref: '#/components/schemas/Context'
    Context:
      type: object
      properties:
        ClientAppName:
          maxLength: 40
          type: string
          description: Client Application Name of the application making the service
            request (e.g. Architect, Commercial Center, etc.).
        Channel:
          type: string
          description: Indicates the channel used by the client application.
        ClientDateTime:
          type: string
          description: Client date and time as reported by the client application
            that is making the service request.
          format: date-time
        ClientTerminalSeqNum:
          maxLength: 36
          type: string
          description: Also known as Trace Number or Sequence in some systems. Used
            to allow the client terminal to set a unique identifier for the transaction.
            When used by a Network defined transaction the value of this identifier
            is typically set to narrow character of 12.
        OriginatorType:
          type: integer
          description: "\"The type of organization that the originator represents.\
            \ This is usually a coded value representing the industry that the organization\
            \ operates in. It contains the SIC code. For ISO 8583 (DE18) the element\
            \ is restricted to narrow character of maximum length of 4.\nOriginator\
            \ Type codes that apply to financialinstitutions are:\n  6010 - Financial\
            \ institution—bank, savings and loan (S and L), or credit union  \n  6011\
            \ - Financial institution—ATM \n  6012 - Financial institution—merchandise\
            \ sale \n  6999 - Financial\ninstitution—home banking\"\n"
          format: int64
        TerminalIdent:
          maxLength: 36
          type: string
          description: Unique code identifying a terminal at the card acceptor locatio
            (such as terminal code or terminal number of ATM). See For ISO 8583 (DE41)
            the element is restricted to a narrow character with maximum length of
            8.
        TerminalAddr1:
          maxLength: 64
          type: string
        TerminalAddr2:
          maxLength: 64
          type: string
        TerminalAddr3:
          maxLength: 64
          type: string
        TerminalAddr4:
          maxLength: 64
          type: string
        TerminalCity:
          maxLength: 32
          type: string
        TerminalCounty:
          maxLength: 32
          type: string
        TerminalStateProv:
          maxLength: 32
          type: string
          description: State Province. ISO 3166-2:US codes.
        TerminalPostalCode:
          maxLength: 11
          type: string
          description: Postal Code is ZipCode in the US.
        TerminalCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        TerminalCountryCodeValue:
          maxLength: 80
          type: string
        PhoneType:
          type: string
        PhoneNum:
          type: string
        PhoneExchange:
          type: string
        TerminalOwnerName:
          maxLength: 40
          type: string
          description: Name of the owner or operator of the terminal.  For ISO 8583
            (DE43) the element is restricted to C-15.
        SystTraceAuditNum:
          maxLength: 36
          type: string
          description: Number assigned by the transaction originator to assist in
            identifying a transaction uniquely. The trace number remains unchanged
            for all messages throughout the life of a transaction. This number is
            not a terminal receipt number. The originating processor increments the
            trace number by one for each transaction sent to the switch. For ISO 8583
            (DE11) the element is restricted to NC-6
        NetworkIdent:
          maxLength: 80
          type: string
          description: Identifies the interchange network for the transaction. The
            transaction is applied to the specified network settlement counts and
            balances. For ISO 8583 (DE62) the element is restricted to NC-6
        NetworkRefIdent:
          maxLength: 36
          type: string
          description: Document reference supplied by the system retaining the original
            source document and used to assist in locating that document. The acquirer
            of a transaction assigns this number. The issuer processor must retain
            it in the event that a chargeback is submitted for the transaction. For
            ISO 8583 (DE37) the element is restricted to C-12
        AcquirerIdent:
          maxLength: 36
          type: string
          description: Identifies the acquirer of the authorization or financial transaction.
            It is a mandatory element in all authorization and financial messages
            and does not change throughout the life of a transaction. EPOC considers
            the acquirer as the terminal owner for reporting purposes. For ISO 8583
            (DE32) the element is restricted to C-12
        AcquirerCountryCodeSource:
          type: string
          description: Country code source.ISO3166-Numeric, ISO3166-Alpha-3
          enum:
          - US
          - IND
        AcquirerCountryCodeValue:
          type: string
        MerchNum:
          maxLength: 23
          type: string
          description: Merchant Number. For ISO 8583 (DE42) the element is restricted
            to C-15
        SettlementDate:
          type: string
          description: This is the date on which the transaction will be settled.
            Used by ISO 8583 (DE63)
          format: date
        SettlementIdent:
          maxLength: 36
          type: string
          description: This is the identification of the settlement account in which
            the transaction will be settled.
        BusinessApplIdent:
          type: string
          description: This is the identification of the settlement account in which
            the transaction will be settled.
        BranchIdent:
          maxLength: 22
          type: string
        TellerIdent:
          type: string
        TillIdent:
          type: string
        AMPMCode:
          type: string
          enum:
          - AM
          - PM
        ReentryType:
          type: string
          enum:
          - Manual
          - Auto
    BinaryType:
      title: BinaryType
      required:
      - BinData
      type: object
      properties:
        ContentType:
          type: string
          description: Content Type.
        BinLength:
          type: integer
          description: Binary Length.
          format: int64
        BinData:
          type: string
          description: Binary Data.
          format: binary
    AndorOrType:
      title: AndorOrType
      type: string
      enum:
      - AND
      - OR
      - None
    DocumentStatusCodeType:
      title: DocumentStatusCodeType
      type: string
      enum:
      - Valid
      - Deleted
    SeverityType:
      title: SeverityType
      type: string
      enum:
      - Error
      - Warning
      - Info
    SubjectElementType:
      title: SubjectElementType
      type: object
      properties:
        Path:
          type: string
          description: Path indicates which EFX element is in error. It provides either
            the path of the element, or just the element name. If it provides the
            path, it must use XPath absolute notation with the starting node being
            the node of the message, and ending with the name of the element in error.
        ServerPath:
          maxLength: 256
          type: string
          description: Server Path is the Service Provider’s identification of the
            field in their schema, such as an XPath, field ID, or field name that
            is associated with the ServerStatusCode. If this element is set, it must
            be returned in the ServerPath element of the OvrdExceptionData aggregate
            if the exception is being overridden.
        Value:
          maxLength: 256
          type: string
          description: Value string representation of the EFX data value of the element
            in error. This field is intended to provide a human readable visual hint
            as to the value in error. It should not be provided for fields that cannot
            be represented as a string (i.e., binary data).
    AdditionalStatusType:
      title: AdditionalStatusType
      type: object
      properties:
        StatusCode:
          maxLength: 20
          type: string
          description: Status Code is used to indicate the EFX Standard Status Codes
            that tells the consumer of the service the result of the operation.
        StatusDesc:
          maxLength: 255
          type: string
          description: Status Description is the explanatory EFX standard text associated
            with the EFX StatusCode.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: Service Provider Name is a globally unique identifier for a
            service provider which indicates the location of the Service Provider
            that gave the error.
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server Status Code is used to indicate the Service Provider’s
            application status code that tells the consumer the result of the operation
            call.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Server Status Description is the Service Provider’s explanatory
            text associated with the ServerStatusCode.
        OvrdExceptionInd:
          type: boolean
          description: Override Exception Indicator indicates whether the exception
            can be overridden by resubmitting the request message.
        SubjectElement:
          type: array
          description: Subject Element aggregate provides information about which
            elements caused the status. The aggregate is repeating to allow for a
            relationship between one or more elements if the combination causes the
            status code.
          items:
            $ref: '#/components/schemas/SubjectElementType'
    BaseKeysType:
      title: BaseKeysType
      type: string
    DocPropertiesType:
      title: DocPropertiesType
      required:
      - IncDocPropertyInd
      type: object
      properties:
        DocPropertyType:
          maxLength: 80
          type: string
          description: Document Property Type. Specifies the type of document property.
        IncDocPropertyInd:
          type: boolean
          description: Include Document Property Indicator. A true value indicates
            that the property must be provided in the response.
      description: '[FSVR]Properties Returned.'
    DocSelCriteriaType:
      title: DocSelCriteriaType
      required:
      - DocSelType
      - DocSelValue
      type: object
      properties:
        DocSelType:
          type: string
          description: Document Selection Type.
        DocSelValue:
          maxLength: 255
          type: string
          description: Document Selection Value.
    OvrdElementType:
      title: OvrdElementType
      allOf:
      - $ref: '#/components/schemas/SubjectElementType'
      - type: object
    OverrideExceptionType:
      title: OverrideExceptionType
      type: object
      properties:
        SubjectRole:
          type: string
          description: Subject Role.
        SubjectIdent:
          maxLength: 36
          type: string
          description: Subject Identifier.
        OvrdExceptionCode:
          maxLength: 40
          type: string
          description: Overrride Exception Code.Identifies an exception code that
            is to be overridden. This would be the ServerStatusCode from the Status
            response.
        OvrdElement:
          $ref: '#/components/schemas/OvrdElementType'
    OvrdExceptionDataType:
      title: OvrdExceptionDataType
      type: object
      properties:
        OverrideException:
          type: array
          description: Override Exception.
          items:
            $ref: '#/components/schemas/OverrideExceptionType'
    KeywordDataType:
      title: KeywordDataType
      type: object
      properties:
        Keyword:
          maxLength: 255
          type: string
          description: Keyword. Refers to the Keyword Name.
        KeywordValue:
          maxLength: 255
          type: string
          description: Keywords Value.
        KeywordId:
          maxLength: 36
          type: string
          description: Keyword Identifier. Specifies the ID on the OnBase Keyword
        KeywordGroup:
          maxLength: 80
          type: string
          description: Keyword Group. If the Keyword is part of a Keyword Group, this
            will be the ID of the OnBase Keyword Type Group that this keyword belongs
            to.  This node will be present if Details are requested, Group=”0” in
            request and the keyword belongs to Keyword Group.
        KeywordGroupName:
          maxLength: 80
          type: string
          description: Keyword Group Name. Specifies the name of the OnBase Keyword
            Type Group that this keyword belongs to.
        KeywordInstance:
          maxLength: 80
          type: string
          description: Keyword Instance. If the KeywordType is part of a Multi-instance
            Keyword Group, this will be the instance ID of that group of keyword.  This
            node will be present if Details are requested, Group=”0” in request and
            the keyword belongs to Keyword Group.
        SearchFlag:
          type: boolean
          description: Search Flag. Indicates if the data can be searched.
      description: '[FSVR]Keyword Data.'
    SearchableKeywordType:
      title: SearchableKeywordType
      type: object
      properties:
        Keyword:
          maxLength: 255
          type: string
          description: Keyword. Refers to the Keyword Name.
        SearchFlag:
          type: boolean
          description: Search Flag. Indicates if the data can be searched.
    DocumentBasicType:
      title: DocumentBasicType
      type: object
      properties:
        DocName:
          maxLength: 255
          type: string
          description: Document Name.
        CreatedDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Created Date.
        RevisionDt:
          type: string
          description: Revision Date.
          format: date
        RevisionId:
          type: integer
          description: Revision Identifier.
          format: int64
        MaxRevisionId:
          type: integer
          description: Maximum Revision Identifier.
          format: int64
        OriginalStoredDt:
          type: string
          description: Document Original Stored Date.
          format: date
        RevisedBy:
          maxLength: 80
          type: string
          description: Revised By.
        DiskGroup:
          type: integer
          description: Disk Group.
          format: int64
        DocGroupType:
          type: integer
          description: Document Group Type.
          format: int64
        DocGroupTypeName:
          maxLength: 255
          type: string
          description: Document Group Type Name.
        DocType:
          type: integer
          description: Document Type.
          format: int64
        DocTypeName:
          maxLength: 255
          type: string
          description: Document Type Name.
        KeywordData:
          type: array
          description: Keywords Data.
          items:
            $ref: '#/components/schemas/KeywordDataType'
        SearchableKeyword:
          type: array
          description: Searchable Keyword. Searchable keyword name of a keyword on
            that document.
          items:
            $ref: '#/components/schemas/SearchableKeywordType'
        BatchNum:
          maxLength: 40
          type: string
          description: Batch Number.
        TotalPageNum:
          type: integer
          description: Total Page Number.
          format: int64
      description: '[FSVR]Document Information.'
    PageValueType:
      title: PageValueType
      allOf:
      - $ref: '#/components/schemas/BinaryType'
      - type: object
    PageDataType:
      title: PageDataType
      type: object
      properties:
        PageNum:
          type: integer
          description: Page Number.
          format: int64
        PageFormat:
          type: string
          description: Page Format.
        PageValue:
          $ref: '#/components/schemas/PageValueType'
      description: '[FSVR]Page.'
    DocumentInfoType:
      title: DocumentInfoType
      allOf:
      - $ref: '#/components/schemas/DocumentBasicType'
      - type: object
        properties:
          PageData:
            type: array
            description: Page Data.
            items:
              $ref: '#/components/schemas/PageDataType'
    DocumentAddRqType:
      title: DocumentAddRqType
      required:
      - DocumentInfo
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: Override AutoAcknowledge Indicator. Used when the midleware
            is in charge of  auto-acknowledgement of exceptions.
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        DocumentInfo:
          $ref: '#/components/schemas/DocumentInfoType'
      description: '[IFXRDocument Add Request. Adds a document object.'
    StatusType:
      title: StatusType
      required:
      - Severity
      - StatusCode
      - StatusDesc
      - SvcProviderName
      type: object
      properties:
        Id:
          type: string
        StatusCode:
          maxLength: 20
          type: string
          description: Status Code is used to indicate the EFX Standard Status Codes
            that tells the consumer of the service the result of the operation.
        StatusDesc:
          maxLength: 255
          type: string
          description: Status Description is the explanatory EFX standard text associated
            with the EFX StatusCode.
        Severity:
          $ref: '#/components/schemas/SeverityType'
        SvcProviderName:
          maxLength: 1024
          type: string
          description: Service Provider Name is a globally unique identifier for a
            service provider which indicates the location of the Service Provider
            that gave the error.
        ServerStatusCode:
          maxLength: 20
          type: string
          description: Server Status Code is used to indicate the Service Provider’s
            application status code that tells the consumer the result of the operation
            call.
        ServerStatusDesc:
          maxLength: 255
          type: string
          description: Server Status Description is the Service Provider’s explanatory
            text associated with the ServerStatusCode.
        OvrdExceptionInd:
          type: boolean
          description: Override Exception Indicator indicates whether the exception
            can be overridden by resubmitting the request message.
        SubjectRole:
          type: string
          description: Subject Role.
        SubjectElement:
          type: array
          description: Subject Element aggregate provides information about which
            elements caused the status. The aggregate is repeating to allow for a
            relationship between one or more elements if the combination causes the
            status code.
          items:
            $ref: '#/components/schemas/SubjectElementType'
        ContentHTML:
          type: string
          description: Content HTML. Use to provide HTML context to some status responses.
            In Premier, upon failure an HTML page is provided to support the maintenance
            of failures reported. The Content HTML may be availalble to a time interval
            which is established by the service provider.
        AdditionalStatus:
          type: array
          description: Additional Status aggregate may appear once for each additional
            status that the server intends to provide.
          items:
            $ref: '#/components/schemas/AdditionalStatusType'
    SvcIdentType:
      title: SvcIdentType
      type: object
      properties:
        SvcProviderName:
          maxLength: 1024
          type: string
          description: Service Provider Name is a globally unique identifier for a
            service provider which indicates the location of the Service Provider
            that gave the error.
        SvcNbr:
          maxLength: 36
          type: string
          description: Service Number.
        SvcName:
          maxLength: 32
          type: string
          description: Service Name.
    DocumentKeysType:
      title: DocumentKeysType
      allOf:
      - $ref: '#/components/schemas/BaseKeysType'
      - required:
        - DocumentId
        type: object
        properties:
          SvcIdent:
            $ref: '#/components/schemas/SvcIdentType'
          DocumentId:
            maxLength: 36
            type: string
            description: Document Identifier.
    DocumentStatusType:
      title: DocumentStatusType
      required:
      - DocumentStatusCode
      type: object
      properties:
        DocumentStatusCode:
          $ref: '#/components/schemas/DocumentStatusCodeType'
        EffDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Effective Date. The date that an associated action takes effect.
    DocumentStatusRecType:
      title: DocumentStatusRecType
      required:
      - DocumentKeys
      - DocumentStatus
      type: object
      properties:
        SvcIdent:
          $ref: '#/components/schemas/SvcIdentType'
        DocumentKeys:
          $ref: '#/components/schemas/DocumentKeysType'
        DocumentStatus:
          $ref: '#/components/schemas/DocumentStatusType'
    DocumentAddRsType:
      title: DocumentAddRsType
      required:
      - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        DocumentStatusRec:
          $ref: '#/components/schemas/DocumentStatusRecType'
    DocumentDelRqType:
      title: DocumentDelRqType
      required:
      - DocumentKeys
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: Override AutoAcknowledge Indicator. Used when the midleware
            is in charge of  auto-acknowledgement of exceptions.
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        DocumentKeys:
          $ref: '#/components/schemas/DocumentKeysType'
    DocumentDelRsType:
      title: DocumentDelRsType
      required:
      - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        DocumentStatusRec:
          $ref: '#/components/schemas/DocumentStatusRecType'
    RecCtrlInType:
      title: RecCtrlInType
      type: object
      properties:
        MaxRecLimit:
          type: integer
          description: Maximum Record Limit. This is the maximum number of records
            that the server should add to the result set which is available to satisfy
            this request.
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: Cursor. Next Record Pointer Included in the response only if
            additional records are available.
    DtRangeType:
      title: DtRangeType
      type: object
      properties:
        DateType:
          type: string
          description: Date Type. Indicates the type of date contained in the Date
            Value.
        StartDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: Start Date.
        EndDt:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\.[0-9]{3})?((-|\+)[0-9]{2}:[0-9]{2})?)?)?'
          type: string
          description: End Date.
    KeywordSelType:
      title: KeywordSelType
      required:
      - Keyword
      - KeywordValue
      - Operand
      type: object
      properties:
        Keyword:
          maxLength: 255
          type: string
          description: Keyword. Refers to the Keyword Name.
        KeywordValue:
          maxLength: 255
          type: string
          description: Keywords Value.
        Operand:
          type: string
          description: Operand.
        AndorOr:
          $ref: '#/components/schemas/AndorOrType'
      description: '[FSVR]Keyword Selection.'
    KeywordsRequestedType:
      title: KeywordsRequestedType
      type: object
      properties:
        Keyword:
          maxLength: 255
          type: string
          description: Keyword. Refers to the Keyword Name.
      description: '[FSVR]Keywords Requested.'
    PageNumRangeType:
      title: PageNumRangeType
      required:
      - StartPageNum
      type: object
      properties:
        StartPageNum:
          type: integer
          description: Start Page Number.
          format: int64
        EndPageNum:
          type: integer
          description: End Page Number.
          format: int64
    MetaDataType:
      title: MetaDataType
      required:
      - Value
      type: object
      properties:
        Value:
          maxLength: 256
          type: string
          description: Value string representation of the EFX data value of the element
            in error. This field is intended to provide a human readable visual hint
            as to the value in error. It should not be provided for fields that cannot
            be represented as a string (i.e., binary data).
        IncValueInd:
          type: boolean
          description: Include Value Indicator.
    DocumentSelType:
      title: DocumentSelType
      type: object
      properties:
        DocumentKeys:
          $ref: '#/components/schemas/DocumentKeysType'
        DocSelCriteria:
          type: array
          description: Document Selection Criteria.
          items:
            $ref: '#/components/schemas/DocSelCriteriaType'
        DtRange:
          $ref: '#/components/schemas/DtRangeType'
        UseXferKeywordInd:
          type: boolean
          description: Use Xfer Keyword Indicator. Use middleware transalation for
            keywords provided in the selection.
        KeywordSel:
          type: array
          description: Keyword Selection.
          items:
            $ref: '#/components/schemas/KeywordSelType'
        DocProperties:
          type: array
          description: Document Properties. Specifies the document properties to be
            provided in the response.
          items:
            $ref: '#/components/schemas/DocPropertiesType'
        KeywordGroupInd:
          type: boolean
          description: Keyword Group Indicator. Set to true indicates that the keywords
            are grouped by MIKG or SIKG.
        KeywordMultireplace:
          maxLength: 80
          type: string
          description: Multireplaceplace. The value "*" retruns all keywords and related
            values.
        KeywordsRequested:
          type: array
          description: Keywords Requested. Soecifies the document keys to be returned
            by the response.
          items:
            $ref: '#/components/schemas/KeywordsRequestedType'
        PageFormat:
          type: string
          description: Page Format.
        PageNumRange:
          $ref: '#/components/schemas/PageNumRangeType'
        PageNum:
          type: integer
          description: Page Number.
          format: int64
        IncAllPagesInd:
          type: boolean
          description: Include All Pages Indicator.
        MetaData:
          type: array
          description: Meta Data.
          items:
            $ref: '#/components/schemas/MetaDataType'
    DocumentInqRqType:
      title: DocumentInqRqType
      required:
      - DocumentSel
      type: object
      properties:
        RecCtrlIn:
          $ref: '#/components/schemas/RecCtrlInType'
        DocumentSel:
          $ref: '#/components/schemas/DocumentSelType'
    RecCtrlOutType:
      title: RecCtrlOutType
      required:
      - SentRecCount
      type: object
      properties:
        SentRecCount:
          type: integer
          description: Sent Record Count. Number of records matching the selection
            criteria that are included in this message.
          format: int64
        MatchedRecCount:
          type: integer
          description: Matched Record Count. Total number of records matching the
            selection criteria.
          format: int64
        RemainRecCount:
          type: integer
          description: Remain Record Count.  Total number of records matching the
            selection criteria that have not been sent yet.
          format: int64
        Cursor:
          maxLength: 250
          type: string
          description: Cursor. Next Record Pointer Included in the response only if
            additional records are available.
    DocumentRecType:
      title: DocumentRecType
      required:
      - DocumentInfo
      - DocumentKeys
      - DocumentStatus
      type: object
      properties:
        DocumentKeys:
          $ref: '#/components/schemas/DocumentKeysType'
        DocumentInfo:
          $ref: '#/components/schemas/DocumentInfoType'
        DocumentStatus:
          $ref: '#/components/schemas/DocumentStatusType'
    DocumentInqRsType:
      title: DocumentInqRsType
      required:
      - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/RecCtrlOutType'
        DocumentRec:
          type: array
          description: Document Record.
          items:
            $ref: '#/components/schemas/DocumentRecType'
    DocumentListInfoType:
      title: DocumentListInfoType
      description: '[FSVR]Document List Information.'
      allOf:
      - $ref: '#/components/schemas/DocumentBasicType'
      - type: object
    DocumentListSelType:
      title: DocumentListSelType
      type: object
      properties:
        DocSelCriteria:
          $ref: '#/components/schemas/DocSelCriteriaType'
        DtRange:
          $ref: '#/components/schemas/DtRangeType'
        KeywordSel:
          type: array
          description: Keyword Selection.
          items:
            $ref: '#/components/schemas/KeywordSelType'
        DocProperties:
          type: array
          description: Document Properties. Specifies the document properties to be
            provided in the response.
          items:
            $ref: '#/components/schemas/DocPropertiesType'
    DocumentListInqRqType:
      title: DocumentListInqRqType
      required:
      - DocumentListSel
      type: object
      properties:
        RecCtrlIn:
          $ref: '#/components/schemas/RecCtrlInType'
        DocumentListSel:
          $ref: '#/components/schemas/DocumentListSelType'
    DocumentListRecType:
      title: DocumentListRecType
      required:
      - DocumentKeys
      - DocumentListInfo
      - DocumentStatus
      type: object
      properties:
        DocumentKeys:
          $ref: '#/components/schemas/DocumentKeysType'
        DocumentListInfo:
          $ref: '#/components/schemas/DocumentListInfoType'
        DocumentStatus:
          $ref: '#/components/schemas/DocumentStatusType'
    DocumentListInqRsType:
      title: DocumentListInqRsType
      required:
      - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        RecCtrlOut:
          $ref: '#/components/schemas/RecCtrlOutType'
        DocumentListRec:
          type: array
          description: Document List Record.
          items:
            $ref: '#/components/schemas/DocumentListRecType'
    DocumentModRqType:
      title: DocumentModRqType
      required:
      - DocumentInfo
      - DocumentKeys
      type: object
      properties:
        OvrdAutoAckInd:
          type: boolean
          description: Override AutoAcknowledge Indicator. Used when the midleware
            is in charge of  auto-acknowledgement of exceptions.
        OvrdExceptionData:
          $ref: '#/components/schemas/OvrdExceptionDataType'
        DocumentKeys:
          $ref: '#/components/schemas/DocumentKeysType'
        DocumentInfo:
          type: array
          description: Document Information.
          items:
            $ref: '#/components/schemas/DocumentInfoType'
    DocumentModRsType:
      title: DocumentModRsType
      required:
      - Status
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusType'
        DocumentStatusRec:
          $ref: '#/components/schemas/DocumentStatusRecType'
